/*==============================================================================

								AEons of Death
							    Item Code Base
									v6.66

==============================================================================*/

// Used for identification purposes. This makes it easier to perform things like
// CheckClass functions when searching for ancestors.

Class AEoDInventory : Inventory 			{	Default { +NOTELESTOMP	} }
Class AEoDCustomInventory : CustomInventory {	Default { +NOTELESTOMP	} }
Class AEoDAmmo : Ammo						{	Default { +NOTELESTOMP	} }

// This goes for the actual weapon itself.
Class AEoDWeaponBase : Weapon
{
	Default
	{
		+INVENTORY.IGNORESKILL
		+INVENTORY.UNTOSSABLE
		+INVENTORY.UNDROPPABLE
		+WEAPON.CHEATNOTWEAPON
		+DONTGIB
		+NOTELESTOMP
		Tag "REPLACE ME YOU IDIOT!";
	}
	
	Name, Int, Cvar GetCvarThings()
	{	
		Name AEoDCvar = 'user_'..GetClassName();
		Cvar check = Cvar.GetCvar(AEoDCvar, owner.player);
		if (!check)	
			return '', 0, null;
		
		return AEoDCvar, check.GetInt(), check;
	}
	
	Int GetModIndex()
	{	
		Name AEoDCvar = 'user_'..GetClassName();
		Cvar check = Cvar.GetCvar(AEoDCvar, owner.player);
		
		if (!check)	return -1;
		
		return check.GetInt();
	}
	
	States
	{
	Spawn:
		TNT1 A 0;
		Stop;
	}
}

Class AEoDWeaponSlot01 : AEoDWeaponBase { Default { Weapon.SlotNumber 1; 	} }
Class AEoDWeaponSlot02 : AEoDWeaponBase { Default { Weapon.SlotNumber 2; 	} }
Class AEoDWeaponSlot03 : AEoDWeaponBase { Default { Weapon.SlotNumber 3; 	} }
Class AEoDWeaponSlot04 : AEoDWeaponBase { Default { Weapon.SlotNumber 4; 	} }
Class AEoDWeaponSlot05 : AEoDWeaponBase { Default { Weapon.SlotNumber 5; 	} }
Class AEoDWeaponSlot06 : AEoDWeaponBase { Default { Weapon.SlotNumber 6; 	} }
Class AEoDWeaponSlot07 : AEoDWeaponBase { Default { Weapon.SlotNumber 7; 	} }
Class AEoDWeaponSlot08 : AEoDWeaponBase { Default { Weapon.SlotNumber 8; 	} }
Class AEoDWeaponSlot09 : AEoDWeaponBase { Default { Weapon.SlotNumber 9; 	} }
Class AEoDWeaponSlot10 : AEoDWeaponBase { Default { Weapon.SlotNumber 10;	} }

// This is for the actors doing the pickup checking on slot limits.
Class AEoDWeaponPickup : AEoDCustomInventory
{
	Default
	{
		+INVENTORY.IGNORESKILL	
		+FLOORCLIP
		+DONTGIB
		+NOTELESTOMP
	}
}

Class AEoDWeaponDrop : AEoDCustomInventory
{
	Default
	{
		+INVENTORY.UNDROPPABLE
		+INVENTORY.UNTOSSABLE
		+NOTELESTOMP
	}
}