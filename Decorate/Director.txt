ACTOR DirectorSpawner : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SpawnItemEx("TheDirector",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_NOPOINTERS|SXF_SETTARGET)
		Stop
	}
}

Actor MonDirIntensity : Inventory
{	Inventory.MaxAmount 666	}

Actor DirSmallChildCount : Inventory
{	Inventory.MaxAmount 100	}

Actor DirMediumChildCount : Inventory
{	Inventory.MaxAmount 100	}

Actor DirLargeChildCount : Inventory
{	Inventory.MaxAmount 100	}

Actor FreezeDirector : Inventory {}
Actor RemoveDirector : Inventory {}

Actor LargeCooldown : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	Inventory.MaxAmount 0
	States
	{
	Use:
		TNT1 A 0 A_SetUserArray("user_cooldown",0,random(300,600))
		Stop
	}
}

Actor MediumCooldown : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	Inventory.MaxAmount 0
	States
	{
	Use:
		TNT1 A 0 A_SetUserArray("user_cooldown",0,random(200,450))
		Stop
	}
}

Actor SmallCooldown : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	Inventory.MaxAmount 0
	States
	{
	Use:
		TNT1 A 0 A_SetUserArray("user_cooldown",1,random(100,150))
		Stop
	}
}


Actor CooldownDisable1 : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	Inventory.MaxAmount 0
	States
	{
	Use:
		TNT1 A 0 A_SetUserArray(user_cooldown,0,0)
		Stop
	}
}

Actor CooldownDisable2 : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	Inventory.MaxAmount 0
	States
	{
	Use:
		TNT1 A 0 A_SetUserArray(user_cooldown,1,0)
		Stop
	}
}

Actor SmallSpawnToken : Inventory
{
	Inventory.MaxAmount 20
	Inventory.InterHubAmount 20
}

Actor TheDirector
{
	var int user_mul;
	var int user_bias[2];
	//Biasity (#/256) to jump to the medium and large spawning categories.
	//random(1,256) <= user_bias[#]
	//[0] = Medium spawn chance
	//[1] = Large spawn chance
	var int user_cc[4];
	//Max number of children allowed active at any time.
	//Determined by script.
	//[0] = Small spawners
	//[1] = Medium spawners
	//[2] = Large spawners
	//[3] = Absolute maximum of total children at any time.
	var int user_cd[7];
	//Will be used by the script to determine current intensities.
	//[0] = Small cooldown min
	//[1] = Small cooldown max
	//[2] = Medium cooldown min
	//[3] = Medium cooldown max
	//[4] = Large cooldown min
	//[5] = Large cooldown max
	//[6] = Random amount to add to cooldowns from 0 to [3]
	var int user_cooldown[2];
	//[0] = Normal cooldown
	//[1] = Exclusive small child countdown
	Monster
	+NEVERTARGET
	-COUNTKILL
	+CANTSEEK
	+FLOORHUGGER
	+NORADIUSDMG
	+THRUACTORS
	+NOBLOOD
	+NOTELEPORT
	+FORCEPAIN
	+LOOKALLAROUND
	+NOTARGETSWITCH
	+NONSHOOTABLE
	-SHOOTABLE
	-CANUSEWALLS
	-CANPUSHWALLS
	-ACTIVATEMCROSS
	-SOLID
	-NODROPOFF
	+DROPOFF
	+NOTRIGGER
	+NOBLOCKMAP
	+NOFEAR
	+NOTELESTOMP
	+NOCLIP
	+DONTTHRUST
	+NODAMAGE
	+NOPAIN
	+DONTSPLASH
	+DONTCORPSE
	Radius 120
	Height 80
	Speed 20
	Health 1000000
	DamageFactor "Normal", 0
	Species "Director"
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetUserArray(user_bias,0,48) //#/256 chance to spawn medium
		TNT1 A 0 A_SetUserArray(user_bias,1,24) //^ large
		TNT1 A 0 A_SetUserArray(user_cc,0,3) //max small children spawners
		TNT1 A 0 A_SetUserArray(user_cc,1,2) //^ medium
		TNT1 A 0 A_SetUserArray(user_cc,2,1) //^ large
		TNT1 A 0 A_SetUserArray(user_cc,3,12) //Absolute maximum number of children at any time.
		TNT1 A 0 A_SetUserArray(user_cd,0,750) //Small cooldown min
		TNT1 A 0 A_SetUserArray(user_cd,1,2000) //Small cooldown max
		TNT1 A 0 A_SetUserArray(user_cd,2,2000) //Medium cooldown min
		TNT1 A 0 A_SetUserArray(user_cd,3,4500) //Medium cooldown max
		TNT1 A 0 A_SetUserArray(user_cd,4,3000) //Large cooldown min
		TNT1 A 0 A_SetUserArray(user_cd,5,6000) //Large cooldown max
		TNT1 A 1 A_SetUserArray(user_cd,6,random(50,175))
		TNT1 A 0 A_SetUserVar(user_mul,CallACS("DirectorIntensity",1))
		TNT1 A 0 A_JumpIf(user_mul > 0,"SCont")
		TNT1 A 0 A_PrintBold("Multiplier was 0. This should not happen!\nReport this to the AEoD team immediately.",7.0)
		TNT1 A 0 A_SetUserVar(user_mul,3) //Prevent division by 0.
		Goto SCont
	SCont:
		TNT1 A 0 A_ChangeFlag("FRIENDLY",0)
		TNT1 A 0 A_RearrangePointers(AAPTR_PLAYER1,AAPTR_NULL,AAPTR_NULL,3)
		Goto Idle
	TwoMinutes:
		TNT1 A 0 A_TakeInventory("PFirstTimeToken",1,0,AAPTR_PLAYER1)
		TNT1 A 0 A_GiveInventory("SmallSpawnToken",20,AAPTR_PLAYER1)
		TNT1 AAAAAAAAAAAA 350
		TNT1 AA 35
		TNT1 A 0 A_Warp(AAPTR_PLAYER1,0,0,0,0,WARPF_NOCHECKPOSITION)
		Goto Chasing
	Idle:
		TNT1 A 1 A_Look
		Loop
	See:
		TNT1 AAAAAA 350 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_PLAYER1) //~10 seconds per frame
		TNT1 A 0 A_JumpIfInventory("PFirstTimeToken",1,"TwoMinutes",AAPTR_PLAYER1)
		TNT1 A 0 A_Warp(AAPTR_PLAYER1,0,0,0,0,WARPF_NOCHECKPOSITION)
	Chasing:
		TNT1 AAA 2 A_Chase
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		TNT1 A 0 A_JumpIf(user_cooldown[0]<=0,2)
		TNT1 A 0 A_SetUserArray("user_cooldown",0,user_cooldown[0]-(user_mul*random(7,10)))
		TNT1 A 0 A_JumpIf(user_cooldown[1]<=0,"Chasing")
		TNT1 A 0 A_SetUserArray("user_cooldown",1,user_cooldown[1]-(user_mul*random(7,10)))
		Loop
	Missile:
		TNT1 A 0 A_JumpIf(IsPointerEqual(AAPTR_TARGET,AAPTR_PLAYER1),2)
		TNT1 A 0 A_RearrangePointers(AAPTR_PLAYER1,AAPTR_DEFAULT,AAPTR_DEFAULT,4) //Always ensure the player is the target.
		TNT1 A 0 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION)
		TNT1 A 0 A_JumpIfInventory("SmallSpawnToken",1,"SmallMobShoot",AAPTR_PLAYER1)
		TNT1 A 3 A_FaceTarget
		TNT1 A 0 A_JumpIf(user_mul < 666,"Missile2")
		TNT1 A 0 A_Jump(256,"SmallMobShoot","MediumMobShoot","LargeMobShoot")
		Goto SmallMobShoot
	Missile2:
		//The -# is needed because at a base of 1, it still adds on 4 and 6 to large/medium.
		//Think of it in terms of n-1.
		TNT1 A 0 A_JumpIf(random(1,2560) <= ((user_bias[1]+(user_mul*40))-40),"LargeMobShoot")
		TNT1 A 0 A_JumpIf(random(1,2560) <= ((user_bias[0]+(user_mul*60))-60),"MediumMobShoot")
		Goto SmallMobShoot
	LargeMobShoot:
		TNT1 A 0 A_JumpIf(user_cooldown[0] > 0,"Chasing")
		TNT1 A 0 A_JumpIfInventory("DirLargeChildCount",user_cc[2]+user_mul,"Chasing")
		TNT1 A 0 A_JumpIfInventory("DirLargeChildCount",user_cc[3],"Chasing")
		TNT1 A 0 Thing_ChangeTID(0,32766)
		TNT1 A 1 A_SpawnItemEx("MCLargeMobRunner",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID,0,user_mul)
		TNT1 A 0 A_JumpIf(tid != 0,"Chasing")
		TNT1 A 0 A_GiveInventory("DirLargeChildCount",1)
		TNT1 A 0 A_SetUserArray(user_cooldown,0,random(user_cd[4],user_cd[5])+random(0,user_cd[6]))
		Goto ChanceCD
	MediumMobShoot:
		TNT1 A 0 A_JumpIf(user_cooldown[0] > 0,"Chasing")
		TNT1 A 0 A_JumpIfInventory("DirMediumChildCount",user_cc[1]+user_mul,"Chasing")
		TNT1 A 0 A_JumpIfInventory("DirMediumChildCount",user_cc[3],"Chasing")
		TNT1 A 0 Thing_ChangeTID(0,32766)
		TNT1 A 1 A_SpawnItemEx("MCMediumMobRunner",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID,0,user_mul)
		TNT1 A 0 A_JumpIf(tid != 0,"Chasing")
		TNT1 A 0 A_GiveInventory("DirMediumChildCount",1)
		TNT1 A 0 A_SetUserArray(user_cooldown,0,random(user_cd[2],user_cd[3])+random(0,user_cd[6]))
		Goto ChanceCD
	SmallMobShoot:
		TNT1 A 0 A_JumpIf(user_cooldown[1] > 0,"Chasing")
		TNT1 A 0 A_TakeInventory("SmallSpawnToken",1,0,AAPTR_PLAYER1)
		TNT1 A 0 A_JumpIfInventory("DirSmallChildCount",user_cc[0]+user_mul,"Chasing")
		TNT1 A 0 A_JumpIfInventory("DirSmallChildCount",user_cc[3],"Chasing")
		TNT1 A 0 Thing_ChangeTID(0,32766)
		TNT1 A 1 A_SpawnItemEx("MCSmallMobRunner",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID,0,user_mul)
		TNT1 A 0 A_JumpIf(tid != 0,"Chasing")
		TNT1 A 0 A_GiveInventory("DirSmallChildCount",1)
		//Note that this cooldown is exclusive and runs individually unlike the other.
		TNT1 A 0 A_SetUserArray(user_cooldown,1,random(user_cd[0],user_cd[1])+random(0,user_cd[6])) 
		Goto ChanceCD
	ChanceCD:
		TNT1 A 0 A_Jump(240,"Chasing")
		TNT1 A 0 A_Jump(256,1,1,2,2,3,3,4)
		TNT1 AAAAAA 350
		Goto Chasing
	Frozen:
		TNT1 A 35 A_Stop
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_PLAYER1)
		Goto Chasing
	Death:
		TNT1 A 35 A_RemoveChildren(1,RMVF_EVERYTHING,None,"Director")
		TNT1 A 0 A_TakeInventory("FreezeDirector",32767,0,AAPTR_PLAYER1)
		TNT1 A 0 A_TakeInventory("RemoveDirector",32767,0,AAPTR_PLAYER1)
		Stop
	}
}

Actor MCLargeMobRunner
{
	var int user_boss[2];
	//[0] = Cyberdemon or Spider Mastermind?
	//[1] = Have we chosen to spawn the big baddies above?
	var int user_dlimit;
	var int user_t;
	var int user_tid;
	Monster
	+THRUACTORS
	+FRIGHTENED
	+DONTTHRUST
	-SOLID
	+NEVERTARGET
	-COUNTKILL
	+CANTSEEK
	+FLOORHUGGER
	+NORADIUSDMG
	+NOBLOOD
	-TELESTOMP
	+LOOKALLAROUND
	+NOTARGETSWITCH
	+NONSHOOTABLE
	-SHOOTABLE
	-CANUSEWALLS
	-CANPUSHWALLS
	-ACTIVATEMCROSS
	+CANTLEAVEFLOORPIC
	+NOTRIGGER
	+NOTELESTOMP
	+DONTSPLASH
	+DONTCORPSE
	+NOBLOCKMAP
	+LAXTELEFRAGDMG
	+ALWAYSTELEFRAG
	+NOPAIN
	Speed 7
	Radius 128
	Height 100
	Health 1000000
	DamageFactor "Normal", 0.0
	DamageFactor "DirectorKiller", 32767
	Species "Director"
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetUserVar(user_tid,tid) //ACS_NamedExecuteAlways("DirectorLimiter",0,3,0)
		TNT1 A 0 Thing_ChangeTID(0,0)
		//Chooses between spider mastermind and cyberdemon.
		TNT1 A 0 A_SetUserArray("user_boss",0,random(0,1))
		TNT1 A 0 A_SetUserVar("user_dlimit",0)
		//TNT1 A 0 A_GiveInventory("CooldownEnable1",1,AAPTR_MASTER)
	Idle:
		TNT1 AAAAA 1 A_Look
		Loop
	See:
	Wanderbout:
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		TNT1 A 1 A_Chase("","")
		TNT1 AAAAAAAAA 1 A_Wander
		TNT1 A 0 A_JumpIf(user_t >= 70,4)
		TNT1 A 0 A_SetUserVar(user_t,user_t+1)
		TNT1 A 0 A_JumpIf(user_t < 70,2)
		TNT1 A 0 A_ChangeFlag("CANTLEAVEFLOORPIC",0)
		TNT1 A 0 A_ChangeFlag("NOBLOCKMAP",0)
		TNT1 A 0 A_CheckBlock("Stuck",CBF_DROPOFF)
		TNT1 A 0 A_ChangeFlag("NOBLOCKMAP",1)
	Mobmaking:
		TNT1 A 0 A_JumpIfTargetInLOS("Wanderbout",360)
		TNT1 A 0 A_JumpIfCloser(250,"Wanderbout")
		TNT1 A 0 A_CheckSight(1)
		Goto Wanderbout
		TNT1 A 0 A_JumpIf(user_boss[1]==1,"SC1")
		TNT1 A 0 A_Jump(64,"BossCheck")
		Goto ArchvileSpawn
	BossCheck:
		TNT1 A 0 A_SetUserArray("user_boss",1,1)
	SC1:
		TNT1 A 0 A_UnsetSolid
		TNT1 A 1 A_Chase("","")
		TNT1 A 0 A_JumpIfTargetInLOS("SC1",360)
		TNT1 A 0 A_JumpIfCloser(250,"SC1")
		TNT1 A 0 A_JumpIf(user_boss[0]==1,"CyberdemonSpawn")
		Goto SpiderMasterMindSpawn
	CyberdemonSpawn:
		TNT1 A 0 Thing_ChangeTID(0,32666)
		TNT1 A 0 A_SpawnItemEx("CyberdemonReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		TNT1 A 2 A_JumpIf(tid!=0,"See") //Means the actor failed to spawn.
		TNT1 A 0 A_TakeFromSiblings("AEoDToken",100) //These are needed for the soul reaper conversion to work.
		TNT1 A 0 A_GiveToSiblings("AEoDToken",1) //Otherwise, it will just default to destroying them.
		Goto Vanish //One-hit wonder. We really don't need these things spawning more than one.
	SpiderMasterMindSpawn:
		TNT1 A 0 Thing_ChangeTID(0,32666)
		TNT1 A 0 A_SpawnItemEx("SpiderMastermindReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		TNT1 A 0 A_JumpIf(tid != 0,"See")
		TNT1 A 0 A_TakeFromSiblings("AEoDToken",100)
		TNT1 A 0 A_GiveToSiblings("AEoDToken",1)
		Goto Vanish
	ArchvileSpawn:
		TNT1 A 0 Thing_ChangeTID(0,32666)
		TNT1 A 0 A_SpawnItemEx("ArchvileReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		TNT1 A 0 A_JumpIf(tid != 0,"See")
		TNT1 A 0 A_TakeFromSiblings("AEoDToken",100)
		TNT1 A 0 A_GiveToSiblings("AEoDToken",1)
		Goto CountUp
	CountUp:
		TNT1 A 0 A_SetUserVar("user_dlimit",user_dlimit+1)
		TNT1 A 0 A_JumpIf(user_dlimit>=4,"Vanish")
		Goto See
	Vanish:
		TNT1 A 0 A_TakeInventory("DirLargeChildCount",1,0,AAPTR_MASTER)
		//TNT1 A 0 A_GiveInventory("CooldownDisable1",1,AAPTR_MASTER)
		//TNT1 A 0 A_GiveInventory("LargeCooldown",1,AAPTR_MASTER)
		TNT1 A 0 A_DropItem("AEoD6SpellSpawner",1,4)
		TNT1 A 0 A_DropItem("BFGReplacer",1,128)
		TNT1 A 0 A_DropItem("PlasmaRifleReplacer",1,128)
		TNT1 A 0 A_DropItem("RocketLauncherReplacer",1,128)
		TNT1 A 0 A_DropItem("ChaingunReplacer",1,128)
		TNT1 A 0 A_DropItem("SSGReplacer",1,128)
		TNT1 A 0 A_DropItem("ShotgunReplacer",1,128)
		TNT1 AAA 0 A_DropItem("ShellBoxReplacer",1,128)
		TNT1 AAAA 0 A_DropItem("ClipBoxReplacer",1,128)
		TNT1 AAA 0 A_DropItem("RocketBoxReplacer",1,128)
		TNT1 AAA 0 A_DropItem("CellPackReplacer",1,128)
		TNT1 A 0 A_DropItem("Megasphere",1,36)
		TNT1 A 0 A_DropItem("SoulSphere",1,66)
		TNT1 AAAAAAAAA 0 A_DropItem("Medikit",1,164)
		TNT1 AAA 0 A_DropItem("PowerupsSpawnerDirector",1,192)
		TNT1 A 0 //A_Log("Large Monsters Done")//ACS_NamedExecuteAlways("DirectorLimiter",0,4,0)
		Stop
	Stuck:
		TNT1 A 0 A_GiveInventory("CooldownDisable1",1,AAPTR_MASTER)
		TNT1 A 0 A_JumpIf(user_dlimit > 0, "Vanish")
		TNT1 A 0 A_TakeInventory("DirLargeChildCount",1,0,AAPTR_MASTER)
		Stop
	SpecialDrops:
		TNT1 A 0 A_DropItem("BeastlyHealthDropper",0,256)
		TNT1 AAA 0 A_DropItem("PowerupsSpawnerDirector",0,160)
		TNT1 A 0 A_DropItem("RandomWeaponPower",0,256)
		Stop
	Frozen:
		TNT1 A 35 A_Stop
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		Goto See
	Death:
		TNT1 A 0 //ACS_NamedExecuteAlways("DirectorLimiter",0,4,0)
		Stop
	}
}


Actor MCMediumMobRunner
{
	Radius 64
	Height 40
	var int user_dlimit;
	var int user_t;
	var int user_tid;
	Monster
	+THRUACTORS
	+FRIGHTENED
	+DONTTHRUST
	-SOLID
	+NEVERTARGET
	-COUNTKILL
	+CANTSEEK
	+FLOORHUGGER
	+NORADIUSDMG
	+NOBLOOD
	-TELESTOMP
	+LOOKALLAROUND
	+NOTARGETSWITCH
	+NONSHOOTABLE
	-SHOOTABLE
	-CANUSEWALLS
	-CANPUSHWALLS
	-ACTIVATEMCROSS
	+CANTLEAVEFLOORPIC
	+NOTRIGGER
	+NOTELESTOMP
	+DONTSPLASH
	+DONTCORPSE
	+NOBLOCKMAP
	+LAXTELEFRAGDMG
	+ALWAYSTELEFRAG
	+NOPAIN
	//MaxDropOffHeight 128
	//MaxStepHeight 128
	Speed 7
	Health 1000000
	DamageFactor "Normal", 0.0
	DamageFactor "DirectorKiller", 32767
	Species "Director"
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetUserVar(user_tid,tid)
		TNT1 A 0 Thing_ChangeTID(0,0) //ACS_NamedExecuteAlways("DirectorLimiter",0,3,0)
	Idle:
		TNT1 AAAAA 1 A_Look
		Loop
	See:
	Wanderbout:
		TNT1 A 0 Thing_ChangeTID(0,0)
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		TNT1 A 1 A_Chase("","")
		TNT1 AAAAAAAAA 1 A_Wander
		TNT1 A 0 A_JumpIf(user_t >= 70,4)
		TNT1 A 0 A_SetUserVar(user_t,user_t+1)
		TNT1 A 0 A_JumpIf(user_t < 70,2)
		TNT1 A 0 A_ChangeFlag("CANTLEAVEFLOORPIC",0)
		TNT1 A 0 A_ChangeFlag("NOBLOCKMAP",0)
		TNT1 A 0 A_CheckBlock("Stuck",CBF_DROPOFF)
		TNT1 A 0 A_ChangeFlag("NOBLOCKMAP",1)
	Mobmaking:
		TNT1 A 0 A_JumpIfTargetInLOS("Wanderbout",360)
		TNT1 A 0 A_JumpIfCloser(250,"Wanderbout")
		TNT1 A 0 A_CheckSight(1)
		Goto Wanderbout
		TNT1 A 0 Thing_ChangeTID(0,32667) 
		//The above call is used to check and see if the spawning worked.
		//If it did, its TID is set to 0.
		TNT1 A 0 //A_Log("Medium Monster")
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,"Wanderbout")
		TNT1 A 0 A_SpawnItemEx("FatsoReplacer",0,0,5,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("RevenantReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("HellKnightReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("BaronofHellReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("PainReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("CacoReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("ArachnotronReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
	CountUp:
		TNT1 A 2 A_JumpIf(tid!=0,"Wanderbout") //Means it didn't work.
		TNT1 A 0 A_TakeFromSiblings("AEoDToken",100)
		TNT1 A 0 A_GiveToSiblings("AEoDToken",1)
		TNT1 A 0 //A_Log("Good")
		TNT1 A 0 A_SetUserVar("user_dlimit",user_dlimit+1)
		TNT1 A 0 A_JumpIf(user_dlimit >= 4,"Vanish")
		Goto Wanderbout
	Vanish:
		TNT1 A 0 A_TakeInventory("DirMediumChildCount",1,0,AAPTR_MASTER)
		TNT1 A 0 A_JumpIf(user_tid >= 666,"SpecialDrops")
		//TNT1 A 0 A_GiveInventory("CooldownDisable1",1,AAPTR_MASTER)
		//TNT1 A 0 A_GiveInventory("MediumCooldown",1,AAPTR_MASTER)
		TNT1 A 0 A_DropItem("AEoD6SpellSpawner",1,1)
		TNT1 A 0 A_DropItem("BFGReplacer",1,16)
		TNT1 A 0 A_DropItem("PlasmaRifleReplacer",1,66)
		TNT1 A 0 A_DropItem("RocketLauncherReplacer",12,76)
		TNT1 A 0 A_DropItem("SSGReplacer",1,106)
		TNT1 A 0 A_DropItem("ShotgunReplacer",1,164)
		TNT1 A 0 A_DropItem("ChaingunReplacer",1,164)
		TNT1 AA 0 A_DropItem("ShellBoxReplacer",1,96)
		TNT1 AAA 0 A_DropItem("ClipBoxReplacer",1,96)
		TNT1 AA 0 A_DropItem("RocketBoxReplacer",1,96)
		TNT1 AA 0 A_DropItem("CellPackReplacer",1,96)
		TNT1 A 0 A_DropItem("Megasphere",1,4)
		TNT1 A 0 A_DropItem("SoulSphere",1,11)
		TNT1 AAAAAAA 0 A_DropItem("Medikit",1,128)
		TNT1 AAA 0 A_DropItem("PowerupsSpawnerDirector",1,128)
		TNT1 A 0 //A_Log("Medium Monsters Done")
		Stop
	Frozen:
		TNT1 A 35 A_Stop
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		Goto See
	Stuck:
		TNT1 A 0 A_GiveInventory("CooldownDisable1",1,AAPTR_MASTER)
		TNT1 A 0 A_JumpIf(user_dlimit > 0, "Vanish")
		TNT1 A 0 A_TakeInventory("DirMediumChildCount",1,0,AAPTR_MASTER)
		Stop
	SpecialDrops:
		TNT1 A 0 A_DropItem("BeastlyHealthDropper",0,192)
		TNT1 AAA 0 A_DropItem("PowerupsSpawnerDirector",0,160)
		TNT1 A 0 A_DropItem("RandomWeaponPower",0,220)
		TNT1 A 0 A_Jump(192,1,2,3,4,5,6)
		Stop
		TNT1 A 0 A_DropItem("BFGReplacer",0,256)				Stop
		TNT1 A 0 A_DropItem("PlasmaRifleReplacer",0,256)		Stop
		TNT1 A 0 A_DropItem("RocketLauncherReplacer",0,256)		Stop
		TNT1 A 0 A_DropItem("SSGReplacer",0,256)				Stop
		TNT1 A 0 A_DropItem("ShotgunReplacer",0,256)			Stop
		TNT1 A 0 A_DropItem("ChaingunReplacer",0,256)			Stop
	Death:
		TNT1 A 0
		Stop
	}
}

Actor MCSmallMobRunner
{
	var int user_dlimit;
	var int user_t;
	var int user_tid;
	Radius 30
	Height 56
	Monster
	+THRUACTORS
	+FRIGHTENED
	+DONTTHRUST
	-SOLID
	+NEVERTARGET
	-COUNTKILL
	+CANTSEEK
	+FLOORHUGGER
	+NORADIUSDMG
	+NOBLOOD
	-TELESTOMP
	+LOOKALLAROUND
	+NOTARGETSWITCH
	+NONSHOOTABLE
	-SHOOTABLE
	-CANUSEWALLS
	-CANPUSHWALLS
	-ACTIVATEMCROSS
	+CANTLEAVEFLOORPIC
	+NOTRIGGER
	+NOTELESTOMP
	+DONTSPLASH
	+DONTCORPSE
	+NOBLOCKMAP
	+LAXTELEFRAGDMG
	+ALWAYSTELEFRAG
	+NOPAIN
	//MaxDropOffHeight 128
	//MaxStepHeight 128
	Speed 7
	Health 1000000
	DamageFactor "Normal", 0.0
	DamageFactor "DirectorKiller", 32767
	Species "Director"
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetUserVar(user_tid,tid)
		TNT1 A 0 Thing_ChangeTID(0,0) //ACS_NamedExecuteAlways("DirectorLimiter",0,1,0)
		TNT1 A 0 A_SetUserVar("user_dlimit",0)
	Idle:
		TNT1 AAAAA 1 A_Look
		Loop
	See:
	Wanderbout:
		TNT1 A 0 Thing_ChangeTID(0,0)
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		TNT1 A 1 A_Chase("","")
		TNT1 AAAAAAAAA 1 A_Wander
		TNT1 A 0 A_JumpIf(user_t >= 70,4)
		TNT1 A 0 A_SetUserVar(user_t,user_t+1)
		TNT1 A 0 A_JumpIf(user_t < 70,2)
		TNT1 A 0 A_ChangeFlag("CANTLEAVEFLOORPIC",0)
		TNT1 A 0 A_ChangeFlag("NOBLOCKMAP",0)
		TNT1 A 0 A_CheckBlock("Stuck",CBF_DROPOFF)
		TNT1 A 0 A_ChangeFlag("NOBLOCKMAP",1)
	Mobmaking:
		TNT1 A 0 A_JumpIfTargetInLOS("Wanderbout",360)
		TNT1 A 0 A_JumpIfCloser(250,"Wanderbout")
		TNT1 A 0 A_CheckSight(1)
		Goto Wanderbout
		TNT1 A 0 Thing_ChangeTID(0,32668)
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6)
		TNT1 A 0 A_SpawnItemEx("ZombieReplacer",0,0,5,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("ShotguyReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("ChainguyReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("ImpReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("LostSoulReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("DemonReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
	CountUp:
		TNT1 A 0 A_JumpIf(tid != 0,"Wanderbout")
		TNT1 A 0 A_TakeFromSiblings("AEoDToken",100)
		TNT1 A 0 A_GiveToSiblings("AEoDToken",1)
		TNT1 A 0 A_SetUserVar("user_dlimit",user_dlimit+1)
		TNT1 A 0 A_JumpIf(user_dlimit>=10,"Vanish")
		Goto Wanderbout
	Vanish:
		TNT1 A 0 A_TakeInventory("DirSmallChildCount",1,0,AAPTR_MASTER)
		TNT1 A 0 A_JumpIf(user_tid >= 666,"SpecialDrops")
		TNT1 A 0 A_DropItem("RocketLauncherReplacer",1,16)
		TNT1 A 0 A_DropItem("SSGReplacer",1,36)
		TNT1 A 0 A_DropItem("ShotgunReplacer",1,76)
		TNT1 A 0 A_DropItem("ChaingunReplacer",1,66)
		TNT1 AA 0 A_DropItem("ShellBoxReplacer",0,96)
		TNT1 AA 0 A_DropItem("ClipBoxReplacer",0,96)
		TNT1 AA 0 A_DropItem("RocketBoxReplacer",0,32)
		TNT1 AA 0 A_DropItem("CellPackReplacer",0,32)
		TNT1 A 0 A_DropItem("SoulSphere",0,16)
		TNT1 AAAAA 0 A_DropItem("Medikit",0,128)
		TNT1 AAA 0 A_DropItem("PowerupsSpawnerDirector",0,48)
		Stop
	Frozen:
		TNT1 A 35 A_Stop
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)		
		Goto Wanderbout
	Stuck:
		TNT1 A 0 A_JumpIf(user_dlimit > 0, "Vanish")
		TNT1 A 0 A_TakeInventory("DirSmallChildCount",1,0,AAPTR_MASTER)
		Stop
	SpecialDrops:
		TNT1 A 0 A_DropItem("SoulSphere",0,192)
		TNT1 AAA 0 A_DropItem("PowerupsSpawnerDirector",0,128)
		TNT1 A 0 A_DropItem("RandomWeaponPower",0,128)
		TNT1 A 0 A_Jump(128,1,2,3,4)
		Stop
		TNT1 A 0 A_DropItem("RocketLauncherReplacer",0,256)		Stop
		TNT1 A 0 A_DropItem("SSGReplacer",0,256)				Stop
		TNT1 A 0 A_DropItem("ShotgunReplacer",0,256)			Stop
		TNT1 A 0 A_DropItem("ChaingunReplacer",0,256)			Stop
	Death:
		TNT1 A 1
		Stop
	}
}

Actor SpawnSmallMonster : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		//TNT1 A 0 A_PrintBold("Spawned")
		TNT1 A 0 A_SpawnItemEx("MCSmallMobRunner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
		Stop
	}
}

Actor SpawnMediumMonster : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SpawnItemEx("MCMediumMobRunner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
		Stop
	}
}

Actor SpawnLargeMonster : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SpawnItemEx("MCLargeMobRunner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
		Stop
	}
}