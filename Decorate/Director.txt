ACTOR DirectorSpawner : CustomInventory
{
+INVENTORY.AUTOACTIVATE
Inventory.MaxAmount 1
States
{
Spawn:
		PLAY A -1 Bright
		Stop
	Use:
		TNT1 A 0 A_SpawnItemEx("TheDirector",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_NOPOINTERS|SXF_SETTARGET)
		Stop
	}
}

Actor FreezeDirector : Inventory
{
	Inventory.Amount 1
	Inventory.MaxAmount 1
}

Actor RemoveDirector : Inventory
{
	Inventory.Amount 1
	Inventory.MaxAmount 1
}

Actor LargeCooldown : CustomInventory
{
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
		TNT1 A 0 A_SetUserArray("user_cooldown",0,random(300,600))
		Stop
	}
}

Actor MediumCooldown : CustomInventory
{
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
		TNT1 A 0 A_SetUserArray("user_cooldown",0,random(200,450))
		Stop
	}
}

Actor SmallCooldown : CustomInventory
{
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
		TNT1 A 0 A_SetUserArray("user_cooldown",1,random(100,150))
		Stop
	}
}

Actor CooldownEnable1 : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SetUserArray("user_cooldown",2,1)
		Stop
	}
}

Actor CooldownEnable2 : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SetUserArray("user_cooldown",3,1)
		Stop
	}
}

Actor CooldownDisable1 : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SetUserArray("user_cooldown",2,0)
		Stop
	}
}

Actor CooldownDisable2 : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SetUserArray("user_cooldown",3,0)
		Stop
	}
}

Actor SmallSpawnToken : Inventory
{
	Inventory.MaxAmount 20
	Inventory.InterHubAmount 20
}

Actor TheDirector
{
	var int user_cooldown[4];
	//[0] = Normal cooldown
	//[1] = Exclusive small child countdown
	//[2] = Bool [0] on cooldown
	//[3] = Bool [1] on cooldown
	//[2] and [3] are basically checking if the spawners had successfully been
	//deployed. If not, they stay at 0 and no cooldown is initialized.
	var int user_largechildcount;
	var int user_mediumchildcount;
	var int user_smallchildcount;
	var int user_Type;
	Monster
	+NEVERTARGET
	-COUNTKILL
	+CANTSEEK
	+FLOORHUGGER
	+NORADIUSDMG
	+THRUACTORS
	+NOBLOOD
	-NOTELEPORT
	+FORCEPAIN
	+LOOKALLAROUND
	+NOTARGETSWITCH
	+NONSHOOTABLE
	-SHOOTABLE
	-CANUSEWALLS
	-CANPUSHWALLS
	-ACTIVATEMCROSS
	-SOLID
	-NODROPOFF
	+DROPOFF
	+NOTRIGGER
	+NOBLOCKMAP
	+NOFEAR
	+NOTELESTOMP
	+NOCLIP
	+DONTTHRUST
	+NODAMAGE
	+NOPAIN
	Radius 120
	Height 80
	Speed 20
	Health 1000000
	DamageFactor "Normal", 0
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0
		Goto SCont
	SCont:
		TNT1 A 0 A_ChangeFlag("FRIENDLY",0)
		TNT1 A 0 A_RearrangePointers(AAPTR_PLAYER1,AAPTR_NULL,AAPTR_NULL,3)
		Goto Idle
	TwoMinutes:
		TNT1 A 0 A_TakeInventory("PFirstTimeToken",1,0,AAPTR_PLAYER1)
		TNT1 A 0 A_GiveInventory("SmallSpawnToken",20,AAPTR_PLAYER1)
		TNT1 AAAAAAAAAAAA 350
		TNT1 AA 35
		TNT1 A 0 A_Warp(AAPTR_PLAYER1,0,0,0,0,WARPF_NOCHECKPOSITION)
		Goto Chasing
	Idle:
		TNT1 A 1 A_Look
		Loop
	See:
		TNT1 AAAAAA 350 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_PLAYER1) //~10 seconds per frame
		TNT1 A 0 A_JumpIfInventory("PFirstTimeToken",1,"TwoMinutes",AAPTR_PLAYER1)
		TNT1 A 0 A_Warp(AAPTR_PLAYER1,0,0,0,0,WARPF_NOCHECKPOSITION)
	Chasing:
		TNT1 AAA 2 A_Chase
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		TNT1 A 0 A_FaceTarget
		TNT1 A 0 A_Recoil(-4)
		TNT1 A 0 A_JumpIf(user_cooldown[0]<=0,2)
		TNT1 A 0 A_SetUserArray("user_cooldown",0,user_cooldown[0]-1)
		TNT1 A 0 A_JumpIf(user_cooldown[1]<=0,2)
		TNT1 A 0 A_SetUserArray("user_cooldown",1,user_cooldown[1]-1)
		TNT1 A 0
		Loop
	Missile:
		TNT1 A 0 A_JumpIf(IsPointerEqual(AAPTR_TARGET,AAPTR_PLAYER1),2)
		TNT1 A 0 A_RearrangePointers(AAPTR_PLAYER1,AAPTR_DEFAULT,AAPTR_DEFAULT,4) //Always ensure the player is the target.
		TNT1 A 0 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION)
		TNT1 A 0 A_JumpIfInventory("SmallSpawnToken",1,"SmallerMobPrep",AAPTR_PLAYER1)
		TNT1 A 3 A_FaceTarget
		TNT1 A 0 A_Jump(24,"LargeMobShoot")
		TNT1 A 0 A_Jump(48,"MediumMobshoot")
		Goto SmallerMobPrep
	SmallerMobPrep:
		TNT1 A 0 A_JumpIf(user_cooldown[3]==1,"Chasing")
		TNT1 A 0 A_JumpIf(user_cooldown[1]>=1,"Chasing")
		TNT1 A 0 A_TakeInventory("SmallSpawnToken",1,0,AAPTR_PLAYER1)
		TNT1 A 0 A_FaceTarget
		Goto SmallMobShoot
	LargeMobshoot:
		TNT1 A 0 A_JumpIf(user_cooldown[2]==1,"Chasing")
		TNT1 A 0 A_JumpIf(user_cooldown[0]>=1,"Chasing")
		TNT1 A 0 A_SetUserVar("user_largechildcount",0)
		//TNT1 A 0 //A_Log("Big Mob")
		TNT1 A 1 A_SpawnItemEx("MCLargeMobRunner",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS)
		//TNT1 A 0 //A_Log("Good")
		TNT1 A 0 A_SetUserVar("user_largechildcount",3)
		Goto Chasing
	MediumMobshoot:
		TNT1 A 0 A_JumpIf(user_cooldown[2]==1,"Chasing")
		TNT1 A 0 A_JumpIf(user_cooldown[0]>=1,"Chasing")
		TNT1 A 0 A_SetUserVar("user_mediumchildcount",0)
		//TNT1 A 0 //A_Log("Medium Mob")
		TNT1 A 1 A_SpawnItemEx("MCMediumMobRunner",0,0,1,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS)
		//TNT1 A 0 //A_Log("Good")
		TNT1 A 0 A_SetUserVar("user_mediumchildcount",5)
		Goto Chasing
	SmallMobshoot:
		TNT1 A 0 A_JumpIf(user_cooldown[3]==1,"Chasing")
		TNT1 A 0 A_JumpIf(user_cooldown[1]>=1,"Chasing")
		//TNT1 A 0 //A_Log("Small Mob")
		TNT1 A 1 A_SpawnItemEx("MCSmallMobRunner",0,0,1,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS)
		//TNT1 A 0 //A_Log("Good")
		TNT1 A 0 A_SetUserVar("user_smallchildcount",user_smallchildcount+5)
		//Note that this cooldown is exclusive and runs individually unlike the other.
		TNT1 A 0 A_SetUserArray("user_cooldown",1,random(75,200)) 
		Goto Chasing
	Frozen:
		TNT1 A 35 A_Stop
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_PLAYER1)
		Goto Chasing
	Death:
		TNT1 A 35 A_RemoveChildren
		TNT1 A 0 A_TakeInventory("FreezeDirector",32767,0,AAPTR_PLAYER1)
		TNT1 A 0 A_TakeInventory("RemoveDirector",32767,0,AAPTR_PLAYER1)
		Stop
	}
}

Actor MCLargeMobRunner
{
	var int user_boss[2];
	//[0] = Cyberdemon or Spider Mastermind?
	//[1] = Have we chosen to spawn the big baddies above?
	var int user_check[3];
	var int user_dlimit;
	var int user_x[3];
	var int user_y[3];
	Monster
	+DONTTHRUST
	-SOLID
	+NEVERTARGET
	-COUNTKILL
	+CANTSEEK
	+FLOORHUGGER
	+NORADIUSDMG
	+THRUACTORS
	+NOBLOOD
	-TELESTOMP
	+FORCEPAIN
	+LOOKALLAROUND
	+NOTARGETSWITCH
	+NONSHOOTABLE
	-SHOOTABLE
	-CANUSEWALLS
	-CANPUSHWALLS
	-ACTIVATEMCROSS
	+NOBLOCKMONST
	+CANTLEAVEFLOORPIC
	+NOTRIGGER
	+NOBLOCKMAP
	+NOTELESTOMP
	MaxDropOffHeight 128
	MaxStepHeight 128
	Speed 7
	Radius 50
	Height 50
	Health 1000000
	DamageFactor "Normal", 0.0
	DamageFactor "DirectorKiller", 32767
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 //NoDelay //ACS_NamedExecuteAlways("DirectorLimiter",0,3,0)
//Chooses between spider mastermind and cyberdemon.
		TNT1 A 0 A_SetUserArray("user_boss",0,random(0,1))
		TNT1 A 0 A_SetUserVar("user_dlimit",0)
		TNT1 A 0 A_GiveInventory("CooldownEnable1",1,AAPTR_MASTER)
	Idle:
		TNT1 AAAAA 1 A_Look
		Loop
	See:
		TNT1 A 0 A_SetUserArray("user_x",0,x)
		TNT1 A 0 A_SetUserArray("user_y",0,y)
	Wanderbout:
		TNT1 A 0 Thing_ChangeTID(0,32666)
		TNT1 A 0 A_SetUserArray("user_check",0,0)
		TNT1 A 0 A_SetUserArray("user_check",1,0)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		TNT1 A 1 A_Chase("","")
		TNT1 AAAAAAAAAAAAAAAAAAAA 1 A_Wander
		TNT1 A 0 A_SetUserArray("user_x",1,x)
		TNT1 A 0 A_SetUserArray("user_y",1,y)
		TNT1 A 0 A_JumpIf((user_x[0]==user_x[1])&&(user_y[0]==user_y[1]),"Stuck")
	Mobmaking:
		TNT1 A 0 A_JumpIfTargetInLOS("Wanderbout",360)
		TNT1 A 0 A_JumpIfCloser(250,"Wanderbout")
		TNT1 A 0 A_JumpIf(user_boss[1]==1,"BossCheck")
		TNT1 A 0 A_Jump(64,"BossCheck")
		Goto ArchvileSpawn
	BossCheck:
		TNT1 A 0 A_SetUserArray("user_boss",1,1)
	SC1:
		TNT1 A 0 A_UnsetSolid
		TNT1 A 1 A_Chase("","")
		TNT1 A 0 A_JumpIfTargetInLOS("SC1",360)
		TNT1 A 0 A_JumpIfCloser(250,"SC1")
		TNT1 A 0 A_JumpIf(user_boss[0]==1,"CyberdemonSpawn")
		Goto SpiderMasterMindSpawn
	CyberdemonSpawn:
		TNT1 A 0 //A_Log("Cyberdemon")
		TNT1 A 0 A_SpawnItemEx("CyberdemonReplacer",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		TNT1 A 0 A_JumpIf(tid!=0,"Wanderbout") //Means the actor failed to spawn.
		TNT1 A 0 //A_Log("Good")
		Goto Vanish //One-hit wonder. We really don't need these things spawning more than one.
	SpiderMasterMindSpawn:
		TNT1 A 0 //A_Log("Spider Mastermind")
		TNT1 A 0 A_SpawnItemEx("SpiderMastermindReplacer",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		TNT1 A 0 A_JumpIf(tid!=0,"Wanderbout")
		TNT1 A 0 //A_Log("Good")
		Goto Vanish
	ArchvileSpawn:
		TNT1 A 0 //A_Log("Archvile")
		TNT1 A 0 A_SpawnItemEx("ArchvileReplacer",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		TNT1 A 0 A_JumpIf(tid!=0,"Wanderbout")
		Goto CountUp
	CountUp:
		TNT1 A 0 //A_Log("Good")
		TNT1 A 0 A_SetUserVar("user_dlimit",user_dlimit+1)
		TNT1 A 0 A_JumpIf(user_dlimit>=4,"Vanish")
		Goto Wanderbout
	Vanish:
		TNT1 A 0 //A_Log("Big Loot")
		TNT1 A 0 A_GiveInventory("CooldownDisable1",1,AAPTR_MASTER)
		TNT1 A 0 A_GiveInventory("LargeCooldown",1,AAPTR_MASTER)
		TNT1 A 0 A_DropItem("AEoD6SpellSpawner",1,4)
		TNT1 A 0 A_DropItem("BFGReplacer",1,76)
		TNT1 A 0 A_DropItem("PlasmaRifleReplacer",1,116)
		TNT1 A 0 A_DropItem("RocketLauncherReplacer",1,116)
		TNT1 A 0 A_DropItem("ChaingunReplacer",1,128)
		TNT1 A 0 A_DropItem("SSGReplacer",1,128)
		TNT1 A 0 A_DropItem("ShotgunReplacer",1,128)
		TNT1 AAA 0 A_DropItem("ShellBoxReplacer",1,128)
		TNT1 AAAA 0 A_DropItem("ClipBoxReplacer",1,128)
		TNT1 AAA 0 A_DropItem("RocketBoxReplacer",1,128)
		TNT1 AAA 0 A_DropItem("CellPackReplacer",1,128)
		TNT1 A 0 A_DropItem("Megasphere",1,36)
		TNT1 A 0 A_DropItem("SoulSphere",1,66)
		TNT1 AAAAAAAAA 0 A_DropItem("Medikit",1,164)
		TNT1 AAA 0 A_DropItem("PowerupsSpawnerReal",1,192)
		TNT1 A 0 //A_Log("Large Monsters Done")//ACS_NamedExecuteAlways("DirectorLimiter",0,4,0)
		Stop
	Stuck:
		TNT1 A 0 A_GiveInventory("CooldownDisable1",1,AAPTR_MASTER)
		TNT1 A 0 //ACS_NamedExecuteAlways("DirectorLimiter",0,4,0)
		Stop
	Frozen:
		TNT1 A 35 A_Stop
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		Goto See
	Death:
		TNT1 A 0 //ACS_NamedExecuteAlways("DirectorLimiter",0,4,0)
		Stop
	}
}


Actor MCMediumMobRunner
{
	Radius 64
	Height 40
	var int user_check[2];
	var int user_dlimit;
	var int user_x[2];
	var int user_y[2];
	Monster
	+DONTTHRUST
	-SOLID
	+NEVERTARGET
	-COUNTKILL
	+CANTSEEK
	+FLOORHUGGER
	+NORADIUSDMG
	+THRUACTORS
	+NOBLOOD
	-TELESTOMP
	+FORCEPAIN
	+LOOKALLAROUND
	+NOTARGETSWITCH
	+NONSHOOTABLE
	-SHOOTABLE
	-CANUSEWALLS
	-CANPUSHWALLS
	-ACTIVATEMCROSS
	+NOBLOCKMONST
	+CANTLEAVEFLOORPIC
	+NOTRIGGER
	+NOBLOCKMAP
	+NOTELESTOMP
	MaxDropOffHeight 128
	MaxStepHeight 128
	Speed 7
	Health 1000000
	DamageFactor "Normal", 0.0
	DamageFactor "DirectorKiller", 32767
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 //ACS_NamedExecuteAlways("DirectorLimiter",0,3,0)
		TNT1 A 0 A_SetUserVar("user_dlimit",0)
		TNT1 A 0 A_GiveInventory("CooldownEnable1",1,AAPTR_MASTER)
	Idle:
		TNT1 AAAAA 1 A_Look
		Loop
	See:
	Wanderbout:
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		TNT1 A 1 A_Chase
		TNT1 AAAAAAAAAAAAAAAAAAAA 1 A_Wander
	Mobmaking:
		TNT1 A 0 A_JumpIfTargetInLOS("Wanderbout",360)
		TNT1 A 0 A_JumpIfCloser(250,"Wanderbout")
		TNT1 A 0 Thing_ChangeTID(0,32667) 
		//The above call is used to check and see if the spawning worked.
		//If it did, its TID is set to 0.
		TNT1 A 0 //A_Log("Medium Monster")
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,"Wanderbout")
		TNT1 A 0 A_SpawnItemEx("FatsoReplacer",0,0,5,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("RevenantReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("HellKnightReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("BaronofHellReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("PainReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("CacoReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("ArachnotronReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
	CountUp:
		TNT1 A 0 A_JumpIf(tid!=0,"Wanderbout") //Means it didn't work.
		TNT1 A 0 //A_Log("Good")
		TNT1 A 0 A_SetUserVar("user_dlimit",user_dlimit+1)
		TNT1 A 0 A_JumpIf(user_dlimit>=4,"Vanish")
		Goto Wanderbout
	Vanish:
		TNT1 A 0 //A_Log("Medium Loot")
		TNT1 A 0 A_GiveInventory("CooldownDisable1",1,AAPTR_MASTER)
		TNT1 A 0 A_GiveInventory("MediumCooldown",1,AAPTR_MASTER)
		TNT1 A 0 A_DropItem("AEoD6SpellSpawner",1,1)
		TNT1 A 0 A_DropItem("BFGReplacer",1,16)
		TNT1 A 0 A_DropItem("PlasmaRifleReplacer",1,66)
		TNT1 A 0 A_DropItem("RocketLauncherReplacer",12,76)
		TNT1 A 0 A_DropItem("SSGReplacer",1,106)
		TNT1 A 0 A_DropItem("ShotgunReplacer",1,164)
		TNT1 A 0 A_DropItem("ChaingunReplacer",1,164)
		TNT1 AA 0 A_DropItem("ShellBoxReplacer",1,96)
		TNT1 AAA 0 A_DropItem("ClipBoxReplacer",1,96)
		TNT1 AA 0 A_DropItem("RocketBoxReplacer",1,96)
		TNT1 AA 0 A_DropItem("CellPackReplacer",1,96)
		TNT1 A 0 A_DropItem("Megasphere",1,4)
		TNT1 A 0 A_DropItem("SoulSphere",1,11)
		TNT1 AAAAAAA 0 A_DropItem("Medikit",1,128)
		TNT1 AAA 0 A_DropItem("PowerupsSpawnerReal",1,128)
		TNT1 A 0 //A_Log("Medium Monsters Done")
		Stop
	Frozen:
		TNT1 A 35 A_Stop
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		Goto See
	Death:
		TNT1 A 0 //ACS_NamedExecuteAlways("DirectorLimiter",0,4,0)
		Stop
	}
}

Actor MCSmallMobRunner
{
	Radius 30
	Height 56
	var int user_check[2];
	var int user_dlimit;
	var int user_x[2];
	var int user_y[2];
	Monster
	+DONTTHRUST
	-SOLID
	+NEVERTARGET
	-COUNTKILL
	+CANTSEEK
	+FLOORHUGGER
	+NORADIUSDMG
	+THRUACTORS
	+NOBLOOD
	-TELESTOMP
	+FORCEPAIN
	+LOOKALLAROUND
	+NOTARGETSWITCH
	+NONSHOOTABLE
	-SHOOTABLE
	-CANUSEWALLS
	-CANPUSHWALLS
	-ACTIVATEMCROSS
	+NOBLOCKMONST
	+CANTLEAVEFLOORPIC
	+NOTRIGGER
	+NOBLOCKMAP
	+NOTELESTOMP
	MaxDropOffHeight 128
	MaxStepHeight 128
	Speed 7
	Health 1000000
	DamageFactor "Normal", 0.0
	DamageFactor "DirectorKiller", 32767
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 //ACS_NamedExecuteAlways("DirectorLimiter",0,1,0)
		TNT1 A 0 A_SetUserVar("user_dlimit",0)
	Idle:
		TNT1 AAAAA 1 A_Look
		Loop
	See:
	Wandering:
		TNT1 A 0 A_SetUserArray("user_check",0,0)
		TNT1 A 0 A_SetUserArray("user_check",1,0)
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)
		TNT1 A 1 A_Chase
		TNT1 AAAAAAAAAAAAAAAAAAAA 1 A_Wander
	Mobmaking:
		TNT1 A 0 A_JumpIfTargetInLOS("Wandering",360)
		TNT1 A 0 A_JumpIfCloser(250,"Wandering")
		TNT1 A 0 Thing_ChangeTID(0,32668)
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6)
		TNT1 A 0 A_SpawnItemEx("ZombieReplacer",0,0,5,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("ShotguyReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("ChainguyReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("ImpReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("LostSoulReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
		TNT1 A 0 A_SpawnItemEx("DemonReplacer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_CLEARCALLERTID)
		Goto CountUp
	CountUp:
		TNT1 A 0 A_JumpIf(tid!=0,"Wandering")
		TNT1 A 0 A_SetUserVar("user_dlimit",user_dlimit+1)
		TNT1 A 0 A_JumpIf(user_dlimit>=10,"Vanish")
		Goto Wandering
	Vanish:
		TNT1 A 0 A_DropItem("RocketLauncherReplacer",1,16)
		TNT1 A 0 A_DropItem("SSGReplacer",1,36)
		TNT1 A 0 A_DropItem("ShotgunReplacer",1,76)
		TNT1 A 0 A_DropItem("ChaingunReplacer",1,66)
		TNT1 AA 0 A_DropItem("ShellBoxReplacer",0,96)
		TNT1 AA 0 A_DropItem("ClipBoxReplacer",0,96)
		TNT1 AA 0 A_DropItem("RocketBoxReplacer",0,32)
		TNT1 AA 0 A_DropItem("CellPackReplacer",0,32)
		TNT1 A 0 A_DropItem("SoulSphere",0,16)
		TNT1 AAAAA 0 A_DropItem("Medikit",0,128)
		TNT1 AAA 0 A_DropItem("PowerupsSpawnerReal",0,48)
		TNT1 A 0 //ACS_NamedExecuteAlways("DirectorLimiter",0,2,0)
		Stop
	Frozen:
		TNT1 A 35 A_Stop
		TNT1 A 0 A_JumpIfInventory("RemoveDirector",1,"Death",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("DirectorIsLeaving",1,"Death",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("FreezeDirector",1,"Frozen",AAPTR_TARGET)		
		Goto See
	Death:
		TNT1 A 1 //ACS_NamedExecuteAlways("DirectorLimiter",0,2,0)
		Stop
	}
}

Actor SpawnSmallMonster : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		//TNT1 A 0 A_PrintBold("Spawned")
		TNT1 A 0 A_SpawnItemEx("MCSmallMobRunner",0,0,0,0,0,0,0,32)
		Stop
	}
}

Actor SpawnMediumMonster : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SpawnItemEx("MCMediumMobRunner",0,0,0,0,0,0,0,32)
		Stop
	}
}

Actor SpawnLargeMonster : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SpawnItemEx("MCLargeMobRunner",0,0,0,0,0,0,0,32)
		Stop
	}
}
