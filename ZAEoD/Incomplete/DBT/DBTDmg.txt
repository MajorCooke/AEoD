
Actor DBTNoDamageOff : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_ChangeFlag("NODAMAGE",0)
		Stop
	}
}

Actor DBTNoDamageOn : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_ChangeFlag("NODAMAGE",1)
		Stop
	}
}


//************************************************
Class DBTVulnerableThing : Actor
{
	const DamageMultiplier = 1;
	const MaxTics = 70;
	const HP = 1000; 
	const MaxDamage = 1000; //Keep it from bringing DBT to 0 on one hit.
	int user_tics;
	int user_damage;
	int user_hp;
	int user_t;
	int dmg;
	bool DestroyMe;
	Default
	{
		Monster;
		-COUNTKILL
		+NOGRAVITY
		+DONTFALL
		+NOICEDEATH
		+DONTMORPH
		+DONTTHRUST
		+QUICKTORETALIATE
		+GHOST
		+NEVERTARGET
		+NOTELESTOMP
		+NOTELEPORT
		+NOTRIGGER
		Species "DeathBringer";
		Health 1000;
		Radius 30;
		Height 56;
		PainChance 255;
		PainChance "DBTSetup", 0;
		PainChance "DBTDamage", 0;
		DamageFactor "Normal", 1;
		DamageFactor "DBTSetup", 0;
		DamageFactor "DBTDamage", 0.0;
		RenderStyle "None";
	}
	
	override void PostBeginPlay()
	{
		if (!master || master.health < 1 || master.bFRIENDLY)
			DestroyMe = true;
			
		Super.PostBeginPlay();
	}
	
	override int DamageMobj(Actor inflictor, Actor source, int damage, Name mod, int flags = 0, double angle = 0)
	{
		if (!master || master.health < 1 || master.bFRIENDLY)
		{
			DestroyMe = true;
			return 0;
		}
		int amt = 0;
		if ((inflictor && inflictor.target is "PlayerPawn") || (source && source is "PlayerPawn"))
		{
			amt = Super.DamageMobj(inflictor, source, damage, mod, flags, angle);
		}
		amt = Clamp(amt, 0, MaxDamage);
		
		if (master)
		{
			if (source && !source.bNOTARGET && !source)
				master.target = source;
				
			if (amt > 0)
				
		}
			
		
	}
	
    States
    {
    Spawn:
		TNT1 A 0 NoDelay 
		{
			if (tid > 0)
			{	
				user_t = tid;
				ChangeTID(0);
			}
			A_ResetHealth();
			A_ChangeFlag(CORPSE,0);
			A_ClearTarget();
			
			A_CheckFlag("FRIENDLY","EndNoChange",AAPTR_MASTER);
			A_ChangeFlag("NOBLOCKMAP",0);
			A_ChangeFlag("NOPAIN",0);
			A_SetShootable();
		}
	Waiting:
		TNT1 A 1
		{
			A_SetUserVar(user_tics,user_tics+1);
			if (user_tics <= MaxTics)
			{	return state(0);	}
			if(health < HP)
			{	
				A_ChangeFlag("NOPAIN",1);
				return state("Pain");	
			}
			return state(0);
		}
		Loop
	Pain:
		TNT1 A 35 
		{
			A_UnsetShootable;
			A_ChangeFlag("NOPAIN",1);
			A_ChangeFlag("NOBLOCKMAP",1);
			
			if (!IsPointerEqual(TargetPtr,NullPtr) && !A_JumpIfHealthLower(1,"Null",TargetPtr))
			{	A_TransferPointer(DefPtr,MasterPtr,TargetPtr,TargetPtr,PTROP_NOSAFEGUARDS);	}
			
			//Make sure it's only a player damaging him.
			if (CheckClass("PlayerPawn",TargetPtr,1) && Health < HP)
			{
				A_SetUserVar(user_damage,HP-Health);
				A_GiveInventory("DBTDamageCounter",user_damage,MasterPtr);
				A_GiveInventory("DBTDamager",1,MasterPtr);
				//A_GiveInventory("DBTNoDamageOff",1,AAPTR_MASTER);
				//A_DamageMaster(user_damage*DamageMultiplier,"DBTVulnerable",DMSS_NOFACTOR,"FDeathBringerThanatos");
				//A_GiveInventory("DBTNoDamageOn",1,AAPTR_MASTER);
				
				if (user_t > 0)
				{	
					A_QuakeEx(1,2,2,35,0,2048,"",QF_RELATIVE|QF_SCALEDOWN); 
					return state(0);	
				}
			}
			else
			{
				return state("Spawn");
			}
			return state("Null");
		}
    Death:
		TNT1 A 35
		{
			if (!IsPointerEqual(TargetPtr,NullPtr) && !A_JumpIfHealthLower(1,"Null",TargetPtr))
			{	A_TransferPointer(DefPtr,MasterPtr,TargetPtr,TargetPtr,PTROP_NOSAFEGUARDS);	}
			
			if(CheckClass("PlayerPawn",TargetPtr,true))
			{	
				A_GiveInventory("DBTDamageCounter",1000,MasterPtr);
				A_GiveInventory("DBTDamager",1,MasterPtr);
				if (user_t > 0)
				{	
					A_QuakeEx(1,2,2,35,0,2048,"",QF_RELATIVE|QF_SCALEDOWN); 
					return state(0);	
				}
			}
			return state("Null");
		}
		Stop
	Death.Massacre:
	EndNoChange:
		TNT1 A 0
		Stop
	End:
		TNT1 A 0 
		{
			if (!A_JumpIfHealthLower(1,"EndNoChange",TargetPtr))
			{	A_TransferPointer(DefPtr,MasterPtr,TargetPtr,TargetPtr,PTROP_NOSAFEGUARDS);	}
		}
		Stop
    }
}

//=============================================================
//=============================================================

//	Double Damage taken! Half the duration though.

//=============================================================
//=============================================================

actor DBTVulnerableDouble : DBTVulnerableThing
{
	const MaxTics = 35;
	const DamageMultiplier = 2;
}

//A_QuakeEx(1,3,2,35,0,32767,"",QF_SCALEDOWN|QF_RELATIVE)

//=============================================================
//=============================================================

//	For when DBT has "Steel" active

//=============================================================
//=============================================================

actor DBTVulnerableThingSteel : DBTVulnerableThing
{
    DamageFactor "Normal", 0.2
	DamageFactor "TempestLightning", 0.21
	DamageFactor "Telefrag", 0.1 //Needing a direct hit now from demon morph, not a glancing blow!
	Health 1000
}

/*==============================================================================
 Health Check

 Disabling the NODAMAGE flag is extremely ill advised, so instead, use 
 A_SetHealth and a loop. I don't trust the room for error in which DBT could
 be unintentionally damaged with a NOFACTOR damaging attack and I don't want
 to risk it. The NODAMAGE flag stays at all times and the following can safely
 kill him off without needing to remove the flag.
==============================================================================*/

Actor DBTDamageCounter : Inventory
{	Inventory.MaxAmount 10000 }

Actor DBTDamager : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0
		{
			if (CountInv("DBTDamageCounter") >= health)
			{
				A_Die("Normal");
			}
			else if (CountInv("DBTDamageCounter") > 0)
			{
				A_SetHealth(health - CountInv("DBTDamageCounter"));
				A_TakeInventory("DBTDamageCounter",32767,0);
			}
			return bool(true);
		}
		Stop
	}
}

/*actor DBTVulnerableThingSteel
{
    Monster
    -COUNTKILL
//    -Solid		//Removed to have it DBT stuck when attacking
    +NOGRAVITY
    +DONTFALL
    Mass 0xFFFFFFFFFFF
    Health 3000
    Radius 30
    Height 56
    PainChance 255
    RenderStyle Add
    Scale 3.9
	+GHOST
    DamageFactor "Railgun", 0.6
    DamageFactor "BFGSplash", 0.5
    DamageFactor "Normal", 1.0
	DamageFactor "DarkSyphon", 0.0
	DamageFactor "DBTDamage", 0.0
    DeathSound "halflife/monsters/nihilant/pain"
	BloodColor "88 88 88"
    States
    {
    Spawn:
		TNT1 A 0
		PLAY A 70
		Stop
    Pain:
		TNT1 A 0 A_UnSetShootable
		TNT1 A 0 A_JumpIfHealthLower(1000,"Damage6")		//If you deal 2000 damage, it hurts 6
		TNT1 A 0 A_JumpIfHealthLower(2000,"Damage3")		//If you deal 1000 damage, it hurts 3
		TNT1 A 0 A_JumpIfHealthLower(2500,"Damage2")		//If you deal 500 damage, it hurts 2
		TNT1 A 0 A_JumpIfHealthLower(2925,"Damage1")		//If you deal 75 damage, it hurts 1
		Goto "NoDamage"
	NoDamage:
		TNT1 A 0 A_Print("Dealt 0")						//If you deal less than 75, no damage
		TNT1 A 0 A_Die
		Goto Death2
    Damage1:
		TNT1 A 0 A_Print("Dealt 1")
		TNT1 A 0 A_DamageMaster(1,"DBTVulnerable")		//If you deal >75&&<501, it hurts 2
		TNT1 A 0 A_Die
		Goto Death2
	Damage2:
		TNT1 A 0 A_Print("Dealt 2")
		TNT1 A 0 A_DamageMaster(2,"DBTVulnerable")		//If you deal >500&&<1001, it hurts 2
		TNT1 A 0 A_Die
		Goto Death2
	Damage3:
		TNT1 A 0 A_Print("Dealt 3")
		TNT1 A 0 A_DamageMaster(3,"DBTVulnerable")		//If you deal >1001&&<2001, it hurts 3
		TNT1 A 0 A_Die
		Goto Death2
    Damage6:
		TNT1 A 0 A_Print("Dealt 6")
		TNT1 A 0 A_DamageMaster(6,"DBTVulnerable")
		TNT1 A 0 A_Die
		Goto Death2
    Death:
		TNT1 A 0 A_Print("Dealt 10")
		BOS2 A 50 A_DamageMaster(10,"DBTVulnerable")	//if you deal 1500 damage, it hurts 10
		Stop
    Death2:
		BOSS A 50
		Stop
    }
}*/

Actor DBTVoices
{
	Monster
	+NEVERTARGET
	+THRUACTORS
	+NOGRAVITY
	-SHOOTABLE
	+NONSHOOTABLE
	+NODAMAGE
	+NOTIMEFREEZE
	-COUNTKILL
	+NOTELESTOMP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 AAA 35
		TNT1 A 0 A_PlaySound("mon/dbt2/idle",5,1,0,ATTN_NONE)
	Acting:
		TNT1 AAAAAAAAAAAAAAA 35 A_JumpIfHealthLower(1,"End",AAPTR_MASTER) //A_JumpIfInventory("IDied",1,"End",AAPTR_MASTER)
		TNT1 A 0 A_PlaySound("mon/dbt2/idle",5,1,0,ATTN_NONE)
		Loop
	End:
		TNT1 A 0 A_StopSound(5)
		Stop
	}
}