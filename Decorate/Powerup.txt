/********************************** 
 *	       AEons of Death		  *
 *	       	Version 6.03		  *
 *          Powerup Code		  *
 **********************************/

ACTOR Yashichi : CustomInventory
{
	+FLOATBOB
	+COUNTITEM
	+INVENTORY.FANCYPICKUPSOUND
	-INVENTORY.INVBAR
	+INVENTORY.IGNORESKILL
	+DONTGIB
	Inventory.PickupMessage "YASHICHI!!"
	inventory.pickupsound "reilsss/powerup/teleportrune"
	Scale 0.6
	States
	{
	Spawn:
		YASH A -1 Bright
		Loop
	Pickup:
		TNT1 A 0 A_PlaySoundEx("Item/Yashichi","SoundSlot6",0,2)
		TNT1 A 0 A_GiveInventory("Q2BackPack",1)
		TNT1 A 0 A_GiveInventory("BossHealth",1)
		TNT1 A 0 A_GiveInventory("UltimateArmor",1)
		TNT1 A 0 A_GiveInventory("BFGHolder",80)
		TNT1 A 0 A_GiveInventory("AEClip",1600)
		TNT1 A 0 A_GiveInventory("AEShell",1000)
		TNT1 A 0 A_GiveInventory("AERocket",1000)
		TNT1 A 0 A_GiveInventory("AECell",1200)
		TNT1 A 0 A_GiveInventory("GreenMana",1000)
		TNT1 A 0 A_GiveInventory("DarkMana",1000)
		TNT1 A 0 A_GiveInventory("BlueMana",1000)
		TNT1 A 0 A_GiveInventory("RedMana",1000)
		TNT1 A 0 A_GiveInventory("MiniRockets",1000)
		TNT1 A 0 A_GiveInventory("PlasmaRod",1000)
		TNT1 A 0 A_GiveInventory("BunnyAmmo",100)
		TNT1 A 0 A_GiveInventory("ASTF",1000)
		TNT1 A 0 A_GiveInventory("Mojo",1000)
		TNT1 A 0 A_GiveInventory("AEGrenade",1000)
		TNT1 A 0 A_GiveInventory("AENails",1000)
		TNT1 A 0 A_GiveInventory("Shotgun2Clip",1000)
		TNT1 A 0 A_GiveInventory("COPGunInClip",100)
		TNT1 A 0 A_GiveInventory("Ubercharge",100)
		TNT1 A 0 A_GiveInventory("Doom3ShotgunClip",10)
		TNT1 A 0 A_GIveInventory("BoneDusterClip",20)
		Stop
	}
}

//--------------------------------------------------------------------

ACTOR CupOfMana : CustomInventory
{
	+FLOATBOB
	+COUNTITEM
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.INVBAR
	+DONTGIB
	Inventory.MaxAmount 25
	Inventory.Icon "HARTIBMA"
	Inventory.PickupSound "reilsss/powerup/CupOfMana"
	Inventory.UseSound "items/cupofmana/use"
	Inventory.PickupMessage "You found a cup of mana!"
	Tag "Refills some mana"
	States
	{
	Spawn:
		BMA2 A -1 Bright
		Stop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_GiveInventory("DarkMana",random(15,40))
		TNT1 A 0 A_GiveInventory("BlueMana",random(75,200))
		TNT1 A 0 A_GiveInventory("RedMana",random(20,80))
		TNT1 A 0 A_GiveInventory("GreenMana",random(35,100))
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

//--------------------------------------------------------------------

Actor Q2BackPack : Backpack
{
    +FLOORCLIP
	+DONTGIB
    Scale 0.21
    Inventory.PickupSound "items/backpack/pickup"
    States
    {
    Spawn:
        BACK A -1
        Loop
    }
}

//--------------------------------------------------------------------

ACTOR InfraredItem : CustomInventory 
{
    +COUNTITEM
    +INVENTORY.FANCYPICKUPSOUND
    +INVENTORY.INVBAR
	+DONTGIB
    Inventory.MaxAmount 10
    Inventory.Icon "HPVISB"
    Inventory.PickupMessage "Night Vision Goggles"
    Inventory.PickupSound "reilsss/powerup/InfraredItem"
    Inventory.UseSound "reilsss/powerup/InfraredItem"
    Scale 0.22
    Tag "Night vision (timed)"
    States
    {
    Spawn:
		PVIS A -1 Bright
	//	RP02 ABCDEFGHIJKLMNOP 4
		Loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("InfraredItem2",1,"End")
		TNT1 A 0 A_JumpIfInventory("PowerLightAmp",1,"End")
		TNT1 A 0 A_GiveInventory("InfraredItem2",1)
		Stop
	End:
		TNT1 A 0
		Fail
    }
}

ACTOR InfraredItem2 : PowerupGiver 
{
	-COUNTITEM
	+INVENTORY.QUIET
    +INVENTORY.AUTOACTIVATE
	+DONTGIB
    Powerup.Type "LightAmp"
    Powerup.Duration 4200
    Inventory.Icon "HPVISB"
}

//--------------------------------------------------------------------

Actor RadSuitItem : CustomInventory replaces RadSuit
{
	+COUNTITEM
    +INVENTORY.FANCYPICKUPSOUND
    +INVENTORY.INVBAR
    Inventory.MaxAmount 25
    Inventory.Icon "HRADSUIT"
    Inventory.PickupMessage "Radiation Shielding Suit"
    Inventory.PickupSound "items/radsuit/pickup"
    Inventory.UseSound "reilsss/powerup/RadSuitItem"
    Tag "Radiation suit (timed)"
    States
    {
    Spawn:
		RP03 ABCDEFGH 6
		Loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("RadSuitItem2",1,"End")
		TNT1 A 0 A_JumpIfInventory("PowerIronFeet",1,"End")
		TNT1 A 0 A_GiveInventory("RadSuitItem2",1)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

ACTOR RadSuitItem2 : PowerupGiver //replaces RadSuit
{
    -COUNTITEM
    +INVENTORY.AUTOACTIVATE
	+INVENTORY.QUIET
    Powerup.Type "IronFeet"
    Powerup.Duration 3150
//    Scale 0.3
	/*
    States
    {
    Spawn:
		RP03 ABCDEFGH 6
		Loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		Goto "Super::Use"
	End:
		TNT1 A 0
		Fail
    }
	*/
}

//--------------------------------------------------------------------

ACTOR AllmapSpawner : RandomSpawner replaces Allmap
{
    DropItem FAllmap 255 9
    DropItem ScannerItem 255 4
}

Actor FAllmap : Allmap
{
    Inventory.PickupSound "reilsss/powerup/Allmap"
    +FLOORCLIP
	+DONTGIB
    +NOTELESTOMP
    States
    {
    Spawn:
	RP04 ABCDEFGHIJKLMNOPQRSTUVWX 5
	Loop
    }
}

ACTOR ScannerItem : CustomInventory
{
    +COUNTITEM
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ALWAYSPICKUP
	+DONTGIB
	+NOTELESTOMP
    Inventory.PickupMessage "You picked up the scanner."
    Inventory.PickupSound "reilsss/powerup/ScannerItem"
    Inventory.MaxAmount 1
    States
    {
    Spawn:
        PMUP AB 6 Bright
        Loop
    Pickup:
		TNT1 A 0 A_GiveInventory("Allmap",1)
		TNT1 A 0 A_GiveInventory("MapScanner",1)
		Stop
    }
}


ACTOR MapScanner : PowerupGiver replaces Scanner
{
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ALWAYSPICKUP
	+DONTGIB
    Powerup.Type "Scanner"
    Powerup.Duration 2147483647
}


//--------------------------------------------------------------------

Actor BackPackSpawner : Backpack replaces Backpack 8
{
    DropItem Q2BackPack
    //DropItem "RedMine" 30
    DropItem "CupOfMana" 25
    //DropItem "GoldMine" 15
	+NOINTERACTION
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 1 A_Fall
        Stop
    }
}

//--------------------------------------------------------------------

Actor InfraredSpawner : RandomSpawner replaces Infrared
{
	DropItem "InfraredItem" 255 10
	DropItem "FearRune" 255 5
	DropItem "ForceCube" 255 4
	DropItem "AirSymbol" 255 3
	DropItem "StoneOfRestoration" 255 3
}

//--------------------------------------------------------------------

//--------------------------------------------------------------------

Actor BerserkSpawner : RandomSpawner replaces Berserk
{
	DropItem "FAdvancedMediKit"  255 8
	DropItem "FireSymbol" 		 255 5
	DropItem "DiabolicalDice" 	 255 3
	DropItem "IceShield" 		 255 3
	DropItem "ThunderstormRune"  255 3
	DropItem "IconOfSummoning" 	 255 3
	DropItem "StoneOfQuickening" 255 3
}

//--------------------------------------------------------------------

Actor BlurSphereSpawner : RandomSpawner replaces BlurSphere
{
	DropItem "InvisibilityRune"  255 5
	DropItem "DrainRune" 		 255 3
	DropItem "TimeRune" 		 255 3
	DropItem "EarthSymbol" 		 255 3
	DropItem "StoneOfTemperance" 255 3
}


Actor MegaSphereSpawner : RandomSpawner replaces MegaSphere 83
{
	DropItem "FMegaSphere"	 255 18
	DropItem "MaxArmor" 	 255 17
	DropItem "LifeSeed" 	 255 17
	DropItem "UltimateArmor" 255 1
	DropItem "BossHealth" 	 255 1
}

//A small chance for a demon morph powerup to replace a pentagram.

Actor PentagramSpawner : RandomSpawner replaces InvulnerabilitySphere 2022
{
	DropItem "PentagramOfProtection" 255 10
	DropItem "DemonMorphPowerup" 255 1
}

Actor PowerupSpawner : RandomSpawner
{
	DropItem "PowerupsSpawnerReal" 96
}

Actor PowerupsSpawnerReal : RandomSpawner
{
	DropItem "DiabolicalDice" 255 40
	DropItem "Bracers" 255 25
	DropItem "FearRune" 255 25
	DropItem "InvisibilityRune" 255 25
	DropItem "TimeRune" 255 25
	DropItem "DrainRune" 255 25
	DropItem "CupOfMana" 255 20
	DropItem "WaterSymbol" 255 20
	DropItem "AirSymbol" 255 20
	DropItem "EarthSymbol" 255 20
	DropItem "LifeUrn" 255 15
	DropItem "Infrared" 255 15
	DropItem "FireSymbol" 255 10
	DropItem "IceShield" 255 10
	DropItem "ForceCube" 255 10
	DropItem "StoneOfQuickening" 255 10
	DropItem "StoneOfTemperance" 255 10
	DropItem "StoneOfRestoration" 255 10
	DropItem "IconOfSummoning" 255 10
	DropItem "ThunderstormRune" 255 5
	DropItem "PentagramOfProtection" 255 5
	DropItem "DemonMorphPowerup" 255 1
}

//This one doesn't spawn demon morph powerups. Mainly because they kept spawning
//too frequently. Pentagram of protection, however, still has a chance to be a 
//demon morph on the other hand.
Actor PowerupsSpawnerDirector : RandomSpawner
{
	DropItem "DiabolicalDice" 255 40
	DropItem "Bracers" 255 25
	DropItem "FearRune" 255 25
	DropItem "InvisibilityRune" 255 25
	DropItem "TimeRune" 255 25
	DropItem "DrainRune" 255 25
	DropItem "CupOfMana" 255 20
	DropItem "WaterSymbol" 255 20
	DropItem "AirSymbol" 255 20
	DropItem "EarthSymbol" 255 20
	DropItem "LifeUrn" 255 15
	DropItem "Infrared" 255 15
	DropItem "FireSymbol" 255 10
	DropItem "IceShield" 255 10
	DropItem "ForceCube" 255 10
	DropItem "StoneOfQuickening" 255 10
	DropItem "StoneOfTemperance" 255 10
	DropItem "StoneOfRestoration" 255 10
	DropItem "IconOfSummoning" 255 10
	DropItem "ThunderstormRune" 255 5
	DropItem "PentagramOfProtection" 255 5
}
//--------------------------------------------------------------------

ACTOR ForceCube : CustomInventory
{
	+FLOATBOB
	+COUNTITEM
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.INVBAR
	+DONTGIB
	Inventory.MaxAmount 10
	Inventory.Icon "HFCB1Z"
	Inventory.PickupSound "reilsss/powerup/ForceCube"
	Inventory.PickupMessage "You found a force cube!"
	Scale 0.4
	Inventory.UseSound "ForceCube/Use"
	Tag "Attack foes (timed)"
	States
	{
	Spawn:
		FCB1 ABCDEFGHIJKLMNOP 4 Bright
		Loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("RightCubeToken",1,2)
		TNT1 A 0 A_SpawnItemEx("RightCube",0,0,0,0,0,0,0,32|SXF_TRANSFERPITCH,0)
		Stop
		TNT1 A 0 A_JumpIfInventory("LeftCubeToken",1,2)
		TNT1 A 0 A_SpawnItemEx("LeftCube",0,0,0,0,0,0,0,32|SXF_TRANSFERPITCH,0)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

ACTOR RightCube
{
	var int user_countdown;
	var int user_angle;
    Radius 0
    Height 0
    Speed 0
    Scale 0.1
    Projectile
	+NOINTERACTION
	+SEEKERMISSILE
    MinMissileChance 0
    States
    {
    Spawn:
		TNT1 A 0
		TNT1 A 0 A_GiveInventory("RightCubeToken",1,AAPTR_PLAYER1)
		TNT1 A 0 A_SetUserVar("user_countdown",1575)
	Warping:
    	FCB2 A 0 A_RearrangePointers(AAPTR_PLAYER1,AAPTR_NULL,AAPTR_NULL,PTROP_NOSAFEGUARDS)
		FCB2 A 0 A_SeekerMissile(0,0,1,256,10)
		FCB2 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End",AAPTR_TARGET)
		FCB2 A 1 A_JumpIfTargetInLOS("Targeting",0,JLOSF_PROJECTILE,800)
		FCB2 A 0 A_Warp(AAPTR_PLAYER1,20,12,36,0,WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION)
		FCB2 A 0 A_Weave(0,1,0,3)
		Goto Counting
	Targeting:
		FCB2 A 0 A_SetUserVar("user_angle",angle)
		FCB2 A 0 A_FaceTracer(0,0,0,0,FAF_MIDDLE)
		FCB2 A 0 A_CustomMissile("ForceCubeShot",8,0,0,CMF_TRACKOWNER|CMF_AIMDIRECTION)
		FCB2 A 0 A_CustomRailgun(4,0,none,none,RGF_SILENT,0,0,"CubePuff",0,0,0,0,0,0,"ForceCubeTrailSpawner")
		FCB2 A 0 A_Warp(AAPTR_PLAYER1,20,12,36,0,WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION)
		FCB2 A 1 A_Weave(0,1,0,3)
		Goto Sounder
	Sounder:
		TNT1 A 0 A_PlaySound("ForceCube/Fire")
		TNT1 A 0 A_SetAngle(user_angle)
	Counting:
		FCB2 A 0 A_SetUserVar("user_countdown",user_countdown-1)
		FCB2 A 0 A_JumpIf(user_countdown<=0,"End")
		Goto Warping
	End:
		TNT1 A 0 A_TakeInventory("RightCubeToken",100,0,AAPTR_PLAYER1)
		Stop
    }
}

ACTOR LeftCube : RightCube
{
    States
    {
    Spawn:
		TNT1 A 0
		TNT1 A 0 A_GiveInventory("LeftCubeToken",1,AAPTR_PLAYER1)
		TNT1 A 0 A_SetUserVar("user_countdown",1575)
	Warping:
    	FCB2 A 0 A_RearrangePointers(AAPTR_PLAYER1,AAPTR_NULL,AAPTR_NULL,PTROP_NOSAFEGUARDS)
		FCB2 A 0 A_SeekerMissile(0,0,1,256,5)
		FCB2 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End",AAPTR_TARGET)
		FCB2 A 1 A_JumpIfTargetInLOS("Targeting",0,JLOSF_PROJECTILE,800)
		FCB2 A 0 A_Warp(AAPTR_PLAYER1,20,-12,36,0,WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION)
		FCB2 A 0 A_Weave(0,1,0,3)
		Goto Counting
	Targeting:
		FCB2 A 0 A_SetUserVar("user_angle",angle)
		FCB2 A 0 A_FaceTracer(0,0,0,0,FAF_MIDDLE)
		FCB2 A 0 A_CustomMissile("ForceCubeShot",8,0,0,CMF_TRACKOWNER|CMF_AIMDIRECTION)
		FCB2 A 0 A_CustomRailgun(4,0,none,none,RGF_SILENT,0,0,"CubePuff",0,0,0,0,0,0,"ForceCubeTrailSpawner")
		FCB2 A 0 A_Warp(AAPTR_PLAYER1,20,-12,36,0,WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION)
		FCB2 A 1 A_Weave(0,1,0,3)
		Goto Sounder
	Sounder:
		TNT1 A 0 A_PlaySound("ForceCube/Fire")
		TNT1 A 0 A_SetAngle(user_angle)
	Counting:
		FCB2 A 0 A_SetUserVar("user_countdown",user_countdown-1)
		FCB2 A 0 A_JumpIf(user_countdown<=0,"End")
		Goto Warping
	End:
		TNT1 A 0 A_TakeInventory("LeftCubeToken",100,0,AAPTR_PLAYER1)
		Stop
    }
}


Actor ForceCubeShot : FastProjectile
{
	var int user_failsafe;
	Projectile
	Radius 4
	Height 2
	Speed 1
	Damage 0
	+PAINLESS
	+SEEKERMISSILE
	+DONTREFLECT
	+BLOODSPLATTER
	//MissileType "ForceCubeTrailSpawner"
	MissileHeight 4
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SeekerMissile(0,0,3,256)
		TNT1 A 0 A_ScaleVelocity(4)
	Movement:
		TNT1 A 0 A_SpawnItemEx("ForceCubeTrail",cos(-pitch)*frandom(-2,2),frandom(-2,2),frandom(-2,2)+(sin(-pitch)*frandom(-2,2)),0,0,0,0,32)
		TNT1 A 0 A_SetUserVar("user_failsafe",user_failsafe+1)
		TNT1 A 0 A_JumpIf(user_failsafe>=5000,"Death")
		//TNT1 A 1 A_Warp(AAPTR_DEFAULT,velx,vely,velz,0,WARPF_ABSOLUTEOFFSET,1)
		TNT1 A 1 A_Warp(AAPTR_DEFAULT,velx,vely,velz,0,WARPF_ABSOLUTEOFFSET,"Movement")
	Death:
		TNT1 A 0
		Stop
	}
}

Actor ForceCubeTrailSpawner
{
	+NOINTERACTION
	States
	{
	Spawn:
		TNT1 A 0 A_SpawnItemEx("ForceCubeTrail",frandom(-2,2),frandom(-2,2),frandom(-2,2),0,0,0,0,32)
		Stop
	}
}
		

Actor ForceCubeTrail
{
	+NOINTERACTION
	Scale 0.25
	RenderStyle Add
	Alpha 0.2
	Translation "0:255=%[0,0,0]:[1,0.85,0]"
	States
	{
	Spawn:
		LPUF A 0
		LPUF A 1 Bright A_SetScale(frandom(0.25,0.65))
		Stop
	}
}

Actor CubePuff
{
	Projectile
	+PUFFGETSOWNER
	+BLOODLESSIMPACT
	DamageType "TempestLightning"
	States
	{
	Spawn:
		TNT1 A 0
		Stop
	}
}
    Actor RightCubeToken : Inventory
    {       Inventory.MaxAmount 1   Inventory.InterHubAmount 0      }
     
    Actor LeftCubeToken : Inventory
    {       Inventory.MaxAmount 1   Inventory.InterHubAmount 0      }



//--------------------------------------------------------------------

ACTOR PowerIceShield : PowerProtection
{
    DamageFactor "Fire", 0.0
    DamageFactor "Normal", 0.75
    Inventory.Icon "ARTISHDH"
}

ACTOR IceShield : CustomInventory
{
	+FLOATBOB
	+COUNTITEM
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.INVBAR
	+DONTGIB
	Scale 0.3
	Inventory.MaxAmount 10
	//Inventory.Icon "HARTISHD"
	Inventory.Icon "HICESHIE"
	inventory.PickupSound "reilsss/powerup/powerup2"
	Inventory.PickupMessage "You found the ice shield spell!"
	Inventory.UseSound "IceShield/Use"
	Tag "Damaging ice aura (timed)"
	States
	{
	Spawn:
		ISHD ABCDEFGH 4 Bright
		Loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("PowerIceShield",1,"End")		
		TNT1 A 0 A_GiveInventory("IceShieldTimer",1)
		TNT1 A 0 A_GiveInventory("IceShieldPalette",1)
		TNT1 A 0 A_SpawnItemEx("IceShieldGiver",0,0,0,0,0,0,0,32|SXF_SETMASTER)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

ACTOR IceShieldPalette : PowerupGiver
{
    -INVENTORY.INVBAR
    +INVENTORY.INTERHUBSTRIP
    Inventory.MaxAmount 1
    Powerup.Type "IceShield"
    Powerup.Color Cyan 0.1
    Powerup.Duration 1575
    +INVENTORY.AUTOACTIVATE
}

ACTOR IceShield2 : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
    +NOTIMEFREEZE
    States
    {
    Pickup:
        TNT1 A 0 A_SpawnItemEx("IceShieldEffect",0,0,16,0,0,0,0,32)
        Stop
    }
}

ACTOR IceShieldTimer : Inventory
{
   Inventory.MaxAmount 1
   Inventory.InterhubAmount 0
}

ACTOR IceShieldGiver
{
	var int user_count;
	Projectile
    +NOINTERACTION
	+NOTONAUTOMAP
    RenderStyle None
    States
    {
    Spawn:
        TNT1 A 0 NoDelay A_JumpIfInventory("PowerIceShield",1,1,AAPTR_TARGET)
        Goto End
		TNT1 A 0 A_Warp(AAPTR_TARGET,0,0,16,0,WARPF_NOCHECKPOSITION)
        TNT1 A 5 A_SpawnItemEx("IceShieldEffect",0,0,16,0,0,0,0,32)
        Loop
    End:
        TNT1 A 0 A_TakeInventory("IceShieldTimer",1000,AAPTR_TARGET)
        Stop
    }
}

ACTOR IceShieldEffect
{
    DamageType "Ice"
    Radius 1
    Height 1
    Speed 0
    PROJECTILE
    +FORCERADIUSDMG
    +NOTIMEFREEZE
    +DONTSPLASH
	+EXPLODEONWATER
	+SKYEXPLODE
	+NOINTERACTION
    States
    {
    Spawn:
		TNT1 A 0
        TNT1 A 0 A_Explode(random(15,30),500,0)
        Stop
    }
}

//--------------------------------------------------------------------

ACTOR PowerThunderstorm : PowerProtection
{
    DamageFactor "Normal", 1.0
    Inventory.Icon "ARTTHRNH"
}

ACTOR ThunderstormRune : CustomInventory
{
	+FLOATBOB
	+COUNTITEM
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.INVBAR
	+DONTGIB
	Scale 0.5
	Inventory.MaxAmount 10
	Inventory.Icon "HARTTHRN"
	Inventory.PickupSound "diablo2/druidcast/cyclonearmor"
	Inventory.PickupMessage "You picked up a thunderstorm rune!"
	Inventory.UseSound "Thunderstorm/Use"
	Tag "Lightning will strike foes (timed)"
	States
	{
	Spawn:
		THRN ABCDEFGHIJKLMNOP 4
		Loop
	Use:
		TNT1 a 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("PowerThunderstorm",1,"End")
		TNT1 A 0 A_GiveInventory("ThunderstormTimer",1)
		TNT1 A 0 A_GiveInventory("ThunderstormPalette",1)
		TNT1 A 0 A_SpawnItemEx("ThunderStormGiver",0,0,0,0,0,0,0,32|SXF_SETMASTER)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

ACTOR ThunderstormPalette : PowerupGiver
{
    -INVENTORY.INVBAR
    +INVENTORY.INTERHUBSTRIP
    Inventory.MaxAmount 1
    Powerup.Type "Thunderstorm"
    Powerup.Color Black 0.2
    Powerup.Duration 3150
    +INVENTORY.AUTOACTIVATE
}

ACTOR ThunderstormTimer : Inventory
{
    Inventory.MaxAmount 1
	Inventory.InterhubAmount 0
}
/*
ACTOR ThunderstormGiver
{
    Health 1000000000
    Radius 0
    Height 0
    Speed 0
    +NOFEAR
    +NONSHOOTABLE
    +MISSILEMORE
    +MISSILEEVENMORE
    +NOTIMEFREEZE
    MinMissileChance 0
    States
    {
    Spawn:
        TNT1 A 1 A_Look
        Loop
    See:
        TNT1 A 1 A_Chase
        Loop
    Missile:
        TNT1 A 0 A_JumpIfInTargetInventory("ThunderstormTimer",1,2)
        TNT1 A 0 A_Jump(256,"Death")
        TNT1 A 0 A_JumpIfInventory("ThunderstormTimer2",63,"Death")
        TNT1 A 0 A_GiveInventory("ThunderstormTimer2",1)
        TNT1 A 50 A_GiveToTarget("Thunderstorm2",1)
        Loop
    Death:
        TNT1 A 0 A_TakeFromTarget("ThunderstormTimer",1000)
        Stop
    }
}*/

ACTOR ThunderstormGiver
{
	var int user_count;
	Projectile
	Speed 0
	+SEEKERMISSILE
    +NOINTERACTION
	+NOTONAUTOMAP
	+DONTREFLECT
    RenderStyle None
    States
    {
    Spawn:
        TNT1 A 0 NoDelay A_JumpIfInventory("PowerThunderstorm",1,"Check1",AAPTR_MASTER)
        Goto End
	Check1:
		TNT1 A 0 A_Warp(AAPTR_MASTER,0,0,16,0,WARPF_NOCHECKPOSITION)
		TNT1 A 0 A_RearrangePointers(AAPTR_DEFAULT,AAPTR_DEFAULT,AAPTR_NULL)
		TNT1 A 0 A_RearrangePointers(AAPTR_DEFAULT,AAPTR_DEFAULT,AAPTR_PLAYER_GETTARGET)
		TNT1 A 1 A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE,256)
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"EndForced",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfTargetInLOS("Targeting",0,JLOSF_PROJECTILE)
		TNT1 A 0 A_JumpIfInventory("PowerThunderstorm",1,"Check1",AAPTR_MASTER)
        Goto End
	Targeting:
		//TNT1 A 0 A_CheckFlag("FRIENDLY","Check1",AAPTR_TRACER) //Dont attack friendlies.
		TNT1 A 0 A_Warp(AAPTR_TRACER,0,0,1,0,WARPF_NOCHECKPOSITION)
		TNT1 A 0 A_SpawnItemEx("ThunderstormDamage",0,0,0,0,0,0,0,32|SXF_TRANSFERPOINTERS)
	CheckCont:
        TNT1 AAAAA 10 A_JumpIfInventory("PowerDemonMorph",1,"EndForced",AAPTR_MASTER)//A_GiveInventory("Thunderstorm2",1,AAPTR_MASTER)
        Goto Spawn
    End:
	EndForced:
		TNT1 A 0 A_TakeInventory("ThunderstormTimer",1000,AAPTR_TARGET)
		TNT1 A 0 A_TakeInventory("ThunderstormPalette",1000,AAPTR_TARGET)
		TNT1 A 0 A_TakeInventory("PowerThunderstorm",1000,AAPTR_TARGET)
		Stop
    }
}

ACTOR ThunderstormAttacker
{
    Health 1000000000
    Radius 0
    Height 48
    Speed 0
    +NOFEAR
    +NOGRAVITY
    +FRIENDLY
    +NONSHOOTABLE
    +LOOKALLAROUND
    +FLOORCLIP
    +MISSILEMORE
    +MISSILEEVENMORE
    +NOTIMEFREEZE
    +NOFEAR
    +THRUACTORS
    MinMissileChance 0
    States
    {
    Spawn:
        TNT1 AAA 1 A_Look
        Stop
    See:
        TNT1 A 1 A_Chase
    Missile:
        TNT1 A 0 A_FaceTarget
        TNT1 A 1 A_CustomMissile("ThunderstormEffect",48,0,0)
        Stop
    Death:
        TNT1 A 0
        Stop
    }
}
ACTOR ThunderstormEffect
{
    Health 1000000000
    Radius 0
    Height 1
    Speed 0
    +NOFEAR
    +NONSHOOTABLE
    +FRIENDLY
    +LOOKALLAROUND
    +NOGRAVITY
    +SEEKERMISSILE
    +NOTIMEFREEZE
    +MISSILEMORE
    +MISSILEEVENMORE
    +NOFEAR
    MinMissileChance 0
    States
    {
    Spawn:
        TNT1 A 0 A_StartFire
        TNT1 A 2 A_Fire
        TNT1 A 1 A_Look
        goto Spawn+2
    See:
        TNT1 A 0 A_Fire
        TNT1 A 0 A_FaceTarget
        TNT1 A 0 A_SpawnItemEx("ThunderstormDamage",16,0,0,0,0,0,0,32,0)
        Stop
    }
}

ACTOR ThunderstormDamage
{
    Radius 1
    Height 1
    Speed 0
    Scale 1.8
	DamageType "Electric"
    PROJECTILE
	+THRUACTORS
	+NOCLIP
	+EXPLODEONWATER
	+SKYEXPLODE
    +FORCERADIUSDMG
    +EXTREMEDEATH
    +NOTIMEFREEZE
    States
    {
    Spawn:
        LBLT A 0
        LBLT A 0 Bright A_PlaySound("Thunderstorm/lightning")
        LBLT A 0 Bright A_Explode(random(2,700),15,0)
        LBLT A 3 Bright A_FadeOut
        Wait
    }
}

//--------------------------------------------------------------------

actor PowerFearRune : PowerFrightener
{
	Inventory.icon "ARTRUN1H"
}

actor FearRune : CustomInventory
{
	inventory.pickupmessage "You found the rune of fear!"
	inventory.icon "HARTRUN1"
	inventory.maxamount 25
	Inventory.PickupSound "reilsss/powerup/FearRune"
	Inventory.UseSound "diablo2/necromancercast/taint"
	+COUNTITEM
	+INVENTORY.INVBAR
	+INVENTORY.FANCYPICKUPSOUND
	+FLOATBOB
	+DONTGIB
	Scale 0.17
	Tag "Enemies will run away (timed)"
	states
	{
	Spawn:
		QRU1 ABCDEFGHIJKLMNOPQR 3 bright
		loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_GiveInventory("FearRune2",1)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

actor FearRune2 : PowerupGiver
{
	inventory.icon "HARTRUN1"
	powerup.type "FearRune"
	powerup.duration 1050
	powerup.color DarkRed 0.2
	-COUNTITEM
	+INVENTORY.QUIET
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ALWAYSPICKUP
}

//--------------------------------------------------------------------

actor PowerDrainerRune : PowerDrain
{
	Inventory.icon "ARTRUN2H"
}

actor DrainRune : CustomInventory
{
	inventory.pickupmessage "You found the rune of life drain!"
	inventory.icon "HARTRUN2"
	inventory.maxamount 10
	inventory.usesound "diablo2/necromancercast/lifetap"
	inventory.pickupsound "reilsss/powerup/drainrune"
	+COUNTITEM
	+INVENTORY.INVBAR
	+INVENTORY.FANCYPICKUPSOUND
	+FLOATBOB
	+DONTGIB
	Scale 0.17
	Tag "Life-stealing attacks (timed)"
	states
	{
	Spawn:
		QRU2 ABCDEFGHIJKLMNOPQR 3 bright
		loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_GiveInventory("DrainRune2",1)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

Actor DrainRune2 : PowerupGiver
{
	powerup.type "DrainerRune"
	powerup.duration 1050
	powerup.color Red 0.15
	inventory.icon "HARTRUN2"
	+INVENTORY.QUIET
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ALWAYSPICKUP
}

//--------------------------------------------------------------------

actor PowerInvisibilityRune : PowerInvisibility
{
	Inventory.icon "ARTRUN3H"
}

actor InvisibilityRune : CustomInventory // replaces BlurSphere
{
	inventory.pickupmessage "You found the rune of invisibility!"
	inventory.icon "HARTRUN3"
	inventory.maxamount 10
	Inventory.UseSound "diablo2/druidcast/windspell"
	Inventory.PickupSound "reilsss/powerup/InvisibilityRune"
	+COUNTITEM
	+INVENTORY.INVBAR
	+INVENTORY.FANCYPICKUPSOUND
	+FLOATBOB
	+DONTGIB
	Scale 0.17
	Tag "Partially invisible (timed)"
	states
	{
	Spawn:
		QRU3 ABCDEFGHIJKLMNOPQR 3 bright
		loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("PowerInvisibilityRune",1,"End")
		TNT1 A 0 A_GiveInventory("InvisibilityRune2",1)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

actor InvisibilityRune2 : PowerupGiver // replaces BlurSphere
{
	powerup.type "InvisibilityRune"
	powerup.duration 2100
	powerup.color Gray 0.25
	-COUNTITEM
	+INVENTORY.QUIET
	+INVENTORY.AUTOACTIVATE
}

//--------------------------------------------------------------------

actor PowerTimeStopBase : PowerTimeFreezer
{
	Inventory.icon "ARTRUN4H"
}

actor TimeRune : PowerupGiver
{
	inventory.pickupmessage "You found the rune of time!"
	inventory.icon "HARTRUN4"
	inventory.maxamount 25
	Inventory.PickupSound "reilsss/powerup/TimeRune"
	Inventory.UseSound "reilsss/powerup/TimeRuneUse"
	powerup.type "TimeStopBase"
	powerup.duration 525
	Powerup.Color "0 0 0" 0.5
	+COUNTITEM
	+INVENTORY.FANCYPICKUPSOUND
	+FLOATBOB
	+DONTGIB
	Scale 0.17
	Tag "Stops time (timed)"
	states
	{
	Spawn:
		QRU4 ABCDEFGHIJKLMNOPQR 3 bright
		loop
	}
}

//--------------------------------------------------------------------

actor PowerProtectionDamage : PowerProtection
{
	damagefactor "normal", 0.2
	inventory.icon "ARTEARH" 
}

actor EarthSymbol : CustomInventory
{
	inventory.pickupmessage "You found a magic element symbol: protection of earth."
	Inventory.Amount 1
	inventory.maxamount 5
	Inventory.PickupSound "reilsss/powerup/EarthSymbol"
	Inventory.UseSound "diablo2/sorceresscast/teleport"
	inventory.icon "HARTEAR"
	+COUNTITEM
	+INVENTORY.INVBAR
	+INVENTORY.FANCYPICKUPSOUND
	+FLOATBOB
	+DONTGIB
	Scale 0.18
	Tag "Damage protection (timed)"
	states
	{
	Spawn:
		H2E2 ABCDEFGHIJKLMNOPQR 3 bright
		loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("PowerProtectionDamage",1,"End")
		TNT1 A 0 A_GiveInventory("EarthSymbol2",1)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

actor EarthSymbol2 : PowerupGiver
{
	powerup.color Brown 0.15
	powerup.type "ProtectionDamage"	
	powerup.duration 1050
	+INVENTORY.QUIET
	+INVENTORY.AUTOACTIVATE
}

//--------------------------------------------------------------------

actor PowerDamageMultiplier : PowerDamage
{
	DamageFactor "normal", 2.5
	Inventory.icon "ARTFIRH"
}

actor FireSymbol : CustomInventory // replaces Berserk
{
	Inventory.Pickupmessage "You found a magic element symbol: strength of fire."
	Inventory.Amount 1
	Inventory.Maxamount 5
	Inventory.PickupSound "reilsss/powerup/FireSymbol"
	Inventory.UseSound "reilsss/powerup/FireSymbolUse"
	Scale 0.16
	+FLOATBOB
	+COUNTITEM
	+INVENTORY.INVBAR
	+INVENTORY.FANCYPICKUPSOUND
	+DONTGIB
	Inventory.icon "HARTFIR"
	Tag "Damage dealt is increased (timed)"
	states
	{
	Spawn:
		H2E3 ABCDEFGHIJKLMNOPQR 3 bright
		loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("PowerDamageMultiplier",1,"End")
		TNT1 A 0 A_GiveInventory("FireSymbol2",1)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

actor FireSymbol2 : PowerupGiver // replaces Berserk
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.QUIET
	powerup.color "Orange" 0.18
	powerup.type "DamageMultiplier"
	powerup.duration 525
}

//--------------------------------------------------------------------

Actor PowerRegenerationBase : PowerRegeneration
{
	Inventory.icon "ARTWATH"
}

Actor WaterSymbol : CustomInventory
{
	inventory.pickupmessage "You found a magic element symbol: healing of water."
	Inventory.Amount 1
	inventory.maxamount 10
	inventory.usesound "diablo2/paladincast/meditation"
  	inventory.pickupsound "diablo2/assassincast/cloak"
	Scale 0.17
	+FLOATBOB
	+COUNTITEM
	+INVENTORY.INVBAR
	+INVENTORY.FANCYPICKUPSOUND
	+DONTGIB
	Inventory.icon "HARTWAT"
	Tag "Regenerate health (timed)"
	states
	{
	Spawn:
		H2E4 ABCDEFGHIJKLMNOPQR 3
		loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("PowerRegenerationBase",1,"End")
		TNT1 A 0 A_GiveInventory("WaterSymbol2",1)
		Stop
	End:
		TNT1 A 0
		Fail
	}
}

Actor WaterSymbol2 : PowerupGiver
{
	+INVENTORY.QUIET
	+INVENTORY.AUTOACTIVATE
	powerup.type "RegenerationBase"
	powerup.color "Blue" 0.07
	powerup.duration 1575
}

//--------------------------------------------------------------------

Actor PowerFlyingRune : PowerFlight
{
	Inventory.icon "ARTAIRH"
}

Actor AirSymbol : PowerupGiver
{
	inventory.pickupmessage "You found a magic element symbol: freedom of air."
	inventory.maxamount 10
	Inventory.PickupSound "reilsss/powerup/AirSymbol"
	Inventory.UseSound "diablo2/sorceresscast/thundercast"
	Scale 0.18
	+FLOATBOB
	+COUNTITEM
	+INVENTORY.FANCYPICKUPSOUND
	+DONTGIB
	Inventory.icon "HARTAIR"
	powerup.type "FlyingRune"
	powerup.duration 2100
	Tag "Fly (timed)"
	states
	{
	Spawn:
		H2E1 ABCDEFGHIJKLMNOPQR 3
		loop
	}
}

//--------------------------------------------------------------------

Actor PowerInvulBase : PowerInvulnerable
{
	Inventory.icon "ARTPENTB"
}

ACTOR Invulnerability : PowerupGiver
{
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.QUIET
    Powerup.Color Gold 0.10
    Powerup.Type "InvulBase"
    Powerup.Duration 9000000 //THIS IS NOT THE REAL TIME. This is to stop the blinking screens!
	//See the PentagramChecker actor below for more info.
	//As an added bonus, it allows persistency through time freezing runes. So hey!
	//Be happy DBThanatos wanted this to happen! :D
}

ACTOR PentagramOfProtection : CustomInventory 
{
    Inventory.PickupMessage "Pentagram Of Protection"
	Inventory.Amount 1
    Inventory.MaxAmount 10
	Inventory.InterHubAmount 10
    Inventory.UseSound ""
    Inventory.PickupSound "powerups/pentagrampickup"
    Scale 0.25
    +COUNTITEM
    +FLOATBOB
    +INVENTORY.INVBAR
    +INVENTORY.FANCYPICKUPSOUND
	+DONTGIB
    Inventory.Icon "HARTPENT"
    Tag "Invulnerable (timed)"
    States
    {
    Spawn:
		QPEI A 0 NoDelay A_Jump(224,"Form")
		QPEI A 0 A_SpawnItemEx("DemonMorphPowerup",0,0,0,velx,vely,velz,0,32|SXF_ABSOLUTEMOMENTUM)
		Stop
	Form:
		QPEI ABCDEFGHIJKLMNOP 3 Bright
		Loop
    Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"Nope")
		TNT1 A 0 A_JumpIfInventory("PowerInvulBase",1,"Nope")
		TNT1 A 0 A_GiveInventory("UnMorpher",1)
		TNT1 A 0 A_GiveInventory("Invulnerability",1)
		TNT1 A 0 A_PlaySound("powerups/pentagramuse",CHAN_BODY,1,0,ATTN_NONE)
		TNT1 A 0 A_TakeInventory("PentagramCountdown",9999,0)
		TNT1 A 0 A_GiveInventory("PentagramCountdown",700) //THIS is the timer!
		//Change this to change how long it lasts!
		TNT1 A 0 A_SpawnItemEx("PentagramChecker",0,0,0,0,0,0,0,32|SXF_SETTARGET)
		Stop
	Nope:
		TNT1 A 0
		Fail
    }
}

ACTOR PentagramSpot
{
    +NOTIMEFREEZE
    +NOFEAR
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_SpawnItemEx("PentagramGiver",0,0,0,0,0,0,0,32,0)
        Stop
    }
}

ACTOR PentagramGiver
{
    +NONSHOOTABLE
    +NOTIMEFREEZE
    +NOFEAR
	+NOINTERACTION
    States
    {
    Spawn:
		TNT1 A 0
        TNT1 A 1 A_Look
        Loop
    See:
        TNT1 A 0 A_GiveInventory("Invulnerability",1,AAPTR_TARGET)
		Stop
    }
}

Actor PentagramCountdown : Inventory
{
	Inventory.Amount 1
	Inventory.Maxamount 5000
	Inventory.InterhubAmount 0
}

Actor PentagramIsOn : Inventory
{
	Inventory.Amount 1
	Inventory.MaxAmount 1
	Inventory.InterhubAmount 0
}

Actor PentagramFade : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_SetBlend("Yellow",0.4,12)
		Stop
	}
}

Actor PentagramDispelled : Inventory
{
	Inventory.Amount 1
	Inventory.MaxAmount 1
	Inventory.InterhubAmount 0
}

//This here is the "controller" that causes the screen fades to happen when the powerup
//runs out. It's easy. To set this up, simply change the amount of PentagramCountdown
//given to the player with the PentagramOfProtection actor, and this will do the rest.
//I've added failsafes in case if, for instance, the pentagram is dispelled by the
//diabolical dice. That is to prevent the powerdown effect from occuring, and just gets
//rid of it entirely.

Actor PentagramChecker
{
	var int user_tick;
	Projectile
	+NOINTERACTION
	+NODAMAGE
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("PentagramIsOn",1,"AbsoluteEnd",AAPTR_TARGET) //Stops hijacking.
		TNT1 A 0 A_GiveInventory("PentagramIsOn",1,AAPTR_TARGET)
	WaitingTimer:
		TNT1 A 1 A_TakeInventory("PentagramCountdown",1,0,AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("PentagramCountdown",106,"WaitingTimer",AAPTR_TARGET)
	Final:
		TNT1 A 0 A_JumpIfInventory("PentagramCountdown",200,"Return",AAPTR_TARGET)
		TNT1 A 0 A_PlaySound("powerups/pentagrampickup",CHAN_VOICE,1,0,ATTN_NONE)
		TNT1 A 0 A_GiveInventory("PentagramFade",1,AAPTR_TARGET)
		TNT1 A 0 A_TakeInventory("PentagramCountdown",38,0,AAPTR_TARGET)
		TNT1 AAAAAAAAAAAAAAA 1 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
		TNT1 AAAAAAAAAAAAAAA 1 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
		TNT1 AAAAAAAA 1 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("PentagramCountdown",200,"Return",AAPTR_TARGET)
		TNT1 A 0 A_GiveInventory("PentagramFade",1,AAPTR_TARGET)
		TNT1 A 0 A_TakeInventory("PentagramCountdown",38,0,AAPTR_TARGET)
		TNT1 AAAAAAAAAAAAAAA 1 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
		TNT1 AAAAAAAAAAAAAAA 1 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
		TNT1 AAAAAAAA 1 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("PentagramCountdown",200,"Return",AAPTR_TARGET)
		TNT1 A 0 A_GiveInventory("PentagramFade",1,AAPTR_TARGET)
		TNT1 A 0 A_TakeInventory("PentagramCountdown",38,0,AAPTR_TARGET)
		TNT1 AAAAAAAAAAAAAAA 1 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
		TNT1 AAAAAAAAAAAAAAA 1 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
		TNT1 AAAAAAAA 1 A_JumpIfInventory("PentagramDispelled",1,"EndForced",AAPTR_TARGET)
	End:
		TNT1 A 0 A_JumpIfInventory("PentagramCountdown",1,"WaitingTimer2",AAPTR_TARGET)
	EndForced:
		TNT1 A 0 A_TakeInventory("PentagramIsOn",32767,0,AAPTR_TARGET)
		TNT1 A 0 A_TakeInventory("PentagramCountdown",32767,0,AAPTR_TARGET)
		TNT1 A 0 A_TakeInventory("PentagramDispelled",32767,0,AAPTR_TARGET)
		TNT1 A 0 A_TakeInventory("PowerInvulBase",10000,0,AAPTR_TARGET)
	AbsoluteEnd:
		TNT1 A 0
		Stop
	WaitingTimer2:
		TNT1 A 1 A_TakeInventory("PentagramCountdown",1,0,AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("PentagramCountdown",200,"Return",AAPTR_TARGET)
		TNT1 A 0 A_JumpIfInventory("PentagramCountdown",1,"WaitingTimer2",AAPTR_TARGET)
		Goto End
	Return:
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		Goto WaitingTimer
	}
}

//--------------------------------------------------------------------

actor LifeUrn : CustomInventory 
{
    +COUNTITEM
    +FLOATBOB
    +INVENTORY.FANCYPICKUPSOUND
    +INVENTORY.INVBAR
	+DONTGIB
    Inventory.Icon "HARTISPH"
    Inventory.MaxAmount 10
    Inventory.PickupSound "diablo2/paladincast/sacrifice"
    Inventory.UseSound "reilsss/powerup/LifeUrn"
    Inventory.PickupMessage "You Found the Life Urn"
    Tag "Grants a large health boost"
    States
    {
    Spawn:
	SPH2 A -1
	Loop
    Use:
	TNT1 A 0 A_JumpIfHealthLower(500,1)
	Fail
	TNT1 A 0 A_GiveInventory("FHealthPack",50)
	Stop
    }
}

//--------------------------------------------------------------------

ACTOR Bracers : CustomInventory
{
   +FLOATBOB
   +COUNTITEM
   +INVENTORY.FANCYPICKUPSOUND
   +INVENTORY.INVBAR
   +DONTGIB
    Scale 0.7
    Inventory.Amount 1
    Inventory.MaxAmount 25
    Inventory.PickupMessage "Picked up some bracers."
    Inventory.PickupSound "items/bracers/pickup"
    Inventory.UseSound "reilsss/armor/bracers"
    Inventory.Icon "HARTBRAC"
    Tag "Grants some armor"
    States
    {
    Spawn:
        BRAC ABCDEFGH 4 Bright
        Loop
    Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        TNT1 A 0 A_GiveInventory("Q2ArmorShard",1)
        Stop
	End:
		TNT1 A 0
		Fail
    }
}

//--------------------------------------------------------------------

Actor PowerQuickFire : PowerDoubleFiringSpeed
{
    Inventory.Icon "ARTSHADA"
}

ACTOR PowerQuickMove : PowerSpeed
{
    Speed 1.25
}

ACTOR StoneOfQuickening : CustomInventory
{
    +FLOATBOB
    +COUNTITEM
    +INVENTORY.FANCYPICKUPSOUND
    +INVENTORY.INVBAR
	+DONTGIB
    Scale 0.25
    Inventory.Amount 1
    Inventory.MaxAmount 10
    Inventory.PickupMessage "You found the Stone of Quickening!"
    Inventory.PickupSound "powerup/shadowstone"
    Inventory.UseSound "powerup/stone/use"
    Inventory.Icon "HARTSHST"
    Tag "Firing and running speed increases (timed)"
    States
    {
    Spawn:
	SHST ABCDEFGHIJKLMNOPQRSTUVWX 2
	Loop
    Use:
	TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
	TNT1 A 0 A_JumpIfInventory("PowerQuickFire",1,"End")
	TNT1 A 0 A_GiveInventory("QuickFire",1)
	TNT1 A 0 A_GiveInventory("QuickMove",1)
	Stop
	End:
	TNT1 A 0
	Fail
    }
}

ACTOR QuickFire : PowerupGiver
{
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.QUIET
    -INVENTORY.INVBAR
    -COUNTITEM
    Powerup.Duration 1575
    Powerup.Type "QuickFire"
    Powerup.Color DarkOliveGreen, 0.2
}

ACTOR QuickMove : PowerupGiver
{
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.QUIET
    -INVENTORY.INVBAR
    -COUNTITEM
    Powerup.Duration 1575
    Powerup.Type "QuickMove"
}


//--------------------------------------------------------------------

ACTOR StoneOfTemperance : CustomInventory
{
    +FLOATBOB
    +COUNTITEM
    +INVENTORY.FANCYPICKUPSOUND
    +INVENTORY.INVBAR
	+DONTGIB
    Scale 0.25
    Inventory.Amount 1
    Inventory.MaxAmount 10
    Inventory.PickupMessage "You found the Stone of Temperance!"
    Inventory.PickupSound "powerup/voidstone"
    Inventory.UseSound "powerup/stone/use"
    Inventory.Icon "HARTVOST"
    Tag "Negates most explosion damage, ripping and homing projectiles (timed)"
    States
    {
    Spawn:
	VOST ABCDEFGHIJKLMNOPQRSTUVWX 2
	Loop
    Use:
	TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"CannotUse")
	TNT1 A 0 A_JumpIfInventory("SOTInUse",1,"CannotUse")
	TNT1 A 0 A_SpawnItemEx("SOTTimer",0,0,0,0,0,0,0,32|SXF_SETTARGET)
	TNT1 A 0 A_GiveInventory("SOTInUse",1)
	TNT1 A 0 A_GiveInventory("NoSeekFlagger",1)
	TNT1 A 0 A_GiveInventory("NoSeekPalette",1)
	Stop
	CannotUse:
	TNT1 A 0
	Fail
    }
}

Actor SOTTimer
{
	+NOINTERACTION
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 1575
		TNT1 A 0 A_TakeInventory("SOTInUse",1,0,AAPTR_TARGET)
		TNT1 A 0 A_GiveInventory("SOTEnd",1,AAPTR_TARGET)
		Stop
	}
}

Actor SOTEnd : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_JumpIf(CheckClass("DemonPlayerMorph",AAPTR_DEFAULT,0),"P1")
		TNT1 A 0 A_JumpIfInventory("HHHAudioToken",1,"P1")
		TNT1 A 0 A_ChangeFlag("DONTRIP",0)
		TNT1 A 0 A_SetRipMin(1)
		TNT1 A 0 A_ChangeFlag("NOTELEFRAG",0)
	P1:
		TNT1 A 0 A_ChangeFlag("NORADIUSDMG",0)
	P2:
		TNT1 A 0 A_ChangeFlag("CANTSEEK",0)
		Stop
	}
}

Actor SOTInUse : Inventory
{
	Inventory.MaxAmount 1
	Inventory.InterhubAmount 0
}

ACTOR PowerNoSeek : PowerProtection
{
    DamageFactor "Normal", 0.666
    Inventory.Icon "ARTVOIDA"
}

Actor NoSeekFlagger : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0 A_ChangeFlag("NORADIUSDMG",1)
		TNT1 A 0 A_ChangeFlag("CANTSEEK",1)
		TNT1 A 0 A_SetRipMin(666)
		TNT1 A 0 A_ChangeFlag("NOTELEFRAG",1)
		Stop
	}
}

ACTOR NoSeekPalette : PowerupGiver
{
    -INVENTORY.INVBAR
    +INVENTORY.INTERHUBSTRIP
    Inventory.MaxAmount 1
    Powerup.Type "NoSeek"
    Powerup.Color Magenta4 0.2
    Powerup.Duration 1575
    +INVENTORY.AUTOACTIVATE
}



//--------------------------------------------------------------------

ACTOR StoneOfRestoration : CustomInventory
{
    +FLOATBOB
    +COUNTITEM
    +INVENTORY.FANCYPICKUPSOUND
    +INVENTORY.INVBAR
	+DONTGIB
    Scale 0.25
    Inventory.Amount 1
    Inventory.MaxAmount 10
    Inventory.PickupMessage "You found the Stone of Restoration!"
    Inventory.PickupSound "powerup/sunstone"
    Inventory.UseSound "powerup/stone/use"
    Inventory.Icon "HARTSUST"
    Tag "Ammo, health and armor regenerates (timed)"
    States
    {
    Spawn:
	SUST ABCDEFGHIJKLMNOPQRSTUVWX 2
	Loop
    Use:
	TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
	TNT1 A 0 A_JumpIfInventory("MRegenTimer",1,"End")
	TNT1 A 0 A_GiveInventory("MRegenTimer",1)
	TNT1 A 0 A_GiveInventory("MRegenPalette",1)
	TNT1 A 0 A_SpawnItemEx("MRegen1",0,0,0,0,0,0,0,32,0)
	Stop
	End:
	TNT1 A 0
	Fail
    }
}

ACTOR PowerManaRegen : PowerProtection
{
    DamageFactor "Normal", 1.0
    Inventory.Icon "ARTSUNA"
}

ACTOR MRegenPalette : PowerupGiver
{
    -INVENTORY.INVBAR
    +INVENTORY.INTERHUBSTRIP
    Inventory.MaxAmount 1
    Powerup.Type "ManaRegen"
    Powerup.Color PaleVioletRed1 0.2
    Powerup.Duration 2100
    +INVENTORY.AUTOACTIVATE
}

ACTOR MRegen1
{
    Radius 0
    Height 0
    +NOTIMEFREEZE
    +NOFEAR
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_SpawnItemEx("MRegenGiver",0,0,0,0,0,0,0,32,0)
        Stop
    }
}

ACTOR MRegenTimer : CustomInventory
{
   +NOTIMEFREEZE
   +INVENTORY.INTERHUBSTRIP
   States
   {
   Use:
       TNT1 A 0
       Stop
   }
}

ACTOR MRegenTimer2 : Inventory
{
    +NOTIMEFREEZE
    Inventory.Amount 1
    Inventory.MaxAmount 60
    States
    {
    Spawn:
        TNT1 A 0
        Stop
    }
}

ACTOR RestoreHealth : HealthBonus
{
    Inventory.Amount 5
    Inventory.MaxAmount 500
}

Actor RestoreArmor : ArmorBonus
{
    Inventory.Icon ARM1A1
    Armor.Saveamount 5
    Armor.MaxSaveAmount 500
}

ACTOR MRegenGiver
{
    Health 1000000000
    Radius 0
    Height 0
    Speed 0
    +NONSHOOTABLE
    +MISSILEMORE
    +MISSILEEVENMORE
    +NOTIMEFREEZE
    +NOFEAR
    MinMissileChance 0
    States
    {
    Spawn:
        TNT1 A 1 A_Look
        Loop
    See:
        TNT1 A 1 A_Chase
        Loop
    Missile:
        TNT1 A 0 A_JumpIfInTargetInventory("MRegenTimer",1,2)
        TNT1 A 0 A_Jump(256,"Death")
        TNT1 A 0 A_JumpIfInventory("MRegenTimer2",60,"Death")
        TNT1 A 0 A_GiveInventory("MRegenTimer2",1)
	TNT1 A 0 A_GiveToTarget("BlueMana",3)
	TNT1 A 0 A_GiveToTarget("GreenMana",2)
	TNT1 A 0 A_GiveToTarget("RedMana",1)
	TNT1 A 0 A_GiveToTarget("AEClip",3)
	TNT1 A 0 A_GiveToTarget("AENails",3)
	TNT1 A 0 A_GiveToTarget("AEShell",1)
	TNT1 A 0 A_GiveToTarget("AECell",4)
	TNT1 A 0 A_GiveToTarget("PlasmaRod",4)
	TNT1 A 0 A_GiveToTarget("ASTF",2)
	TNT1 A 0 A_GiveToTarget("MiniRockets",2)
	
	TNT1 A 0 A_jump(128,2)	//will give it 1/2 of the iterations (average says you'll get 20)
	TNT1 A 0 A_GiveToTarget("AEGrenade",1)
	TNT1 A 0 A_jump(172,2)	//1/3
	TNT1 A 0 A_GiveToTarget("AERocket",1)
	TNT1 A 0 A_jump(172,2)	//1/3
	TNT1 A 0 A_GiveToTarget("DarkMana",1)
	
	TNT1 A 0 A_GiveInventory("MRegenCheck",1)
	TNT1 A 0 A_JumpIfInventory("MRegenCheck",3,2)
	TNT1 A 0 A_Jump(256,3)
	TNT1 A 0 A_TakeInventory("MRegenCheck",3)
	TNT1 A 0 A_GiveToTarget("RestoreHealth",1)
	TNT1 A 35 A_GiveToTarget("RestoreArmor",1)
        Loop
    Death:
        TNT1 A 0 A_TakeFromTarget("MRegenTimer",1)
        Stop
    }
}

ACTOR MRegenCheck : Inventory
{
    Inventory.Amount 1
    Inventory.MAxAmount 3
}

//--------------------------------------------------------------------

ACTOR AntiChickenator : CustomInventory
{
    +FLOATBOB
    +COUNTITEM
    +INVENTORY.FANCYPICKUPSOUND
    +INVENTORY.INVBAR
	+DONTGIB
    Scale 0.18
    Inventory.Amount 1
    Inventory.MaxAmount 10
    Inventory.PickupMessage "Antichickenator!"
    Inventory.PickupSound "powerup/antichickenator"
    Inventory.UseSound "powerup/antichickenator/use"
    Inventory.Icon "HARTNOMO"
    Tag "Cant be morphed, small damage protection (timed)"
    States
    {
    Spawn:
	NOMO ABCDEFGHIJKLMNOPQRSTUVWX 2
	Loop
    Use:
	TNT1 A 0 A_JumpIfInventory("NoMorphTimer",1,8)
	TNT1 A 0 //A_JumpIfInventory("PowerInvulBase",1,3)
	TNT1 A 0 A_GiveInventory("UnMorpher",1)
	TNT1 A 0 A_SpawnItemEx("NoMorph1",0,0,0,0,0,0,0,32,0)
	Stop
	TNT1 A 0 //A_GiveInventory("PentagramInUse",1)
	TNT1 A 1 //A_TakeInventory("PowerInvulBase",1)
	TNT1 A 0 //A_GiveInventory("UnMorpher",1)
	TNT1 A 0 //A_SpawnItemEx("NoMorph1",0,0,0,0,0,0,0,32,0)
	Stop
	TNT1 A 0
	Stop
    }
}

ACTOR UnMorpher : ArtiTomeOfPower
{
    Game Doom
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.QUIET
    -INVENTORY.INVBAR
    -INVENTORY.PICKUPFLASH
    -COUNTITEM
    -FLOATBOB
    Inventory.PickupMessage ""
    Powerup.Duration 1
}

ACTOR PowerNoMorph : PowerProtection
{
    DamageFactor "Normal", 0.75
    Inventory.Icon "ARTNOMOA"
}

ACTOR NoMorphPalette : PowerupGiver
{
    -INVENTORY.INVBAR
    +INVENTORY.INTERHUBSTRIP
    Inventory.MaxAmount 1
    Powerup.Type "NoMorph"
    Powerup.Color "40 00 80" 0.2
    Powerup.Duration 2100
    +INVENTORY.AUTOACTIVATE
}

ACTOR NoMorphTimer : CustomInventory
{
   +NOTIMEFREEZE
   +INVENTORY.INTERHUBSTRIP
   States
   {
   Use:
       TNT1 A 0
       Stop
   }
}

ACTOR NoMorphTimer2 : Inventory
{
    +NOTIMEFREEZE
    Inventory.Amount 1
    Inventory.MaxAmount 2100
    States
    {
    Spawn:
        TNT1 A 0
        Stop
    }
}

ACTOR NoMorph1
{
    Radius 0
    Height 0
    +NOTIMEFREEZE
    +NOFEAR
    States
    {
    Spawn:
        TNT1 A 0
	TNT1 A 0 A_SpawnItemEx("NoMorphGiver",0,0,0,0,0,0,0,32,0)
        Stop
    }
}

ACTOR NoMorph2 : CustomInventory
{
    +INVENTORY.AUTOACTIVATE
    +NOTIMEFREEZE
    States
    {
    Pickup:
        TNT1 A 0 A_ChangeFlag("DONTMORPH",1)
        Stop
    }
}

ACTOR NoMorph3 : CustomInventory
{
    +INVENTORY.AUTOACTIVATE
    +NOTIMEFREEZE
    States
    {
    Pickup:
        TNT1 A 0 A_ChangeFlag("DONTMORPH",0)
        Stop
    }
}

ACTOR NoMorphGiver
{
    Health 100000000
    Radius 0
    Height 0
    Speed 0
    +NONSHOOTABLE
    +MISSILEMORE
    +MISSILEEVENMORE
    +NOTIMEFREEZE
    +NOFEAR
    MinMissileChance 0
    States
    {
    Spawn:
        TNT1 A 1 A_Look
        Loop
    See:
    Missile:
	TNT1 A 0 A_JumpIfInTargetInventory("NoMorphTimer",1,4)
	TNT1 A 0 A_GiveToTarget("NoMorphTimer",1)
	TNT1 A 0 A_GiveToTarget("NoMorphPalette",1)
	TNT1 A 0 A_SpawnItemEx("NoMorphGiver2",0,0,0,0,0,0,0,32,0)
	Stop
	TNT1 A 0
	Stop
    }
}

ACTOR NoMorphGiver2 : NoMorphGiver
{
    States
    {
    See:
    Missile:
	TNT1 A 0 A_JumpIfInTargetInventory("NoMorphTimer",1,2)
	TNT1 A 0 A_Jump(256,"Death")
	TNT1 A 0 A_GiveToTarget("NoMorph2",1)
	TNT1 A 0 A_JumpIfInventory("NoMorphTimer2",2100,"Death")
	TNT1 A 1 A_GiveInventory("NoMorphTimer2",1)
	Goto Missile+3
    Death:
        TNT1 A 0 A_GiveToTarget("NoMorph3",1)
	TNT1 A 0 A_TakeFromTarget("NoMorphTimer",1)
        Stop
    }
}

ACTOR PentagramInUse : CustomInventory
{
    +INVENTORY.AUTOACTIVATE
    +NOTIMEFREEZE
    States
    {
    Pickup:
	TNT1 A 0
        TNT1 A 0 A_SpawnItemEx("Pentagram1",0,0,0,0,0,0,0,32,0)
        Stop
    }
}

ACTOR Pentagram1
{
    Radius 0
    Height 0
    +NOTIMEFREEZE
    +NOFEAR
    States
    {
    Spawn:
        TNT1 A 0
	TNT1 A 0 A_SpawnItemEx("PentagramRestorer",0,0,0,0,0,0,0,32,0)
        Stop
    }
}

ACTOR PentagramRestorer : NoMorphGiver
{
    Radius 0
    Height 0
    +NOTIMEFREEZE
    +NOFEAR
    States
    {
    See:
    Missile:
	TNT1 A 0 A_TakeFromTarget("PentagramInUse",1)
	TNT1 A 0 A_GiveToTarget("PowerInvulBase",1)
        Stop
    }
}

//--------------------------------------------------------------------

ACTOR IconOfSummoning : ArtiDarkServant replaces ArtiDarkServant
{
    Inventory.PickupMessage "You found the Icon of Summoning!"
    Inventory.PickupSound "items/summoning/pickup"
    Inventory.UseSound "items/summoning/use"
    Inventory.Icon "HARTSUMN"
    Inventory.MaxAmount 5
    Scale 0.13
    Tag "Summons a strong servant (timed)"
	-NOGRAVITY
	+DONTGIB
    States
    {
    Spawn:
		TNT1 A 0
		//TNT1 A 0 A_Warp(AAPTR_DEFAULT,0,0,0,0,WARPF_STOP|WARPF_TOFLOOR|WARPF_NOCHECKPOSITION)
		SUMN A -1 Bright
		Loop
    }
}

/*ACTOR DarkServantSummoner : SummoningDoll replaces SummoningDoll
{
    Scale 0.13
    States
    {
    Spawn:
	SUMN A 4 Bright
	Loop
    Death:
	SUMN AA 4 Bright
	SUMN A 4 Bright A_Summon
	Stop
    }
}*/

ACTOR DarkServantSummoner : SummoningDoll replaces SummoningDoll
{
    Scale 0.13
    States
    {
    Spawn:
		SUMN A 0
	Moving:
		SUMN A 4 bright
		Loop
    Death:
		SUMN AA 4 Bright
		TNT1 A 0 A_JumpIfInventory("L4DMode",1,"SummonSurvivor",AAPTR_PLAYER1)
		TNT1 A 0 A_JumpIfInventory("L4DDirToken",1,"Randomize",AAPTR_PLAYER1)
		TNT1 A 0 A_JumpIfInventory("JokeToken",1,"Randomize",AAPTR_PLAYER1)
		Goto SummonHeresiarch
	Randomize:
		TNT1 A 0 A_Jump(64,"SummonHeresiarch")
		Goto SummonSurvivor
	SummonHeresiarch:
		SUMN A 4 Bright A_Summon
		Stop
	SummonSurvivor:
		TNT1 A 0 A_SpawnItemEx("SurvivorSpawner",0,0,0,0,0,0,0,32)
		Stop
    }
}

Actor SurvivorSpawner
{
	Monster
	+FRIENDLY
	+NONSHOOTABLE
	-SHOOTABLE
	-COUNTKILL
	+NOINTERACTION
	+NODAMAGE
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_RearrangePointers(AAPTR_PLAYER_GETTARGET,AAPTR_PLAYER1,AAPTR_DEFAULT,4)
		TNT1 A 0 A_CopyFriendliness(AAPTR_PLAYER1)
		TNT1 A 0 A_SpawnItemEx("TeleportFog",0,0,0,0,0,0,0,32)
		TNT1 A 0 A_Jump(256,"S1","S2","S3","S4","S5","S6","S7")
		//Not including Rochelle due to how much trouble she is with her chainsaw.
	S1:
		TNT1 A 0 A_SpawnItemEx("AEL4DBill",0,0,0,0,0,0,0,32|SXF_TRANSFERPOINTERS)
		Stop
	S2:
		TNT1 A 0 A_SpawnItemEx("AEL4DLouis",0,0,0,0,0,0,0,32|SXF_TRANSFERPOINTERS)
		Stop
	S3:
		TNT1 A 0 A_SpawnItemEx("AEL4DFrancis",0,0,0,0,0,0,0,32|SXF_TRANSFERPOINTERS)
		Stop
	S4:
		TNT1 A 0 A_SpawnItemEx("AEL4DZoey",0,0,0,0,0,0,0,32|SXF_TRANSFERPOINTERS)
		Stop
	S5:
		TNT1 A 0 A_SpawnItemEx("AEL4DNick",0,0,0,0,0,0,0,32|SXF_TRANSFERPOINTERS)
		Stop
	S6:
		TNT1 A 0 A_SpawnItemEx("AEL4DEllis",0,0,0,0,0,0,0,32|SXF_TRANSFERPOINTERS)
		Stop
	S7:
		TNT1 A 0 A_SpawnItemEx("AEL4DCoach",0,0,0,0,0,0,0,32|SXF_TRANSFERPOINTERS)
		Stop
	}
}

ACTOR HeresiarchSummon : MinotaurFriend Replaces MinotaurFriend
{
    +FLOORCLIP
    -BOSS
    -NOBLOOD
    +NORADIUSDMG
    +NOICEDEATH
    -BOSSDEATH
    +DONTMORPH
    +DONTRIP
    +FRIENDLY
    +NOFEAR
    +NONSHOOTABLE
    Mass 5000
    Health 12000
    BloodColor Purple
    SeeSound "SorcererSight"
    PainSound "SorcererPain"
    DeathSound "SorcererDeathScream"
    ActiveSound "SorcererActive"
    DamageFactor "HSummon", 0
    DamageFactor "Tempest", 0.5
    States
    {
    Spawn:
	SORC A 15 A_SetTranslucent(0.66, 0)
	SORC A 3 A_SetTranslucent(1, 0)
	SORC A 0 A_SetShootable
	SORC A 4 A_Look
    See:
	SORC A 5 A_Chase
	SORC A 0 A_GiveInventory("SummonLimit",1)
	SORC A 0 A_JumpIfInventory("SummonLimit",200,"Death")
	SORC B 5 A_Chase
	SORC A 0 A_GiveInventory("SummonLimit",1)
	SORC A 0 A_JumpIfInventory("SummonLimit",200,"Death")
	SORC C 5 A_Chase
	SORC A 0 A_GiveInventory("SummonLimit",1)
	SORC A 0 A_JumpIfInventory("SummonLimit",200,"Death")
	SORC D 5 A_Chase
	SORC A 0 A_GiveInventory("SummonLimit",1)
	SORC A 0 A_JumpIfInventory("SummonLimit",200,"Death")
	Loop
    Melee:
	Stop
    Missile:
	SORC F 0 A_Jump(48,"Lightning")
	SORC F 0 A_Jump(48,"FireSpell")
	SORC F 0 A_Jump(40,"FloorIce")
	SORC F 0 A_Jump(32,"Teleport")
	Loop
    Lightning:
	SORC F 0 A_JumpIfCloser(1800,1)
	Goto Missile+1
	SORC F 0 A_PlaySound("heresiarch/spellcast",CHAN_BODY,1.0,0,ATTN_NONE)
	SORC FFFFF 4 Bright A_FaceTarget
	SORC F 0 A_PlaySound("heresiarch/lightning",CHAN_VOICE,1.0,1,ATTN_NONE)
	SORC EE 0 Bright A_CustomMissile("HSummonLightning",52,0,random(5,-5))
	SORC E 1 Bright A_FaceTarget
	SORC E 0 Bright A_GiveInventory("HLightningCount",1)
	SORC E 0 Bright A_JumpIfInventory("HLightningCount",90,1)
	Goto Lightning+7
	SORC E 0 Bright A_StopSound(CHAN_VOICE)
	SORC E 0 Bright A_TakeInventory("HLightningCount",90)
	SORC E 8 Bright A_FaceTarget
	Goto See
    FloorIce:
	SORC F 0 A_PlaySound("heresiarch/spellcast",CHAN_BODY,1.0,0,ATTN_NONE)
	SORC FFFFF 4 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("MaulatorHamSwing",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 1 Bright A_CustomMissile("HSummonFloorIce",0,0,24)
	SORC E 1 Bright A_CustomMissile("HSummonFloorIce",0,0,16)
	SORC E 1 Bright A_CustomMissile("HSummonFloorIce",0,0,8)
	SORC E 1 Bright A_CustomMissile("HSummonFloorIce",0,0,0)
	SORC E 1 Bright A_CustomMissile("HSummonFloorIce",0,0,-8)
	SORC E 1 Bright A_CustomMissile("HSummonFloorIce",0,0,-16)
	SORC E 1 Bright A_CustomMissile("HSummonFloorIce",0,0,-24)
	SORC E 8 Bright A_FaceTarget
	Goto See
    FireSpell:
	SORC F 0 A_PlaySound("heresiarch/spellcast",CHAN_BODY,1.0,0,ATTN_NONE)
	SORC FFFFF 4 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,-12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,-12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,-12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,-12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,-12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,-12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,-12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,12,random(2,-2))
	SORC E 0 Bright A_FaceTarget
	SORC E 0 Bright A_PlaySound("reilsss/weapons/macefire",CHAN_VOICE,1.0,0,ATTN_NONE)
	SORC E 4 Bright A_CustomMissile("HSummonPhoenixShot",56,-12,random(2,-2))
	SORC E 8 Bright A_FaceTarget
	Goto See
    Teleport:
	SORC F 0 A_PlaySound("heresiarch/spellcast",CHAN_BODY,1.0,0,ATTN_NONE)
	SORC FFFFF 4 A_FaceTarget
	SORC E 0 A_UnSetShootable
	SORC E 1 A_SetTranslucent(0.9,0)
	SORC E 1 A_SetTranslucent(0.8,0)
	SORC E 1 A_SetTranslucent(0.7,0)
	SORC E 1 A_SetTranslucent(0.6,0)
	SORC E 1 A_SetTranslucent(0.5,0)
	SORC E 1 A_SetTranslucent(0.4,0)
	SORC E 1 A_SetTranslucent(0.3,0)
	SORC E 1 A_SetTranslucent(0.2,0)
	SORC E 1 A_SetTranslucent(0.1,0)
	SORC E 0 A_PlaySound("misc/teleport")
	TNT1 A 5
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander
	TNT1 A 5
	SORC E 0 A_PlaySound("misc/teleport")
	SORC E 1 A_SetTranslucent(0.1,0)
	SORC E 1 A_SetTranslucent(0.2,0)
	SORC E 1 A_SetTranslucent(0.3,0)
	SORC E 1 A_SetTranslucent(0.4,0)
	SORC E 1 A_SetTranslucent(0.5,0)
	SORC E 1 A_SetTranslucent(0.6,0)
	SORC E 1 A_SetTranslucent(0.7,0)
	SORC E 1 A_SetTranslucent(0.8,0)
	SORC E 1 A_SetTranslucent(0.9,0)
	SORC E 1 A_SetTranslucent(1,0)
	SORC E 0 A_SetShootable
	SORC E 5
	Goto See
    Pain:
	SORC G 0 A_StopSound(CHAN_VOICE)
	SORC G 8 A_TakeInventory("HLightningCount",90)
	SORC G 8 A_Pain
	SORC G 0 A_Jump(192,1)
	Goto Teleport
	SORC G 0
	Goto See
    Death:
	SORC G 0 Bright A_Scream
	SORC G 0 A_SpawnItemEx("HeresiarchSmoke",0,0,0,0,0,0,0,32,0)
	SORC G 0 A_DamageMaster(10,"HCLoneDead")
	SORC G 1 A_FadeOut(0.03)
	Wait
    }
}

ACTOR HSummonLightning
{
    Radius 6
    Height 8
    PROJECTILE
    +RANDOMIZE
    Damage 2
    DamageType "Electric"
    DamageType "HSummon"
    Scale 0.3
    Speed 28
    RenderStyle Add
    DeathSound "heresiarch/lightning/hit"
    Alpha 0.7
    States
    {
    Spawn:
	HSPL ABCDEFGHIJABCDEFGHIJ 3 Bright
	HSPL ABCDEFGHIJ 3 Bright A_FadeOut
	Stop
    Death:
	TNT1 A 0
	Stop
    Crash:
    XDeath:
	TNT1 A 20 A_Scream
	Stop
    }
}

ACTOR HSummonPhoenixShot
{
    PROJECTILE
    +SEEKERMISSILE
    Mass 1
    Radius 8
    Height 6
    Speed 20
    Damage 6
    Scale 0.3
    DeathSound "weapons/phoenixhit"
    Decal "PyroDecal2"
    DamageType "HSummon"
    States
    {
    Spawn:
	PYBU AA 1 Bright A_SpawnItemEx("HPhoenixTrail",0,0,0,0,0,0,0,128)
	PYBU A 0 Bright A_SeekerMissile(2,2)
	PYBU AA 1 Bright A_SpawnItemEx("HPhoenixTrail",0,0,0,0,0,0,0,128)
	PYBU A 0 Bright A_SeekerMissile(2,2)
	PYBU BB 1 Bright A_SpawnItemEx("HPhoenixTrail",0,0,0,0,0,0,0,128)
	PYBU B 0 Bright A_SeekerMissile(2,2)
	PYBU BB 1 Bright A_SpawnItemEx("HPhoenixTrail",0,0,0,0,0,0,0,128)
	PYBU B 0 Bright A_SeekerMissile(2,2)
	PYBU CC 1 Bright A_SpawnItemEx("HPhoenixTrail",0,0,0,0,0,0,0,128)
	PYBU C 0 Bright A_SeekerMissile(2,2)
	PYBU CC 1 Bright A_SpawnItemEx("HPhoenixTrail",0,0,0,0,0,0,0,128)
	PYBU C 0 Bright A_SeekerMissile(2,2)
	Loop
    Death:
	PYBU D 1 Bright A_Explode(32,32,0)
	TNT1 AAAAAAA 0 A_SpawnItemEx("PhoenixRodExtraSFX",0,0,0,random(1,-1),random(1,-1),random(1,-1),random(0,359),32)
	PYBU D 1 Bright A_SpawnItemEx("PhoenixSFX2",0,0,0,0,0,0,0,128)
	PYBU D 1 bright
	PYBU E 3 Bright
	TNT1 A 0 A_SpawnItemEx("PhoenixSFX",0,0,0,0,0,0,0,128)
	Stop
    }
}

ACTOR HSummonFloorIce
{
    Speed 14
    Radius 8
    Height 16
    Damage 2
    PROJECTILE
    +FLOORHUGGER
    +BLOODLESSIMPACT
    +SEEKERMISSILE
    +NODAMAGETHRUST
    +RIPPER	RipperLevel 1
    DamageType "Ice"
    DamageType "HSummon"
    States
    {
    Spawn:
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 2 A_SpawnItemEx("HSummonFloorIce2",0,0,0,0,0,0,0,32,0)
	TNT1 A 0 A_Jump(128,1)
	Goto Spawn+28
	TNT1 A 0 A_JumpIfInventory("SeekerCheck",1,"Spawn")
	TNT1 AA 0 A_SeekerMissile(90,90)
	TNT1 A 0 A_GiveInventory("SeekerCheck",1)
	Loop
    Death:
	TNT1 A 0
	Stop
    }
}

ACTOR HSummonFloorIce2
{
    Speed 0
    Radius 8
    Height 16
    Damage 2
    PROJECTILE
    +RIPPER	RipperLevel 1
    +FLOORHUGGER
    +BLOODLESSIMPACT
    +NODAMAGETHRUST
    +SHADOW
    RenderStyle Add
    DamageType "Ice"
    DamageType "HSummon"
    Translation "230:231=192:192","163:164=193:193","217:221=193:194","165:165=194:194","232:232=195:195",
		"182:183=195:196","233:233=196:196","184:185=196:197","186:187=197:198","166:167=197:198",
		"188:189=198:199","236:239=198:198","45:47=199:200","2:2=201:201","190:191=199:200"
    States
    {
    Spawn:
	FX13 DC 4 Bright
	FX13 BCDE 5 Bright
	FX13 FGH 4 Bright
	Stop
    }
}


ACTOR SummonLimit : Inventory
{
    Inventory.Amount 1
    Inventory.MaxAmount 200
}












//=================================================================================================================
//
//=================================================================================================================
//=================================================================================================================
//
// Powerslave spawners
//
//=================================================================================================================
//=================================================================================================================
// This were moved from MonPowerS.AED because, while the idea comes from powerslave, right now these are generic
// for all aeod.
//=================================================================================================================


Actor PowerSlaveSpawner //This Spawns Weapon power or Health orbs randomly.
{
    radius 0
    height 0
    +NOCLIP
//    +FLOORCLIP
    states
    {
    Spawn:
	TNT1 A 20
	//TNT1 A 0 A_PlaySound("monster/bastet/warpin")
	TNT1 A 0 A_Jump(170,"AmmoSpawner")
	TNT1 A 0 A_Jump(256,"Choose")
    Choose:
	TNT1 A 0 A_Jump(190,"Health1","Armor1")
	TNT1 A 0 A_Jump(256,"Health2","Armor2")
    Health1:
	TNT1 A 0 A_SpawnItem("SmallHealthPowerOrbSpawn",0,0,0)	stop
    Health2:
	TNT1 A 0 A_SpawnItem("LargeHealthPowerOrbSpawn",0,0,0)	stop
    Armor1:
	TNT1 A 0 A_SpawnItem("SmallShieldPowerOrbSpawn",0,0,0)	stop
    Armor2:
	TNT1 A 0 A_SpawnItem("LargeShieldPowerOrbSpawn",0,0,0)	stop
    AmmoSpawner:
      TNT1 A 0 A_SpawnItem("LargeWeaponPowerOrbSpawn",0,0,0)	stop
    }
}

//---------------------------------------------------------------
//		Ammo
Actor LargeWeaponPowerOrbSpawn
{
    scale 0.8
    RENDERSTYLE ADD
    +NOINTERACTION
    Translation "0:255=%[0.0,0.0,0.0]:[0.65,0.65,1.1]"
    states
    {
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItemEx("BigWeaponPower",0,0,0,0,0,0,0,33)
	stop
    }
}

Actor SmallWeaponPowerOrbSpawn : LargeWeaponPowerOrbSpawn
{
    scale 0.5
    states
    {
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItemEx("SmallWeaponPower",0,0,0,0,0,0,0,33)
	stop
    }
}

Actor FullWeaponPowerSpawner : LargeWeaponPowerOrbSpawn
{
    states
    {
    Spawn:
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(9.0,-9.0),frandom(9.0,-9.0),frandom(9.0,-9.0),0,33)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(9.0,-9.0),frandom(9.0,-9.0),frandom(9.0,-9.0),0,3)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItemEx("FullWeaponPower",0,0,0,0,0,0,0,33)
	stop
    }
}

//---------------------------------------------------------------
//		Health
Actor LargeHealthPowerOrbSpawn : LargeWeaponPowerOrbSpawn
{
    Translation "192:207=208:223"
    states
    {
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvOrangeOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,32)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvOrangeOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,32)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItem("BigHealthPower",0,0,0)
	stop
    }
}

Actor SmallHealthPowerOrbSpawn : LargeHealthPowerOrbSpawn
{
    scale 0.5
    states
    {
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvOrangeOrbPartSmall",0,0,25,frandom(4.0,-4.0),frandom(4.0,-4.0),frandom(4.0,-4.0),0,32)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvOrangeOrbPartSmall",0,0,25,frandom(4.0,-4.0),frandom(4.0,-4.0),frandom(4.0,-4.0),0,32)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItem("SmallHealthPower",0,0,0)
	stop
    }
}

Actor FullHealthPowerSpawner : LargeHealthPowerOrbSpawn
{
    states
    {
    Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvOrangeOrbPart",0,0,25,frandom(9.0,-9.0),frandom(9.0,-9.0),frandom(9.0,-9.0),0,32)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvOrangeOrbPart",0,0,25,frandom(9.0,-9.0),frandom(9.0,-9.0),frandom(9.0,-9.0),0,32)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItem("FullHealthPower",0,0,0)
	stop
    }
}

//---------------------------------------------------------------
//		Shield
Actor LargeShieldPowerOrbSpawn : LargeWeaponPowerOrbSpawn
{
    Translation "192:207=169:191"
    states
    {
    Spawn:
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvRedOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,32)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvRedOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,32)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItem("BigShieldPower",0,0,0)
	stop
    }
}

Actor SmallShieldPowerOrbSpawn : LargeShieldPowerOrbSpawn
{
    scale 0.5
    states
    {
    Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvRedOrbPartSmall",0,0,25,frandom(4.0,-4.0),frandom(4.0,-4.0),frandom(4.0,-4.0),0,32)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvRedOrbPartSmall",0,0,25,frandom(4.0,-4.0),frandom(4.0,-4.0),frandom(4.0,-4.0),0,32)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItem("SmallShieldPower",0,0,0)
	stop
    }
}


//---------------------------------------------------------------
//		Particles for the spawning
Actor PwrSlvBlueOrbPart 
{
	+NOINTERACTION
	RenderStyle Add
	Scale 0.3
	//Translation "0:255=%[0.2,0.2,0.6]:[1.0,1.0,1.5]"
	//Translation "0:255=%[0.0,0.0,0.0]:[0.4,0.4,1.1]"
	States
	{
	Spawn:
		TNT1 A 3
		FRB1 C 0 Bright A_ScaleVelocity(0.5)
		FRB1 C 1 Bright A_SetTranslucent(0.1,1)
		FRB1 C 1 Bright A_SetTranslucent(0.2,1)
		FRB1 C 1 Bright A_SetTranslucent(0.3,1)
		FRB1 C 0 Bright A_ScaleVelocity(0.5)
		FRB1 C 1 Bright A_SetTranslucent(0.4,1)
		FRB1 C 1 Bright A_SetTranslucent(0.5,1)
		FRB1 C 1 Bright A_SetTranslucent(0.6,1)		
		FRB1 C 0 Bright A_ScaleVelocity(0.5)
		FRB1 C 1 Bright A_SetTranslucent(0.7,1)
		FRB1 C 1 Bright A_SetTranslucent(0.8,1)
		FRB1 C 1 Bright A_SetTranslucent(0.9,1)
		FRB1 C 0 Bright A_ScaleVelocity(0.5)
		FRB1 C 3 Bright A_SetTranslucent(1.0,1)
		FRB1 C 2 Bright A_ScaleVelocity(-1.0)
		FRB1 CCCCC 3 Bright A_ScaleVelocity(1.5)
		Stop
	}
}
Actor PwrSlvOrangeOrbPart : PwrSlvBlueOrbPart
{ Translation "0:255=%[0.7,0.3,0.15]:[1.5,0.7,0.35]" }
Actor PwrSlvOrangeOrbPartSmall : PwrSlvOrangeOrbPart
{ Scale 0.12 }

Actor PwrSlvRedOrbPart : PwrSlvBlueOrbPart
{ Translation "0:255=%[0.3,0.0,0.0]:[1.1,0.0,0.0]" }
Actor PwrSlvRedOrbPartSmall : PwrSlvRedOrbPart
{ Scale 0.12 }

Actor PwrSlvGreenOrbPart : PwrSlvBlueOrbPart
{ Translation "0:255=%[0.0,0.0,0.0]:[0.5,1.3,0.5]" }
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
// Ammo orbs
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
Actor BigWeaponPower
{
	var int user_Type;
	+NOINTERACTION
	VisibleToPlayerClass AEoDmarine
	States
	{
	Spawn:
		TNT1 A 35 NoDelay ACS_NamedExecuteAlways("SpawnDeployWeapons",0,1,0,0)
		/*TNT1 A 0 A_SetUserVar("user_Type",(CallACS("s912",0,0,0)))
		TNT1 A 0 A_JumpIf(user_Type==3||user_Type>=16&&user_Type<=19,"Magic") 
		TNT1 a 0 A_JumpIf(user_Type==4||user_Type==15||user_Type==22
				||user_Type==23||user_Type==25,"Tech")	
		TNT1 A 0 A_JumpIf(user_Type==0,"C_AEoD")*/
		Goto Normal
	Magic:
		TNT1 A 0 A_SpawnItemEx("BigWeaponPowerMagic",0,0,0,0,0,0,0,33)
		Stop
	Normal:
		TNT1 A 0 A_SpawnItemEx("BigWeaponPowerNormal",0,0,0,0,0,0,0,33)
		Stop
	Tech:
		TNT1 A 0 A_SpawnItemEx("BigWeaponPowerTech",0,0,0,0,0,0,0,33)
		Stop
	C_AEoD:
		TNT1 A 0 A_SpawnItemEx("BigWeaponPowerClassic",0,0,0,0,0,0,0,33)
		Stop
	}
}
Actor BigWeaponPowerMagic : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
	Gravity 0.15
    Height 20
    Radius 16
    Scale 0.7
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Ammo Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright
		Loop
    Pickup:
		TNT1 A 0 A_JumpIfInventory("BlueMana",25,1)
		Goto Ammo1
		TNT1 A 0 A_JumpIfInventory("GreenMana",20,1)
		Goto Ammo2
		TNT1 A 0 A_JumpIfInventory("RedMana",12,1)
		Goto Ammo3
		TNT1 A 0 A_JumpIfInventory("DarkMana",8,1)
		Goto Ammo4
		TNT1 A 0
		Goto Randomized
	Ammo1:
		TNT1 A 0 A_GiveInventory("BlueManaOrb",12)
		Stop
	Ammo1b:
		TNT1 A 0 A_GiveInventory("BlueManaOrb",6)
		Stop
	Ammo2:
		TNT1 A 0 A_GiveInventory("GreenManaOrb",8)
		Stop
	Ammo2b:
		TNT1 A 0 A_GiveInventory("GreenManaOrb",5)
		Stop
	Ammo3:
		TNT1 A 0 A_GiveInventory("RedManaOrb",6)
		Stop
	Ammo3b:
		TNT1 A 0 A_GiveInventory("RedManaOrb",4)
		Stop
	Ammo4:
		TNT1 A 0 A_GiveInventory("SmallDarkMana",1)
		Stop
	Ammo5: //Not influenced by depletion detection.
		TNT1 A 0 A_GiveInventory("AEGrenadeOrb",3)
		Stop
	Randomized:
		TNT1 A 0 A_Jump(4,"Ammo5")
		TNT1 A 0 A_Jump(32,"Ammo4")
		TNT1 A 0 A_Jump(256,"Ammo2b","Ammo1b","Ammo3b")
		Stop
    }	
}

Actor BigWeaponPowerNormal : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
    Height 20
    Radius 16
    Scale 0.7
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Ammo Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("AEClip",40,1)
		Goto Ammo1
		TNT1 A 0 A_JumpIfInventory("AEShell",12,1)  //this and the one below were switched to check first for shells
		Goto Ammo3
		TNT1 A 0 A_JumpIfInventory("AENails",25,1)
		Goto Ammo2
		TNT1 A 0 A_JumpIfInventory("AECell",30,1)
		Goto Ammo4
		TNT1 A 0 A_JumpIfInventory("PlasmaRod",30,1)
		Goto Ammo5
		TNT1 A 0 A_JumpIfInventory("MiniRockets",15,1)
		Goto Ammo6
		TNT1 A 0 A_JumpIfInventory("AEGrenade",10,1)
		Goto Ammo7
		TNT1 A 0 A_JumpIfInventory("AERocket",6,1)
		Goto Ammo8
		TNT1 A 0 A_JumpIfInventory("ASTF",20,1)
		Goto Ammo9
		TNT1 A 0
		Goto Randomized
	Ammo1:	TNT1 A 0 A_GiveInventory("AEClipOrb",16)	Stop
	Ammo1b:	TNT1 A 0 A_GiveInventory("AEClipOrb",8)		Stop
	Ammo2:	TNT1 A 0 A_GiveInventory("AENailOrb",14)	Stop
	Ammo2b:	TNT1 A 0 A_GiveInventory("AENailOrb",7)		Stop
	Ammo3:	TNT1 A 0 A_GiveInventory("BDShells",8)	Stop
	Ammo3b:	TNT1 A 0 A_GiveInventory("BDShells",4)	Stop
	Ammo4:	TNT1 A 0 A_GiveInventory("AECellOrb",16)	Stop
	Ammo4b:	TNT1 A 0 A_GiveInventory("AECellOrb",8)		Stop
	Ammo5:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",16)	Stop
	Ammo5b:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",8)	Stop
	Ammo6:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",6)	Stop
	Ammo6b:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",3)	Stop
	Ammo7:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",2)	Stop
	Ammo7b:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",1)	Stop
	Ammo8:	TNT1 A 0 A_GiveInventory("AERocketOrb",1)	Stop
	Ammo9:	TNT1 A 0 A_GiveInventory("ASTFOrb",10)		Stop
	Ammo9b:	TNT1 A 0 A_GiveInventory("ASTFOrb",5)		Stop
	Ammo10:	TNT1 A 0 A_GiveInventory("SmallDarkMana",1)	Stop
	Randomized:
		TNT1 A 0 A_Jump(4,"Ammo10")
		TNT1 A 0 A_Jump(256,"Ammo1b","Ammo2b","Ammo3b","Ammo4b","Ammo5b","Ammo6b",
		"Ammo7b","Ammo8","Ammo9b")
		Stop
	}
}

Actor BigWeaponPowerTech : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
    Height 20
    Radius 16
    Scale 0.7
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Ammo Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("AECell",20,1)
		Goto Ammo4
		TNT1 A 0 A_JumpIfInventory("AENails",35,1)	
		Goto Ammo2
		TNT1 A 0 A_JumpIfInventory("AEClip",30,1)
		Goto Ammo1
		TNT1 A 0 A_JumpIfInventory("AEShell",12,1)
		Goto Ammo3
		TNT1 A 0 A_JumpIfInventory("PlasmaRod",20,1)
		Goto Ammo5
		TNT1 A 0 A_JumpIfInventory("MiniRockets",15,1)
		Goto Ammo6
		TNT1 A 0 A_JumpIfInventory("AEGrenade",10,1)
		Goto Ammo7
		TNT1 A 0 A_JumpIfInventory("AERocket",6,1)
		Goto Ammo8
		TNT1 A 0 A_JumpIfInventory("ASTF",20,1)
		Goto Ammo9
		TNT1 A 0
		Goto Randomized
	Ammo1:	TNT1 A 0 A_GiveInventory("AEClipOrb",16)	Stop
	Ammo1b:	TNT1 A 0 A_GiveInventory("AEClipOrb",8)		Stop
	Ammo2:	TNT1 A 0 A_GiveInventory("AENailOrb",16)	Stop
	Ammo2b:	TNT1 A 0 A_GiveInventory("AENailOrb",8)		Stop
	Ammo3:	TNT1 A 0 A_GiveInventory("BDShells",8)	Stop
	Ammo3b:	TNT1 A 0 A_GiveInventory("BDShells",4)	Stop
	Ammo4:	TNT1 A 0 A_GiveInventory("AECellOrb",16)	Stop
	Ammo4b:	TNT1 A 0 A_GiveInventory("AECellOrb",8)		Stop
	Ammo5:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",16)	Stop
	Ammo5b:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",8)	Stop
	Ammo6:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",6)	Stop
	Ammo6b:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",3)	Stop
	Ammo7:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",2)	Stop
	Ammo7b:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",1)	Stop
	Ammo8:	TNT1 A 0 A_GiveInventory("AERocketOrb",1)	Stop
	Ammo9:	TNT1 A 0 A_GiveInventory("ASTFOrb",10)		Stop
	Ammo9b:	TNT1 A 0 A_GiveInventory("ASTFOrb",5)		Stop
	Randomized:
		TNT1 A 0 A_Jump(256,"Ammo7b","Ammo8","Ammo9b","Ammo6b","Ammo2b","Ammo3b",
		"Ammo5b","Ammo1b","Ammo4b")
		Stop
	}
}

Actor BigWeaponPowerClassic : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
    Height 20
    Radius 16
    Scale 0.7
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Ammo Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("AEClip",30,1)
		Goto Ammo1
		TNT1 A 0 A_JumpIfInventory("BlueMana",25,1)
		Goto Ammo11
		TNT1 A 0 A_JumpIfInventory("AENails",25,1)
		Goto Ammo2
		TNT1 A 0 A_JumpIfInventory("AEShell",10,1)
		Goto Ammo3
		TNT1 A 0 A_JumpIfInventory("GreenMana",20,1)
		Goto Ammo31
		TNT1 A 0 A_JumpIfInventory("AECell",30,1)
		Goto Ammo4
		TNT1 A 0 A_JumpIfInventory("PlasmaRod",30,1)
		Goto Ammo5
		TNT1 A 0 A_JumpIfInventory("MiniRockets",15,1)
		Goto Ammo6
		TNT1 A 0 A_JumpIfInventory("RedMana",12,1)
		Goto Ammo61
		TNT1 A 0 A_JumpIfInventory("AEGrenade",10,1)
		Goto Ammo7
		TNT1 A 0 A_JumpIfInventory("AERocket",6,1)
		Goto Ammo8
		TNT1 A 0 A_JumpIfInventory("ASTF",20,1)
		Goto Ammo9
		TNT1 A 0 A_JumpIfInventory("DarkMana",8,1)
		Goto Ammo10
		TNT1 A 0
		Goto Randomized
	Ammo1:	TNT1 A 0 A_GiveInventory("AEClipOrb",10)		Stop
	Ammo1b:	TNT1 A 0 A_GiveInventory("AEClipOrb",5)			Stop
	Ammo11:	TNT1 A 0 A_GiveInventory("BlueManaOrb",8)		Stop
	Ammo11b:	TNT1 A 0 A_GiveInventory("BlueManaOrb",4)	Stop
	Ammo2:	TNT1 A 0 A_GiveInventory("AENailOrb",10)		Stop
	Ammo2b:	TNT1 A 0 A_GiveInventory("AENailOrb",5)			Stop
	Ammo3:	TNT1 A 0 A_GiveInventory("AEShellOrb",6)		Stop
	Ammo3b:	TNT1 A 0 A_GiveInventory("AEShellOrb",3)		Stop
	Ammo31:	TNT1 A 0 A_GiveInventory("GreenManaOrb",5)		Stop
	Ammo31b:	TNT1 A 0 A_GiveInventory("GreenManaOrb",3)	Stop
	Ammo4:	TNT1 A 0 A_GiveInventory("AECellOrb",10)		Stop
	Ammo4b:	TNT1 A 0 A_GiveInventory("AECellOrb",5)			Stop
	Ammo5:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",10)		Stop
	Ammo5b:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",5)		Stop
	Ammo6:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",6)		Stop
	Ammo6b:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",3)		Stop
	Ammo61:	TNT1 A 0 A_GiveInventory("RedManaOrb",5)		Stop
	Ammo61b:	TNT1 A 0 A_GiveInventory("RedManaOrb",5)	Stop
	Ammo7:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",2)		Stop
	Ammo7b:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",1)		Stop
	Ammo8:	TNT1 A 0 A_GiveInventory("AERocketOrb",1)		Stop
	Ammo9:	TNT1 A 0 A_GiveInventory("ASTFOrb",10)			Stop
	Ammo9b:	TNT1 A 0 A_GiveInventory("ASTFOrb",5)			Stop
	Ammo10:	TNT1 A 0 A_GiveInventory("SmallDarkMana",1)		Stop
	Randomized:
		TNT1 A 0 A_Jump(256,"Ammo1b","Ammo11b","Ammo2b","Ammo3b","Ammo31b",
		"Ammo4b","Ammo5b","Ammo6b","Ammo61b","Ammo7b","Ammo8","Ammo9b","Ammo10")
		Goto Ammo1b
	}
}

Actor SmallWeaponPower : BigWeaponPower
{ }





//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//Special orbs for the shotgunners.
//-----------------------------------------------------------------------------
// Spawns a green orb which gives a shotgun equivalent per theme. Once player
// has picked it, it will spawn a regular blue ammo orb. Useful to get a 
// shotgun from the shotgunners.
//-----------------------------------------------------------------------------

Actor PowerSlaveSpawnerShotgunner //This Spawns Weapon power or Health orbs randomly.
{
    radius 0
    height 0
    +NOCLIP
	VisibleToPlayerClass AEoDmarine
    states
    {
    Spawn:
	TNT1 A 20
      TNT1 A 0 A_SpawnItem("ShotgunOrbSpawnChooser",0,0,0)	
	stop
    }
}

Actor ShotgunOrbSpawnChooser
{
    scale 0.8
    RENDERSTYLE ADD
    +NOINTERACTION
    Translation "0:255=%[0.0,0.0,0.0]:[0.5,1.3,0.5]"
	VisibleToPlayerClass AEoDmarine
    states
    {
	Spawn:
		TNT1 A 0 
		TNT1 A 0 A_JumpIfInventory("ShotgunGiven",1,"NormalAmmoSpawner",AAPTR_PLAYER1) // if player already picked one
	WeaponOrbSpawns:
		TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvGreenOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
		PS04 A 0 A_PlaySound("monster/bastet/warpin")
		PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvGreenOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
		PS04 EFGH 3 
		PS04 A 1 A_SpawnItemEx("ShotgunPowerOrb",0,0,0,0,0,0,0,33)
		stop
	NormalAmmoSpawner:
		TNT1 A 0 A_SpawnItemEx("MonsterAmmoOrbSpawn",0,0,0,0,0,0,0,32)	//see orb below
		Stop
    }
}



Actor ShotgunGiven : Inventory
{       Inventory.MaxAmount 1   }

Actor ShotgunPowerOrb
{
	var int user_Type;
	+NOINTERACTION
	VisibleToPlayerClass AEoDmarine
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 35 ACS_NamedExecuteAlways("SpawnDeployWeapons",0,1,0,0)
		/*TNT1 A 0 A_SetUserVar("user_Type",(CallACS("s912",0,0,0)))
		TNT1 A 0 A_JumpIf(user_Type==3||user_Type>=16&&user_Type<=19,"Magic") 
		TNT1 a 0 A_JumpIf(user_Type==4||user_Type==15||user_Type==22
				||user_Type==23||user_Type==25,"Tech")	
		TNT1 A 0 A_JumpIf(user_Type==0,"C_AEoD")*/
		Goto Normal
	Magic:
		TNT1 A 0 A_SpawnItemEx("ShotgunOrbPowerMagic",0,0,0,0,0,0,0,33)
		Stop
		
	Normal:
		TNT1 A 0 A_SpawnItemEx("ShotgunOrbPowerNormal",0,0,0,0,0,0,0,33)
		Stop
		
	Tech:
		TNT1 A 0 A_SpawnItemEx("ShotgunOrbPowerTech",0,0,0,0,0,0,0,33)
		Stop
	C_AEoD:
		TNT1 A 0 A_SpawnItemEx("ShotgunOrbPowerClassic",0,0,0,0,0,0,0,33)
		Stop
	}
}
Actor ShotgunOrbPowerMagic : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
	Gravity 0.15
    Height 20
    Radius 16
    Scale 0.7
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Weapon Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright NoDelay 
		Loop
    Pickup:
		TNT1 A 0 A_GiveInventory("AEoDSerpentStaffItem",1)
		TNT1 A 0 A_GiveInventory("ShotgunGiven",1)
		Stop
    }	
}

Actor ShotgunOrbPowerNormal : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
    Height 20
    Radius 16
    Scale 0.7
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Weapon Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright NoDelay 
		Loop
	Pickup:
		TNT1 A 0 A_GiveInventory("AEoDSPASShotgunItem",1)
		TNT1 A 0 A_GiveInventory("ShotgunGiven",1)
		Stop
	}
}

Actor ShotgunOrbPowerTech : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
    Height 20
    Radius 16
    Scale 0.7
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Weapon Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright NoDelay 
		Loop
	Pickup:
		TNT1 A 0 A_GiveInventory("AEoDSPASShotgunItem",1)
		TNT1 A 0 A_GiveInventory("ShotgunGiven",1)
		Stop
	}
}

Actor ShotgunOrbPowerClassic : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
    Height 20
    Radius 16
    Scale 0.7
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Weapon Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright NoDelay 
		Loop
	Pickup:
		TNT1 A 0 A_GiveInventory("ShotgunGiven",1)
		TNT1 A 0 A_Jump(256,"Type1","Type2")
	Type1:
		TNT1 A 0 A_GiveInventory("AEoDSPASShotgunItem",1)
		Stop
	Type2:
		TNT1 A 0 A_GiveInventory("AEoDSerpentStaffItem",1)
		Stop		
	}
}




//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
// Special orbs for the zombiemen and chaingunners (the shotgunners dont drop
// this one directly, but with their own special orb)
//-----------------------------------------------------------------------------
// This one gives ammo of the most basic types, ignoring the checks used in the
// standard orbs
//-----------------------------------------------------------------------------

Actor PowerSlaveSpawnerMonsterAmmo 
{
    radius 0
    height 0
    +NOCLIP
	VisibleToPlayerClass AEoDmarine
//    +FLOORCLIP
    states
    {
    Spawn:
	TNT1 A 20
    AmmoSpawner:
      TNT1 A 0 A_SpawnItem("MonsterAmmoOrbSpawn",0,0,0)	
	stop
    }
}


Actor MonsterAmmoOrbSpawn
{
    scale 0.7
    RENDERSTYLE ADD
    +NOINTERACTION
    Translation "0:255=%[0.0,0.0,0.0]:[0.9,0.9,1.1]"
	VisibleToPlayerClass AEoDmarine
    states
    {
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(5.0,-5.0),frandom(5.0,-5.0),frandom(5.0,-5.0),0,33)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(5.0,-5.0),frandom(5.0,-5.0),frandom(5.0,-5.0),0,33)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItemEx("MonsterAmmoPower",0,0,0,0,0,0,0,33)
	stop
    }
}
Actor MonsterAmmoPower
{
	var int user_Type;
	+NOINTERACTION
	VisibleToPlayerClass AEoDmarine
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 35 ACS_NamedExecuteAlways("SpawnDeployWeapons",0,1,0,0)
		/*TNT1 A 0 A_SetUserVar("user_Type",(CallACS("s912",0,0,0)))
		TNT1 A 0 A_JumpIf(user_Type==3||user_Type>=16&&user_Type<=19,"Magic") 
		TNT1 a 0 A_JumpIf(user_Type==4||user_Type==15||user_Type==22
				||user_Type==23||user_Type==25,"Tech")	
		TNT1 A 0 A_JumpIf(user_Type==0,"C_AEoD")*/
		Goto Normal
	Magic:
		TNT1 A 0 A_SpawnItemEx("MonsterPowerMagic",0,0,0,0,0,0,0,33)
		Stop
	Normal:
		TNT1 A 0 A_SpawnItemEx("MonsterPowerNormal",0,0,0,0,0,0,0,33)
		Stop
	Tech:
		TNT1 A 0 A_SpawnItemEx("MonsterPowerTech",0,0,0,0,0,0,0,33)
		Stop
	C_AEoD:
		TNT1 A 0 A_SpawnItemEx("MonsterPowerClassic",0,0,0,0,0,0,0,33)
		Stop
	}
}
Actor MonsterPowerMagic : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
	Gravity 0.15
    Height 20
    Radius 16
    Scale 0.5
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Small Ammo Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright NoDelay 
		Loop
    Pickup:
		TNT1 A 0 A_Jump(178,"Randomized") // 70% of the times it will give ammo at random
		TNT1 A 0 A_JumpIfInventory("BlueMana",25,1)
		Goto Ammo1
		TNT1 A 0 A_JumpIfInventory("GreenMana",20,1)
		Goto Ammo2
		TNT1 A 0 A_JumpIfInventory("RedMana",12,1)
		Goto Ammo3
		TNT1 A 0 A_JumpIfInventory("DarkMana",8,1)
		Goto Ammo4
		TNT1 A 0
		Goto Randomized
	Ammo1:
		TNT1 A 0 A_GiveInventory("BlueManaOrb",12)
		Stop
	Ammo1b:
		TNT1 A 0 A_GiveInventory("BlueManaOrb",6)
		Stop
	Ammo2:
		TNT1 A 0 A_GiveInventory("GreenManaOrb",8)
		Stop
	Ammo2b:
		TNT1 A 0 A_GiveInventory("GreenManaOrb",5)
		Stop
	Ammo3:
		TNT1 A 0 A_GiveInventory("RedManaOrb",6)
		Stop
	Ammo3b:
		TNT1 A 0 A_GiveInventory("RedManaOrb",4)
		Stop
	Ammo4:
		TNT1 A 0 A_GiveInventory("SmallDarkMana",1)
		Stop
	Ammo5: //Not influenced by depletion detection.
		TNT1 A 0 A_GiveInventory("AEGrenadeOrb",3)
		Stop
	Randomized:
		TNT1 A 0 A_Jump(64,"FullyRandomized")
	RandomizedBasicAmmo:
		TNT1 A 0 A_Jump(170,"Ammo1b","Ammo2b")	//will give blue or green most of the times
		TNT1 A 0 A_Jump(255,"Ammo3b")
		Stop
	FullyRandomized:
		TNT1 A 0 A_Jump(4,"Ammo5")
		TNT1 A 0 A_Jump(32,"Ammo4")
		TNT1 A 0 A_Jump(256,"Ammo2b","Ammo1b","Ammo3b")
		Stop
    }	
}

Actor MonsterPowerNormal : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
    Height 20
    Radius 16
    Scale 0.5
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Small Ammo Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright NoDelay 
		Loop
	Pickup:
		TNT1 A 0 A_Jump(178,"Randomized") // 70% of the times it will give ammo at random
		TNT1 A 0 A_JumpIfInventory("AEClip",40,1)
		Goto Ammo1
		TNT1 A 0 A_JumpIfInventory("AEShell",12,1)  //this and the one below were switched to check first for shells
		Goto Ammo3
		TNT1 A 0 A_JumpIfInventory("AENails",25,1)
		Goto Ammo2
		TNT1 A 0 A_JumpIfInventory("AECell",30,1)
		Goto Ammo4
		TNT1 A 0 A_JumpIfInventory("PlasmaRod",30,1)
		Goto Ammo5
		TNT1 A 0 A_JumpIfInventory("MiniRockets",15,1)
		Goto Ammo6
		TNT1 A 0 A_JumpIfInventory("AEGrenade",10,1)
		Goto Ammo7
		TNT1 A 0 A_JumpIfInventory("AERocket",6,1)
		Goto Ammo8
		TNT1 A 0 A_JumpIfInventory("ASTF",20,1)
		Goto Ammo9
		TNT1 A 0
		Goto Randomized
	Ammo1:	TNT1 A 0 A_GiveInventory("AEClipOrb",16)	Stop
	Ammo1b:	TNT1 A 0 A_GiveInventory("AEClipOrb",8)		Stop
	Ammo2:	TNT1 A 0 A_GiveInventory("AENailOrb",14)	Stop
	Ammo2b:	TNT1 A 0 A_GiveInventory("AENailOrb",7)		Stop
	Ammo3:	TNT1 A 0 A_GiveInventory("BDShells",8)	Stop
	Ammo3b:	TNT1 A 0 A_GiveInventory("BDShells",4)	Stop
	Ammo4:	TNT1 A 0 A_GiveInventory("AECellOrb",16)	Stop
	Ammo4b:	TNT1 A 0 A_GiveInventory("AECellOrb",8)		Stop
	Ammo5:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",16)	Stop
	Ammo5b:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",8)	Stop
	Ammo6:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",6)	Stop
	Ammo6b:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",3)	Stop
	Ammo7:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",2)	Stop
	Ammo7b:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",1)	Stop
	Ammo8:	TNT1 A 0 A_GiveInventory("AERocketOrb",1)	Stop
	Ammo9:	TNT1 A 0 A_GiveInventory("ASTFOrb",10)		Stop
	Ammo9b:	TNT1 A 0 A_GiveInventory("ASTFOrb",5)		Stop
	Ammo10:	TNT1 A 0 A_GiveInventory("SmallDarkMana",1)	Stop
	Randomized:
		TNT1 A 0 A_Jump(64,"FullyRandomized")
	RandomizedBasicAmmo:
		TNT1 A 0 A_Jump(170,"Ammo1b","Ammo3b")	//will give bullets or shells most of the times
		TNT1 A 0 A_Jump(255,"Ammo4b")
		Stop
	FullyRandomized:
		TNT1 A 0 A_Jump(4,"Ammo10")
		TNT1 A 0 A_Jump(256,"Ammo1b","Ammo2b","Ammo3b","Ammo4b","Ammo5b","Ammo6b",
		"Ammo7b","Ammo8","Ammo9b")
		Stop
	}
}

Actor MonsterPowerTech : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
    Height 20
    Radius 16
    Scale 0.5
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Small Ammo Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright NoDelay 
		Loop
	Pickup:
		TNT1 A 0 A_Jump(178,"Randomized") // 70% of the times it will give ammo at random
		TNT1 A 0 A_JumpIfInventory("AECell",20,1)
		Goto Ammo4
		TNT1 A 0 A_JumpIfInventory("AENails",35,1)	
		Goto Ammo2
		TNT1 A 0 A_JumpIfInventory("AEClip",30,1)
		Goto Ammo1
		TNT1 A 0 A_JumpIfInventory("AEShell",12,1)
		Goto Ammo3
		TNT1 A 0 A_JumpIfInventory("PlasmaRod",20,1)
		Goto Ammo5
		TNT1 A 0 A_JumpIfInventory("MiniRockets",15,1)
		Goto Ammo6
		TNT1 A 0 A_JumpIfInventory("AEGrenade",10,1)
		Goto Ammo7
		TNT1 A 0 A_JumpIfInventory("AERocket",6,1)
		Goto Ammo8
		TNT1 A 0 A_JumpIfInventory("ASTF",20,1)
		Goto Ammo9
		TNT1 A 0
		Goto Randomized
	Ammo1:	TNT1 A 0 A_GiveInventory("AEClipOrb",16)	Stop
	Ammo1b:	TNT1 A 0 A_GiveInventory("AEClipOrb",8)		Stop
	Ammo2:	TNT1 A 0 A_GiveInventory("AENailOrb",16)	Stop
	Ammo2b:	TNT1 A 0 A_GiveInventory("AENailOrb",8)		Stop
	Ammo3:	TNT1 A 0 A_GiveInventory("BDShells",8)	Stop
	Ammo3b:	TNT1 A 0 A_GiveInventory("BDShells",4)	Stop
	Ammo4:	TNT1 A 0 A_GiveInventory("AECellOrb",16)	Stop
	Ammo4b:	TNT1 A 0 A_GiveInventory("AECellOrb",8)		Stop
	Ammo5:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",16)	Stop
	Ammo5b:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",8)	Stop
	Ammo6:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",6)	Stop
	Ammo6b:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",3)	Stop
	Ammo7:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",2)	Stop
	Ammo7b:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",1)	Stop
	Ammo8:	TNT1 A 0 A_GiveInventory("AERocketOrb",1)	Stop
	Ammo9:	TNT1 A 0 A_GiveInventory("ASTFOrb",10)		Stop
	Ammo9b:	TNT1 A 0 A_GiveInventory("ASTFOrb",5)		Stop
	Randomized:
		TNT1 A 0 A_Jump(64,"FullyRandomized")
	RandomizedBasicAmmo:
		TNT1 A 0 A_Jump(170,"Ammo4b","Ammo3b")	//will give cells or shells most of the times
		TNT1 A 0 A_Jump(255,"Ammo2")
		Stop
	FullyRandomized:
		TNT1 A 0 A_Jump(256,"Ammo7b","Ammo8","Ammo9b","Ammo6b","Ammo2b","Ammo3b",
		"Ammo5b","Ammo1b","Ammo4b")
		Stop
	}
}

Actor MonsterPowerClassic : CustomInventory
{
	+FLOATBOB
	+INVENTORY.FANCYPICKUPSOUND
	+INVENTORY.ALWAYSPICKUP
    Height 20
    Radius 16
    Scale 0.5
	Alpha 1
    RENDERSTYLE ADD
    Inventory.PickupMessage "Small Ammo Power"
    Inventory.PickupSound "misc/powerslaveweaponpower"
	VisibleToPlayerClass AEoDmarine
    States
    {
    Spawn:
		PS02 A -1 Bright NoDelay 
		Loop
	Pickup:
		TNT1 A 0 A_Jump(178,"Randomized") // 70% of the times it will give ammo at random
		TNT1 A 0 A_JumpIfInventory("AEClip",30,1)
		Goto Ammo1
		TNT1 A 0 A_JumpIfInventory("BlueMana",25,1)
		Goto Ammo11
		TNT1 A 0 A_JumpIfInventory("AENails",25,1)
		Goto Ammo2
		TNT1 A 0 A_JumpIfInventory("AEShell",10,1)
		Goto Ammo3
		TNT1 A 0 A_JumpIfInventory("GreenMana",20,1)
		Goto Ammo31
		TNT1 A 0 A_JumpIfInventory("AECell",30,1)
		Goto Ammo4
		TNT1 A 0 A_JumpIfInventory("PlasmaRod",30,1)
		Goto Ammo5
		TNT1 A 0 A_JumpIfInventory("MiniRockets",15,1)
		Goto Ammo6
		TNT1 A 0 A_JumpIfInventory("RedMana",12,1)
		Goto Ammo61
		TNT1 A 0 A_JumpIfInventory("AEGrenade",10,1)
		Goto Ammo7
		TNT1 A 0 A_JumpIfInventory("AERocket",6,1)
		Goto Ammo8
		TNT1 A 0 A_JumpIfInventory("ASTF",20,1)
		Goto Ammo9
		TNT1 A 0 A_JumpIfInventory("DarkMana",8,1)
		Goto Ammo10
		TNT1 A 0
		Goto Randomized
	Ammo1:	TNT1 A 0 A_GiveInventory("AEClipOrb",10)		Stop
	Ammo1b:	TNT1 A 0 A_GiveInventory("AEClipOrb",5)			Stop
	Ammo11:	TNT1 A 0 A_GiveInventory("BlueManaOrb",8)		Stop
	Ammo11b:	TNT1 A 0 A_GiveInventory("BlueManaOrb",4)	Stop
	Ammo2:	TNT1 A 0 A_GiveInventory("AENailOrb",10)		Stop
	Ammo2b:	TNT1 A 0 A_GiveInventory("AENailOrb",5)			Stop
	Ammo3:	TNT1 A 0 A_GiveInventory("AEShellOrb",6)		Stop
	Ammo3b:	TNT1 A 0 A_GiveInventory("AEShellOrb",3)		Stop
	Ammo31:	TNT1 A 0 A_GiveInventory("GreenManaOrb",5)		Stop
	Ammo31b:	TNT1 A 0 A_GiveInventory("GreenManaOrb",3)	Stop
	Ammo4:	TNT1 A 0 A_GiveInventory("AECellOrb",10)		Stop
	Ammo4b:	TNT1 A 0 A_GiveInventory("AECellOrb",5)			Stop
	Ammo5:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",10)		Stop
	Ammo5b:	TNT1 A 0 A_GiveInventory("PlasmaRodOrb",5)		Stop
	Ammo6:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",6)		Stop
	Ammo6b:	TNT1 A 0 A_GiveInventory("MiniRocketOrb",3)		Stop
	Ammo61:	TNT1 A 0 A_GiveInventory("RedManaOrb",5)		Stop
	Ammo61b:	TNT1 A 0 A_GiveInventory("RedManaOrb",5)	Stop
	Ammo7:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",2)		Stop
	Ammo7b:	TNT1 A 0 A_GiveInventory("AEGrenadeOrb",1)		Stop
	Ammo8:	TNT1 A 0 A_GiveInventory("AERocketOrb",1)		Stop
	Ammo9:	TNT1 A 0 A_GiveInventory("ASTFOrb",10)			Stop
	Ammo9b:	TNT1 A 0 A_GiveInventory("ASTFOrb",5)			Stop
	Ammo10:	TNT1 A 0 A_GiveInventory("SmallDarkMana",1)		Stop
	Randomized:
		TNT1 A 0 A_Jump(64,"FullyRandomized")
	RandomizedBasicAmmo:
		TNT1 A 0 A_Jump(170,"Ammo1b","Ammo11b","Ammo3b","Ammo31b","Ammo4b","Ammo5b")	
		TNT1 A 0 A_Jump(170,"Ammo1","Ammo11","Ammo3","Ammo31","Ammo4","Ammo5")	
		Stop
	FullyRandomized:
		TNT1 A 0 A_Jump(256,"Ammo1b","Ammo11b","Ammo2b","Ammo3b","Ammo31b",
		"Ammo4b","Ammo5b","Ammo6b","Ammo61b","Ammo7b","Ammo8","Ammo9b","Ammo10")
		Goto Ammo1b
	}
}










//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
// Health & armor orbs
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------

Actor BigHealthPower : Health
{
    height 20
    radius 16
    RENDERSTYLE ADD
    Alpha 1
//    +FLOORCLIP
    +FLOATBOB
    +INVENTORY.FANCYPICKUPSOUND
	VisibleToPlayerClass AEoDmarine
    Scale 0.7
    Inventory.Amount 15
    Inventory.PickupMessage "Health Increasing Orb."
    Inventory.PickupSound "misc/powerslavehealthpower"
    Health.LowMessage 25, "The Health Increasing Orb saved you from the brink of death!"
    States
    {
    Spawn:
	PS03 A -1 Bright NoDelay 
	Stop
    }	
}

Actor SmallHealthPower : Health
{
    height 20
    radius 16
    RENDERSTYLE ADD
    Alpha 1
//    +FLOORCLIP
    +FLOATBOB
    +INVENTORY.FANCYPICKUPSOUND
	VisibleToPlayerClass AEoDmarine
    Scale 0.5
    Inventory.Amount 5
    Inventory.PickupMessage "Health Increasing Orb."
    Inventory.PickupSound "misc/powerslavehealthpower"	
    States
    {
    Spawn:
	PS03 A -1 Bright NoDelay 
	Stop
    }	
}

ACTOR PSArmorBonus : ArmorBonus
{
    Armor.Saveamount 1
    Armor.Maxsaveamount 500
    States
    {
    Spawn:
	TNT1 A 0
	Stop
    }
}

Actor BigShieldPower : CustomInventory
{
    height 20
    radius 16
    RENDERSTYLE ADD
    Alpha 1
//    +FLOORCLIP
    +FLOATBOB
    +INVENTORY.FANCYPICKUPSOUND
    Translation "84:109=20:45","195:196=184:185","152:154=233:235","3:3=40:40"
    Scale 0.7
    Inventory.PickupMessage "Armor Increasing Orb."
    Inventory.PickupSound "powerslave/armororb"
    States
    {
    Spawn:
	PS02 A -1 Bright 
	Stop
    Pickup:
	PS02 A 0 Bright A_JumpIfInventory("BasicArmor",500,16)
	PS02 A 0 Bright A_GiveInventory("Q2ArmorShard",1)
	PS02 A 0 Bright A_GiveInventory("Q2ArmorShard",1)
	PS02 A 0 Bright A_GiveInventory("ArmorHelm",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	Stop
	TNT1 A 0
	Fail
    }	
}

Actor SmallShieldPower : CustomInventory
{
    height 20
    radius 16
    RENDERSTYLE ADD
    Alpha 1
//    +FLOORCLIP
    +FLOATBOB
    +INVENTORY.FANCYPICKUPSOUND
    Translation "84:109=20:45","195:196=184:185","152:154=233:235","3:3=40:40"
    Scale 0.5
    Inventory.PickupMessage "Armor Increasing Orb."
    Inventory.PickupSound "powerslave/armororb"	
    States
    {
    Spawn:
	PS02 A -1 Bright 
	Stop
    Pickup:
	PS02 A 0 Bright A_JumpIfInventory("BasicArmor",500,15)
	PS02 A 0 Bright A_GiveInventory("ArmorHelm",1)
	PS02 A 0 Bright A_GiveInventory("ArmorHelm",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	PS02 A 0 A_Jump(128,1)
	Stop
	PS02 A 0 Bright A_GiveInventory("PSArmorBonus",1)
	Stop
	TNT1 A 0
	Fail
    }	
}


Actor FullHealthPower : Health
{
    height 20
    radius 16
//    +FLOORCLIP
    +FLOATBOB
    Scale 0.8
    +INVENTORY.FANCYPICKUPSOUND
    Inventory.Amount 500
    Inventory.PickupMessage "Full Health!"
    Inventory.PickupSound "misc/powerslavefullhealthpower"
    states
    {
    Spawn:
	PS06 ABCD 3 Bright
	loop
    }
}
  
Actor LifeBloodRecepticle : Health
{
    height 20
    radius 16
//    +FLOORCLIP
	VisibleToPlayerClass AEoDmarine
    +FLOATBOB
    Scale 0.8
    Translation "112:127=176:191","9:9=191:191"
    Inventory.Amount 40
    Inventory.PickupMessage "You drank some Lifeblood."
    Health.LowMessage 25, "You drank Lifeblood that you really needed!"
    Inventory.PickupSound "misc/powerslave/recepticle"
    States
    {
    Spawn:
	PS01 ABCDEF 6
	loop
    }	
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
// Special Ammo orbs
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
Actor FullWeaponPower : LargeWeaponPowerOrbSpawn
{
    //scale 0.8
    RENDERSTYLE ADD
    Radius 3
    Height 6
    states
    {
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItemEx("FullWeaponPowerAmmoGive",0,0,0,0,0,0,0,33)
	stop
    }
}

Actor FullWeaponPowerAmmoGive : CustomInventory
{
    height 20
    radius 16
//    +FLOORCLIP
    +FLOATBOB
    Scale 0.8
    RENDERSTYLE NORMAL
    Alpha 1
    +INVENTORY.FANCYPICKUPSOUND
    Inventory.PickupMessage "Full Ammo Power!"
    Inventory.PickupSound "misc/powerslavefullweaponpower"
    States
    {
    Spawn:
	PS05 ABCD 3 Bright
	loop
    Pickup:
	PS02 A 0 A_GiveInventory("AEClip",500)
	PS02 A 0 A_GiveInventory("AEShell",120)
	PS02 A 0 A_GiveInventory("AERocket",100)
	PS02 A 0 A_GiveInventory("AECell",500)
	PS02 A 0 A_GiveInventory("BlueMana",400)
	PS02 A 0 A_GiveInventory("RedMana",200)
	PS02 A 0 A_GiveInventory("GreenMana",300)
	PS02 A 0 A_GiveInventory("DarkMana",100)
	PS02 A 0 A_GiveInventory("MiniRockets",200)
	PS02 A 0 A_GiveInventory("PlasmaRod",500)
	PS02 A 0 A_GiveInventory("BunnyAmmo",6)
	PS02 A 0 A_GiveInventory("ASTF",200)
	PS02 A 0 A_GiveInventory("AEGrenade",100)
	PS02 A 0 A_GiveInventory("AENails",300)
	PS02 A 0 A_GiveInventory("Mojo",100)
    stop
    }	
}


//--------------------------------------------------------------------
Actor HalfWeaponPower : FullWeaponPower
{
    states
    {
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItemEx("HalfWeaponPowerAmmoGive",0,0,0,0,0,0,0,33)
	stop
    }
}
Actor HalfWeaponPowerAmmoGive : CustomInventory
{
    height 20
    radius 16
//    +FLOORCLIP
    +FLOATBOB
    Scale 0.8
    RENDERSTYLE NORMAL
    Alpha 1
    +INVENTORY.FANCYPICKUPSOUND
    Inventory.PickupMessage "Half Ammo Power!"
    Inventory.PickupSound "misc/powerslavefullweaponpower"
    States
    {
    Spawn:
	PS05 ABCD 3 Bright
	loop
    Pickup:
	PS02 A 0 A_GiveInventory("AEClip",250)
	PS02 A 0 A_GiveInventory("AEShell",60)
	PS02 A 0 A_GiveInventory("AERocket",50)
	PS02 A 0 A_GiveInventory("AECell",250)
	PS02 A 0 A_GiveInventory("BlueMana",200)
	PS02 A 0 A_GiveInventory("GreenMana",150)
	PS02 A 0 A_GiveInventory("RedMana",100)
	PS02 A 0 A_GiveInventory("DarkMana",30)
	PS02 A 0 A_GiveInventory("MiniRockets",100)
	PS02 A 0 A_GiveInventory("PlasmaRod",250)
	PS02 A 0 A_GiveInventory("BunnyAmmo",3)
	PS02 A 0 A_GiveInventory("ASTF",100)
	PS02 A 0 A_GiveInventory("AEGrenade",50)
	PS02 A 0 A_GiveInventory("AENails",150)
	PS02 A 0 A_GiveInventory("Mojo",100)
    stop
    }	
}

//--------------------------------------------------------------------
Actor MediumWeaponPower : FullWeaponPower
{

    states
    {
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItemEx("MediumWeaponPowerAmmoGive",0,0,0,0,0,0,0,33)
	stop
    }
}
Actor MediumWeaponPowerAmmoGive : CustomInventory
{
    height 20
    radius 16
//    +FLOORCLIP
    +FLOATBOB
    Scale 0.8
    RENDERSTYLE NORMAL
    Alpha 1
    +INVENTORY.FANCYPICKUPSOUND
    Inventory.PickupMessage "Very big Ammo Power!"
    Inventory.PickupSound "misc/powerslavefullweaponpower"
    States
    {
    Spawn:
	PS05 ABCD 3 Bright
	loop
    Pickup:
	PS02 A 0 A_GiveInventory("AEClip",50)
	PS02 A 0 A_GiveInventory("AEShell",20)
	PS02 A 0 A_GiveInventory("AERocket",10)
	PS02 A 0 A_GiveInventory("AECell",50)
	PS02 A 0 A_GiveInventory("BlueMana",35)
	PS02 A 0 A_GiveInventory("GreenMana",20)
	PS02 A 0 A_GiveInventory("RedMana",15)
	PS02 A 0 A_GiveInventory("DarkMana",5)
	PS02 A 0 A_GiveInventory("MiniRockets",25)
	PS02 A 0 A_GiveInventory("PlasmaRod",50)
	PS02 A 0 A_GiveInventory("BunnyAmmo",1)
	PS02 A 0 A_GiveInventory("ASTF",20)
	PS02 A 0 A_GiveInventory("AEGrenade",8)
	PS02 A 0 A_GiveInventory("AENails",50)
    stop
    }	
}

//--------------------------------------------------------------------
Actor RandomWeaponPower : FullWeaponPower
{
    states
    {
	Spawn:
	TNT1 A 0 
	TNT1 AAAAAAAAAAAA 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 A 0 A_PlaySound("monster/bastet/warpin")
	PS04 AAABBBCCCDDD 1 Bright A_SpawnItemEx("PwrSlvBlueOrbPart",0,0,25,frandom(7.0,-7.0),frandom(7.0,-7.0),frandom(7.0,-7.0),0,33)
	PS04 EFGH 3 
	PS04 A 0 A_SpawnItemEx("RandomWeaponPowerAmmoGive",0,0,0,0,0,0,0,33)
	stop
    }
}
Actor RandomWeaponPowerAmmoGive : CustomInventory
{
    height 20
    radius 16
//    +FLOORCLIP
    +FLOATBOB
    Scale 0.8
    RENDERSTYLE NORMAL
    Alpha 1
    +INVENTORY.FANCYPICKUPSOUND
    Inventory.PickupMessage "Random Ammo Power!"
    Inventory.PickupSound "misc/powerslavefullweaponpower"
    States
    {
    Spawn:
	PS05 ABCD 3 Bright
	loop
    Pickup:
	PS02 A 0 A_GiveInventory("AEClip",random(0,50))
	PS02 A 0 A_GiveInventory("AEShell",random(0,20))
	PS02 A 0 A_GiveInventory("AERocket",random(0,10))
	PS02 A 0 A_GiveInventory("AECell",random(0,50))
	PS02 A 0 A_GiveInventory("BlueMana",random(0,35))
	PS02 A 0 A_GiveInventory("GreenMana",random(0,20))
	PS02 A 0 A_GiveInventory("RedMana",random(0,15))
	PS02 A 0 A_GiveInventory("DarkMana",random(0,3))
	PS02 A 0 A_GiveInventory("MiniRockets",random(0,25))
	PS02 A 0 A_GiveInventory("PlasmaRod",random(0,50))
	PS02 A 0 A_GiveInventory("BunnyAmmo",random(0,1))
	PS02 A 0 A_GiveInventory("ASTF",random(0,20))
	PS02 A 0 A_GiveInventory("AEGrenade",random(0,8))
	PS02 A 0 A_GiveInventory("AENails",random(0,50))
    stop
    }	
}

Actor DeadLightPowerup : CustomInventory
{
	Inventory.MaxAmount 3
	Inventory.Amount 1
	Inventory.InterHubAmount 3
	Inventory.PickupSound "HTC2/Deadlight/Pickup"
	Inventory.UseSound "HTC2/Deadlight/Activate"
	Inventory.PickupMessage "You won the Dead Lights! Drive your enemies through multi-colored madness!"
	+INVENTORY.INVBAR
	+VISIBILITYPULSE
	Inventory.Icon "X091A0"
	//+FLOATBOB
	Tag "Invulnerable when hit, floating deadlights hurt nearby enemies, reflecting attacks"
	States
	{
	Spawn:
		X091 A 2 Light("DeadWhite") 
        X091 B 2 Light("DeadRed") 
        X091 C 2 Light("DeadGreen")
        X091 D 2 Light("DeadBlue")
		Loop
	Use:
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"Deny")
		TNT1 A 0 A_JumpIfInventory("PowerCFDLProtector",1,"Deny")
		TNT1 A 0 A_GiveInventory("CFDLPowerEffect",1)
		TNT1 A 0 A_SetReflective
		TNT1 A 0 A_SpawnItemEx("CFDLController",0,0,0,0,0,0,0,32|SXF_SETMASTER)
		TNT1 A 0 A_SpawnItemEx("CFDLMonitor",0,0,0,0,0,0,0,32|SXF_SETMASTER)
		TNT1 A 0 A_PlaySound("powerups/pentagramuse",5,1,0,ATTN_NONE)
		TNT1 A 0 A_PlaySound("powerups/pentagramuse",6,1,0,ATTN_NONE)
		TNT1 A 0 A_SpawnItemEx("PlayerDeadLightWarp",0,0,30,12,0,0,0,32|SXF_SETMASTER)
		TNT1 A 0 A_SpawnItemEx("PlayerDeadLightWarp",0,0,30,12,0,0,90,32|SXF_SETMASTER)
		TNT1 A 0 A_SpawnItemEx("PlayerDeadLightWarp",0,0,30,12,0,0,180,32|SXF_SETMASTER)
		TNT1 A 0 A_SpawnItemEx("PlayerDeadLightWarp",0,0,30,12,0,0,270,32|SXF_SETMASTER)
		TNT1 A 0 A_SpawnItemEx("PlayerDeadLightWarp2",0,0,30,12,0,0,0,32|SXF_SETMASTER)
		TNT1 A 0 A_SpawnItemEx("PlayerDeadLightWarp2",0,0,30,12,0,0,90,32|SXF_SETMASTER)
		TNT1 A 0 A_SpawnItemEx("PlayerDeadLightWarp2",0,0,30,12,0,0,180,32|SXF_SETMASTER)
		TNT1 A 0 A_SpawnItemEx("PlayerDeadLightWarp2",0,0,30,12,0,0,270,32|SXF_SETMASTER)
		Stop
	Deny:
		TNT1 A 0
		Fail
	}
}

Actor PowerCFDLProtector : PowerProtection
{
	DamageFactor "Normal", 0.6
	Inventory.Icon "X091A0"
}

Actor PowerFake : PowerProtection
{
	DamageFactor "Normal", 0.0
}

Actor CFDLPowerEffect : PowerupGiver
{
	Powerup.Type "CFDLProtector"
	Powerup.Duration -120
	Inventory.MaxAmount 0
	Inventory.InterHubAmount 0
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
}

Actor DLFlasher1 : PowerupGiver
{
	Powerup.Type "Fake" //Doesn't matter, invulnerable when this happens.
	Inventory.MaxAmount 0
	Powerup.Duration -15
	Powerup.Colormap 0.0, 0.0, 0.0, 1.0, 1.0, 1.0
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
}

Actor CFDLMonitor
{
	Projectile
	+NOINTERACTION
	+SEEKERMISSILE
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0
	Looping:
		TNT1 A 1
		TNT1 A 0 A_CheckFlag("JUSTHIT","Wipe",AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("PowerCFDLProtector",1,"Looping",AAPTR_MASTER)
		Stop
	Wipe:
		TNT1 A 0 A_GiveInventory("CFDLInvulEffect",1,AAPTR_MASTER)
		TNT1 A 0 A_GiveInventory("DLFlasher1",1,AAPTR_MASTER)
		TNT1 A 5
		//TNT1 A 0 A_TakeInventory("PowerFake",1000,0,AAPTR_PLAYER1)
		//TNT1 A 0 A_GiveInventory("DLFlasher2",1,AAPTR_PLAYER1)
		TNT1 A 5
		//TNT1 A 0 A_TakeInventory("PowerFake",1000,0,AAPTR_PLAYER1)
		//TNT1 A 0 A_GiveInventory("DLFlasher3",1,AAPTR_PLAYER1)
		TNT1 A 5
		//TNT1 A 0 A_TakeInventory("PowerFake",1000,0,AAPTR_PLAYER1)
		//TNT1 A 0 A_GiveInventory("DLFlasher4",1,AAPTR_PLAYER1)
		TNT1 A 5
		//TNT1 A 0 A_TakeInventory("PowerFake",1000,0,AAPTR_PLAYER1)
		//TNT1 A 0 A_GiveInventory("DLFlasher5",1,AAPTR_PLAYER1)
		TNT1 A 5
		//TNT1 A 0 A_TakeInventory("PowerFake",1000,0,AAPTR_PLAYER1)
		//TNT1 A 0 A_GiveInventory("DLFlasher6",1,AAPTR_PLAYER1)
		TNT1 A 5
		//TNT1 A 0 A_TakeInventory("PowerFake",1000,0,AAPTR_PLAYER1)
		//TNT1 A 0 A_GiveInventory("DLFlasher7",1,AAPTR_PLAYER1)
		TNT1 A 5
		//TNT1 A 0 A_TakeInventory("PowerFake",1000,0,AAPTR_PLAYER1)
		//TNT1 A 0 A_GiveInventory("DLFlasher8",1,AAPTR_PLAYER1)
		TNT1 A 5
		//TNT1 A 0 A_TakeInventory("PowerFake",1000,0,AAPTR_PLAYER1)
		//TNT1 A 0 A_GiveInventory("DLFlasher9",1,AAPTR_PLAYER1)
		TNT1 A 5
		TNT1 A 0 A_TakeInventory("PowerFake",10000,0,AAPTR_MASTER)
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End",AAPTR_MASTER)
		TNT1 A 0 A_GiveInventory("CFDLDeInvul",1,AAPTR_MASTER)
		Goto Looping
	End:
		TNT1 A 0
		Stop
	}
}

Actor CFDLInvulEffect : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
		TNT1 A 0 A_ChangeFlag("JUSTHIT",0)
		TNT1 A 0 A_SetInvulnerable
		//TNT1 A 0 A_ChangeFlag("NOPAIN",1)
		TNT1 A 0 A_ChangeFlag("NODAMAGE",1)
		Stop
	}
}

Actor CFDLDeInvul : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
		TNT1 A 0 A_ChangeFlag("JUSTHIT",0)
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"End")
		TNT1 A 0 A_JumpIfInventory("Invulnerability",1,3)
		TNT1 A 0 A_JumpIfInventory("PowerInvulBase",1,2)
		TNT1 A 0 A_UnSetInvulnerable
		TNT1 A 0 A_ChangeFlag("NODAMAGE",0)
		//TNT1 A 0 A_ChangeFlag("NOPAIN",0)
		Stop
	End:
		TNT1 A 0
		Stop
	}
}

Actor CFDLController
{
	var int user_time;
	Projectile
	+NOINTERACTION
	+SEEKERMISSILE
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0
	Looping:
		TNT1 A 35
		TNT1 A 0 A_JumpIfInventory("PowerCFDLProtector",1,"Looping",AAPTR_MASTER)
	End:
		TNT1 A 0 A_GiveInventory("CFDLDeInvul",1)
		TNT1 A 0 A_GiveInventory("CFDLReverter",1,AAPTR_MASTER)
		TNT1 A 1 A_TakeInventory("DeadlightToken",1000,0,AAPTR_MASTER)
		Stop
	}
}

Actor CFDLReverter : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		
		TNT1 A 0 A_UnSetReflective
		TNT1 A 0 A_KillChildren("Normal",KILS_KILLMISSILES|KILS_NOMONSTERS,"None","PlayerDeadLight")
		TNT1 A 0 A_JumpIfInventory("Invulnerability",1,"Skip")
		TNT1 A 0 A_JumpIfInventory("PowerInvulBase",1,"Skip")
		TNT1 A 0 A_UnSetInvulnerable
		Stop
	Skip:
		TNT1 A 0
		Stop
	}
}

Actor DeadlightToken : Inventory
{	
	Inventory.MaxAmount 1
	Inventory.InterHubAmount 0 
}

Actor PlayerDeadLightWarp
{
	var int user_count[2];
	var int user_angle[3];
	//	[0] = Original angle
	//	[1] = Positive addition
	//	[2] = Negative addition
	BounceFactor 1
	WallBounceFactor 1
	Height 16
	Projectile
	+SEEKERMISSILE
	+FORCERADIUSDMG
	+STRIFEDAMAGE
	+NOINTERACTION
	+EXTREMEDEATH
	+FOILINVUL
	+NODAMAGETHRUST
	Alpha 0.3
	Scale 0.5
	Speed 12
	Damage 1
	Species "PlayerDeadLight"
	RenderStyle Translucent
	States
	{
	Spawn:
		X091 A 0
		//TNT1 A 0 A_RearrangePointers(AAPTR_PLAYER1,AAPTR_DEFAULT,AAPTR_DEFAULT,4)
		//TNT1 A 0 A_GiveInventory("DeadLightCount",1,AAPTR_TARGET)
		X091 A 0 A_SetUserArray("user_angle",0,angle)
		X091 A 0 A_SetUserArray("user_angle",1,user_angle[0]+3)
		X091 A 0 A_SetUserArray("user_angle",2,user_angle[0]-3)
	PreMove:
		X091 A 1 Light("DeadWhite") A_Explode(random(6,12),32,0,0,32)
        X091 B 1 Light("DeadRed") A_Explode(random(6,12),32,0,0,32)
        X091 C 1 Light("DeadGreen") A_Explode(random(6,12),32,0,0,32)
        X091 D 1 Light("DeadBlue") A_Explode(random(6,12),32,0,0,32)
		X091 D 0 A_SetUserArray("user_count",0,user_count[0]+1)
		X091 D 0 A_JumpIf(user_count[0]>=2,"Warping")
		Loop
	Warping:
		/*
		X091 A 1 Light("DeadWhite") A_Weave(0,1,0,10)	X091 A 0 A_SetAngle(user_angle[1])		X091 A 0 A_Warp(AAPTR_MASTER,92,0,32,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 A 0 A_Explode(random(6,12),32,0,0,32)
		X091 B 1 Light("DeadRed") 	A_Weave(0,1,0,10)	X091 B 0 A_SetAngle(user_angle[1]+3)	X091 B 0 A_Warp(AAPTR_MASTER,92,0,32,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 B 0 A_Explode(random(6,12),32,0,0,32)
		X091 C 1 Light("DeadGreen") A_Weave(0,1,0,10)	X091 C 0 A_SetAngle(user_angle[1]+6)	X091 C 0 A_Warp(AAPTR_MASTER,92,0,32,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 C 0 A_Explode(random(6,12),32,0,0,32)
		X091 D 1 Light("DeadBlue") 	A_Weave(0,1,0,10)	X091 D 0 A_SetAngle(user_angle[1]+9)	X091 D 0 A_Warp(AAPTR_MASTER,92,0,32,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 D 0 A_Explode(random(6,12),32,0,0,32)
		X091 D 0 A_SetUserArray("user_angle",1,user_angle[1]+12)
		Loop*/
		X091 A 1 Light("DeadWhite") A_Weave(0,1,0,10)	X091 A 0 A_Warp(AAPTR_MASTER,92,0,32,3,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 A 0 A_Explode(random(6,12),32,0,0,32)
		X091 B 1 Light("DeadRed") 	A_Weave(0,1,0,10)	X091 B 0 A_Warp(AAPTR_MASTER,92,0,32,3,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 B 0 A_Explode(random(6,12),32,0,0,32)
		X091 C 1 Light("DeadGreen") A_Weave(0,1,0,10)	X091 C 0 A_Warp(AAPTR_MASTER,92,0,32,3,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 C 0 A_Explode(random(6,12),32,0,0,32)
		X091 D 1 Light("DeadBlue") 	A_Weave(0,1,0,10)	X091 D 0 A_Warp(AAPTR_MASTER,92,0,32,3,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 D 0 A_Explode(random(6,12),32,0,0,32)
		X091 D 0 A_SetUserArray("user_angle",1,user_angle[1]+12)
		Loop
	Death:
		X091 A 0 A_ChangeFlag("NOINTERACTION",1)
		X091 A 0 A_Stop
        X091 E 4 Bright 
        X091 EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0 A_CustomMissile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180))
        X091 F 4 Bright A_Explode(96,128,0)
        X091 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF 0 A_CustomMissile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180))
        X091 GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG  0 A_CustomMissile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180))
        X091 GHI 4 Bright
		X087 JKL 4 Bright
        Stop
	Ender:
		TNT1 A 0
		Stop
	}
}

Actor PlayerDeadLightWarp2
{
	var int user_count[2];
	var int user_angle[3];
	//	[0] = Original angle
	//	[1] = Positive addition
	//	[2] = Negative addition
	BounceFactor 1
	WallBounceFactor 1
	Height 16
	Projectile
	+SEEKERMISSILE
	+FORCERADIUSDMG
	+STRIFEDAMAGE
	+NOINTERACTION
	+EXTREMEDEATH
	+FOILINVUL
	+NODAMAGETHRUST
	Alpha 0.3
	Speed 12
	Damage 1
	Scale 0.5
	Species "PlayerDeadLight"
	RenderStyle Translucent
	States
	{
	Spawn:
		X091 A 0
		//TNT1 A 0 A_RearrangePointers(AAPTR_PLAYER1,AAPTR_DEFAULT,AAPTR_DEFAULT,4)
		//TNT1 A 0 A_GiveInventory("DeadLightCount",1,AAPTR_TARGET)
		X091 A 0 A_SetUserArray("user_angle",0,angle)
		X091 A 0 A_SetUserArray("user_angle",1,user_angle[0]-3)
		X091 A 0 A_SetUserArray("user_angle",2,user_angle[0]+3)
	PreMove:
		X091 A 1 Light("DeadWhite") A_Explode(random(6,12),32,0,0,32)
        X091 B 1 Light("DeadRed") A_Explode(random(6,12),32,0,0,32)
        X091 C 1 Light("DeadGreen") A_Explode(random(6,12),32,0,0,32)
        X091 D 1 Light("DeadBlue") A_Explode(random(6,12),32,0,0,32)
		X091 D 0 A_SetUserArray("user_count",0,user_count[0]+1)
		X091 D 0 A_JumpIf(user_count[0]>=2,"Warping")
		Loop
	Warping:
		X091 A 1 Light("DeadWhite") A_Weave(0,1,0,10)	X091 A 0 A_Warp(AAPTR_MASTER,92,0,32,-3,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 A 0 A_Explode(random(6,12),32,0,0,32)
		X091 B 1 Light("DeadRed") 	A_Weave(0,1,0,10)	X091 B 0 A_Warp(AAPTR_MASTER,92,0,32,-3,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 A 0 A_Explode(random(6,12),32,0,0,32)
		X091 C 1 Light("DeadGreen") A_Weave(0,1,0,10)	X091 C 0 A_Warp(AAPTR_MASTER,92,0,32,-3,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 A 0 A_Explode(random(6,12),32,0,0,32)
		X091 D 1 Light("DeadBlue") 	A_Weave(0,1,0,10)	X091 D 0 A_Warp(AAPTR_MASTER,92,0,32,-3,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_USECALLERANGLE)
		X091 A 0 A_Explode(random(6,12),32,0,0,32)
		//TNT1 A 0 A_JumpIfInventory("DeadlightToken",1,"Warping",AAPTR_MASTER)
		Loop
	Death:
		X091 A 0 A_ChangeFlag("NOINTERACTION",1)
		X091 A 0 A_Stop
        X091 E 4 Bright 
        X091 EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0 A_CustomMissile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180))
        X091 F 4 Bright A_Explode(96,128,0)
        X091 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF 0 A_CustomMissile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180))
        X091 GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG  0 A_CustomMissile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180))
        X091 GHI 4 Bright
		X087 JKL 4 Bright
        Stop
	Ender:
		TNT1 A 0
		Stop
	}
}

//==============================================================================
//==============================================================================
//								The Demon Morph
//==============================================================================
//==============================================================================

Actor DMSoulFragment : CustomInventory
{
	var int user_count;
	var int user_scale;
	var int user_gs;
	var int user_tid;
	+INVENTORY.ALWAYSPICKUP
	//+FLOATBOB
	+NOGRAVITY
	+BRIGHT
	+NOTELESTOMP
	-TELESTOMP
	-COUNTITEM
	Scale 0.0
	RenderStyle Add
	Inventory.PickupSound "reilsss/health/soul"
	Inventory.MaxAmount 0
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetUserVar(user_tid,tid)
		TNT1 A 10 Thing_ChangeTID(0,0)
		X099 A 0 A_SpawnItemEx("DMSoulTarget",0,0,0,0,0,0,0,32|SXF_SETMASTER|SXF_ORIGINATOR|SXF_TRANSFERTRANSLATION,0,tid)
		"####" "#" 0 A_JumpIf(z-floorz <= 10.0,"MoveUp")
		"####" "#" 0 A_CheckFloor("MoveUp")
		Goto ScalingUp
	MoveUp:
		"####" "#" 0 A_Warp(AAPTR_DEFAULT,0,0,10,0,WARPF_NOCHECKPOSITION|WARPF_TOFLOOR)
	ScalingUp:
		"####" "#" 1 A_SetScale((cos(user_scale-90)+1)*0.05)
		"####" "#" 0 A_SetUserVar("user_scale",user_scale+5)
		"####" "#" 0 A_JumpIf(user_scale >= 180, "Scale2")
		"####" "#" 0 A_JumpIf((user_count >= 35*15) && (ScaleX <= 0.0),"End")
		"####" "#" 0 A_JumpIf((user_count >= 35*15),2)
		"####" "#" 0 A_SetUserVar("user_count",user_count+1)
		"####" "#" 0 A_JumpIf(user_scale >= 359,1)
		Loop
	Scale2:
		"####" "#" 1 A_SetScale(((cos(user_scale-90)+1)*0.01)+0.05)
		"####" "#" 0 A_SetUserVar("user_scale",user_scale+5)
		"####" "#" 0 A_JumpIf((user_count >= (35*15)) && (ScaleX <= 0.0),"End")
		"####" "#" 0 A_JumpIf((user_count >= (35*15)),"L2")
		"####" "#" 0 A_SetUserVar("user_count",user_count+1)
		"####" "#" 0 A_JumpIf(user_scale >= 359,1)
		Loop
		"####" "#" 0 A_SetUserVar("user_scale",user_scale-359)
		"####" "#" 0 A_JumpIf(user_count < (35*15),"Scale2")
	L2:
		"####" "#" 1 A_JumpIf(ScaleX <= 0.0,"End")
		"####" "#" 0 A_SetScale(ScaleX-0.005)
		Loop
	End:
		"####" "#" 1 A_RemoveChildren(1,RMVF_EVERYTHING)
		Stop
	/*Pickup:
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING,"DMSoulTarget")
		TNT1 A 0 A_GiveInventory("DMSoulActivator",1)
		Stop*/
	//Use:
	Pickup:
		TNT1 A 0 A_RadiusGive("DMSoulCheckMaster",128,RGF_MONSTERS,1)
		TNT1 A 0 A_GiveInventory("DMSoulCount",random(1,6))
		TNT1 A 0 ACS_NamedExecuteAlways("AESoulCount",0,0,0,0)
		TNT1 A 0 A_JumpIfInventory("DMSoulCount",666,"Check")
		TNT1 A 0 A_JumpIf(user_tid == 1,2)
		TNT1 A 0 A_GiveInventory("DMSoulHealth",1)
		Stop
	Check:
		TNT1 A 0 A_TakeInventory("DMSoulCount",666,0)
		TNT1 A 0 A_SetBlend("Grey",1,17)
		TNT1 A 0 A_SpawnItemEx("DemonMorphStartSound",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
		//TNT1 A 0 A_PlaySound("DemonMorph/Grow",5|CHAN_NOPAUSE,1,0,ATTN_NONE)
		//TNT1 A 0 A_PlaySound("DemonMorph/Start",6|CHAN_NOPAUSE,1,0,ATTN_NONE)
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"G2")
	G1:
		TNT1 A 0 A_GiveInventory("DemonMorphPowerup",1)
		Stop
	G2:
		TNT1 A 0 A_GiveInventory("DemonMorphGiver",1)
		TNT1 A 0 A_GiveInventory("DemonMorphFullBright",1)
		Stop
	}
}

Actor DemonMorphStartSound
{
	+NOINTERACTION
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_PlaySound("DemonMorph/Grow",5|CHAN_NOPAUSE,1,0,ATTN_NONE)
		TNT1 A 10 A_PlaySound("DemonMorph/Start",6|CHAN_NOPAUSE,1,0,ATTN_NONE)
		Stop
	}
}
Actor DMSoulCheckMaster : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	States
	{
	Pickup:
		TNT1 A 0 A_JumpIf((CheckClass("DMSoulTarget",AAPTR_DEFAULT,0) && 
							(IsPointerEqual(AAPTR_MASTER,AAPTR_NULL) || 
							CheckClass("PlayerPawn",AAPTR_MASTER,1))),"Removal")
		TNT1 A 0 A_TakeInventory("DMSoulCheckMaster",1)
		Stop
	Removal:
		TNT1 A 0 A_Remove(AAPTR_DEFAULT,RMVF_EVERYTHING,"DMSoulTarget")
		Stop
	}
}

Actor SoulSeekOn : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	-COUNTITEM
	States
	{
	Pickup:
		TNT1 A 0 A_JumpIf(CheckClass("DMSoulTarget",AAPTR_DEFAULT,0),"Trigger")
		Stop
	Trigger:
		TNT1 A 0 A_SetShootable
		TNT1 A 0 A_ChangeFlag("CANTSEEK",0)
		Stop
	}
}

Actor SoulSeekOff : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 A_JumpIf(CheckClass("DMSoulTarget",AAPTR_DEFAULT,0),"Trigger")
		Stop
	Trigger:
		TNT1 A 0 A_UnSetShootable
		TNT1 A 0 A_ChangeFlag("CANTSEEK",1)
		Stop
	}
}

Actor DMSoulTarget
{
	var int user_count;
	Monster
	+NEVERTARGET
	-SOLID
	+NOCLIP
	+NOBLOOD
	+NONSHOOTABLE
	-SHOOTABLE
	+NODAMAGE
	-COUNTKILL
	+NOTONAUTOMAP
	+DONTTHRUST
	+CANTSEEK
	+NOGRAVITY
	+NOTARGETSWITCH
	PainChance "Normal", 0
	PainChance "SoulReaperPull", 256
	DamageFactor "Normal", 0
	DamageFactor "SoulReaperPull", 1
	Radius 4
	Height 4
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_JumpIf(z >= floorz,2)
		TNT1 A 0 A_Warp(AAPTR_DEFAULT,0,0,0,0,WARPF_TOFLOOR|WARPF_NOCHECKPOSITION)
		TNT1 A 0 A_Stop
	W1:
		TNT1 A 35 A_SetUserVar(user_count,user_count+1)
		TNT1 A 0 A_JumpIf(user_count > 16,"End")
		TNT1 A 0 A_JumpIf(IsPointerEqual(AAPTR_MASTER,AAPTR_NULL),"End")
		Loop
	End:
		TNT1 A 0
		Stop
	Pain.SoulReaperPull:
	Death.SoulReaperPull:
		TNT1 A 0 A_ChangeFlag("NOPAIN",1)
		TNT1 A 0 A_UnSetShootable
		TNT1 A 0 A_FaceTarget
		TNT1 A 0 A_SpawnItemEx("DMSoulMissile",0,0,0,0,0,0,0,32|SXF_TRANSFERTRANSLATION|SXF_TRANSFERPOINTERS,0,tid)
		TNT1 A 1 A_RemoveMaster(RMVF_EVERYTHING,"DMSoulFragment")
		Stop
	Death:
		TNT1 A 0
		Stop
	}
}

Actor DMSoulMissile
{
	var int user_x[2];
	var int user_y[2];
	Projectile
	+SEEKERMISSILE
	+DONTREFLECT
	+THRUACTORS
	+BRIGHT
	RenderStyle Add
	Scale 0.05
	Speed 10
	States
	{
	Spawn:
	//Unless you know what you're doing...
	//DO NOT FUCK WITH THIS.
	//Sincerely, Management.
		X099 A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TRACER,1),"SeekOnce") 
		X099 A 0 A_RearrangePointers(AAPTR_TRACER,AAPTR_DEFAULT,AAPTR_TARGET,4)
		Goto SeekOnce
	SeekOnce:
		X099 AAAA 0 A_SeekerMissile(90,90,SMF_PRECISE)
		Goto Looping
	Looping:
		X099 A 0 A_FaceTracer(0,0,0,0,FAF_TOP)
		X099 A 1 A_ChangeVelocity(cos(-pitch)*20,0,sin(pitch)*20,CVF_RELATIVE|CVF_REPLACE)
		X099 A 0 A_JumpIfTracerCloser(32,"End")
		Loop
	Death:
	End:
		X099 A 0 A_JumpIf(CheckClass("PlayerPawn",AAPTR_TRACER,1),1)
		Stop
		TNT1 A 0 A_Warp(AAPTR_TRACER,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_COPYINTERPOLATION)
		TNT1 A 0 A_SetUserArray(user_x,0,x)
		TNT1 A 1 A_SetUserArray(user_y,0,y)
		TNT1 A 0 A_Warp(AAPTR_TRACER,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_COPYINTERPOLATION)
		TNT1 A 0 A_SetUserArray(user_x,1,x)
		TNT1 A 0 A_SetUserArray(user_y,1,y)
		TNT1 A 0 A_JumpIf((user_x[0] != user_x[1]) || (user_y[0] != user_y[1]),"E2")
	E1:
		TNT1 A 0 A_GiveInventory("DMSoulFragment",1,AAPTR_TRACER)
		Stop
	E2:
		TNT1 A 0 A_SpawnItemEx("DMSoulFragment",0,0,8,0,0,1,0,32,0,tid)
		Stop
	}
}


Actor DMSoulCount : Inventory
{	
	+INVENTORY.IGNORESKILL
	Inventory.Amount 1
	Inventory.MaxAmount 2000
	Inventory.InterHubAmount 2000
}

Actor DMSoulHealth : HealthBonus
{
	+INVENTORY.IGNORESKILL
	Inventory.MaxAmount 666
	Inventory.Amount 1
}

Actor DMBlackParticle
{
	var int user_count;
	var int user_x;
	var int user_y;
	var int user_z;
	RenderStyle Translucent
	+NOINTERACTION
	+NOTIMEFREEZE
	Scale 0.2
	States
	{
	Spawn:
		X00A A 0 NoDelay A_SetScale(frandom(0.18,0.22))
	Tick:
		X00A A 0 A_ChangeVelocity(velx*(0.90),vely*(0.90),velz+(0.01),CVF_REPLACE)
		X00A A 1 A_SetUserVar("user_count",user_count+1)
		X00A A 0 A_JumpIf(user_count>=4,1)
		Loop
		X00A A 0 A_SetUserVar("user_count",0)
		X00A A 0 A_SetScale(ScaleX-0.01)
		X00A A 0 A_JumpIf(ScaleX > 0.0,"Tick")
		Stop
	}
}

Actor DemonMorphPowerup : CustomInventory
{
	var int user_tick;
	var int user_limit;
	//+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.BIGPOWERUP
	+FLOATBOB
	+INVENTORY.QUIET
	+INVENTORY.NOSCREENFLASH
	+INVENTORY.IGNORESKILL
	+NOTIMEFREEZE
	+DONTGIB
	+NOTELESTOMP
	RenderStyle Stencil
	StencilColor Black
	Scale 0.25
	Inventory.Amount 1
	Inventory.MaxAmount 1 //This is one powerup that cannot be activated later. Only now.
	Inventory.InterHubAmount 0
	States
	{
	Spawn:
		QPEI A 0 NoDelay A_SetUserVar("user_limit",35*random(5,15))
	S2:
		QPEI A 0 A_SetUserVar("user_tick",user_tick+2)
		QPEI A 0 A_JumpIf(user_tick >= user_limit,"Scream")
		Goto Cont
	Scream:
		QPEI A 0 A_PlaySound("DemonMorph/Scream",CHAN_AUTO,1,0)
		QPEI A 0 A_SetUserVar("user_tick",0)
		Goto Spawn
	Cont:
		QPEI A 2 A_CheckSight("Simple")
		QPEI A 0 A_SpawnItemEx("DMBlackParticle",0,0,15.5,frandom(2.0,4.0),0,0,random(0,359),32)
		QPEI AAAAAAAA 0 A_SpawnItemEx("DMBlackParticle",0,0,15.5,frandom(2.0,4.0),0,0,random(0,359),32,192)
		Goto S2
	Simple:
		QPEI A 4 A_SetUserVar("user_tick",user_tick+2)
		Goto S2
	Use:
		TNT1 A 0 A_TakeInventory("ElectroDriverToken",32767)
		TNT1 A 0 A_RadiusGive("SoulSeekOff",16383,RGF_MONSTERS|RGF_NOSIGHT,1)
		TNT1 A 0 A_TakeInventory("SoulReaperAltToken",10000)
		TNT1 A 0 A_SpawnItemEx("DemonMorphStartSound",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
		TNT1 A 0 A_JumpIfInventory("PowerDemonMorph",1,"Adding")
		TNT1 A 0 A_StopSound(CHAN_AUTO)
		TNT1 A 0 A_StopSound(CHAN_WEAPON)
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		TNT1 A 0 A_StopSound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_StopSound(7)
		TNT1 A 0 A_TakeInventory("PowerLightAmp",1000,0)
		TNT1 A 0 A_GiveInventory("DemonMorphGiver",1)
		TNT1 A 0 A_SetInvulnerable
		
		Stop
	Adding:
		TNT1 A 0 A_SetBlend("Grey",1,17)
		//TNT1 A 0 A_StopSound(5)
		//TNT1 A 0 A_StopSound(6)
		//TNT1 A 0 A_PlaySound("DemonMorph/Grow",5|CHAN_NOPAUSE,1,0,ATTN_NONE)
		//TNT1 A 0 A_PlaySound("DemonMorph/Start",6|CHAN_NOPAUSE,1,0,ATTN_NONE)
		TNT1 A 0 A_PlaySound("DemonMorph/Scream",CHAN_AUTO|CHAN_NOPAUSE,1,0,ATTN_NONE)
		TNT1 A 0 A_GiveInventory("DemonMorphGiver",1)
		TNT1 A 0 A_GiveInventory("DemonMorphFullBright",1)
		TNT1 A 0 A_SetInvulnerable
		Stop
	Failure:
		TNT1 A 0
		Fail
	}
}

Actor DemonMorphGiver : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.QUIET
	+INVENTORY.ADDITIVETIME
	Powerup.Type DemonMorph
	Powerup.Duration 1225
}

Actor PowerDemonMorph : PowerMorph
{
	PowerMorph.PlayerClass "DemonPlayerMorph"
	//2 | 16 | 32 | 64 | 128 | 256 | 512 | 2048
	PowerMorph.MorphStyle MRF_WHENINVULNERABLE|MRF_UNDOBYDEATH|MRF_UNDOBYDEATHSAVES|MRF_LOSEACTUALWEAPON|MRF_NEWTIDBEHAVIOUR
	PowerMorph.MorphFlash "OldFog"
	PowerMorph.UnmorphFlash "DemonMorphFogOff"
}

Actor DemonPlayerMorph : DoomPlayer
{
	//POWER OVERWHELMING MOTHERFUCKERS!!!
	DamageFactor 0.0
	+NORADIUSDMG
	+NODAMAGE
	+NOPAIN
	+DONTMORPH
	RipLevelMin 666
	+PICKUP
	+NOTIMEFREEZE
	+INVULNERABLE
	+PLAYERPAWN.NOTHRUSTWHENINVUL
	+PLAYERPAWN.CROUCHABLEMORPH
	+DONTTHRUST
	+TELESTOMP
	Player.Maxhealth 666
	Health 666
	Player.MorphWeapon "AEoDDemonMorphHand"
}

Actor AEoDDemonMorphHand : Weapon
{
	+WEAPON.CHEATNOTWEAPON
	+INVENTORY.ALWAYSPICKUP
	//+INVENTORY.QUIET
	+INVENTORY.NOSCREENFLASH
	+WEAPON.AMMO_OPTIONAL
	+INVENTORY.UNDROPPABLE
	+INVENTORY.UNTOSSABLE
	States
	{
	Spawn:
		M666 A 0
		Stop
	Pickup:
		M666 A 0 A_JumpIf(!CheckClass("DemonPlayerMorph",AAPTR_DEFAULT,0),"Remove")
		Stop
	Select:
		M666 A 0 A_JumpIf(!CheckClass("DemonPlayerMorph",AAPTR_DEFAULT,0),"Remove")
		M666 A 0 A_ChangeFlag("NOPAIN",1)
		M666 A 0 A_SetInvulnerable
		M666 A 0 A_ChangeFlag("INVULNERABLE",1)
	SeleLoop:
		M666 A 0 A_Raise
		Loop
	Deselect:
		M666 A 0 A_ZoomFactor(1.0)
		M666 A 0 A_GiveInventory("DemonMorphRemoval",1)
		M666 A 0 A_TakeInventory("DemonMorphActiveToken",1000,0)
		M666 A 0 A_GiveInventory("PentagramDispelled",1)
		M666 A 0 A_ChangeFlag("NODAMAGE",0)
		Goto DesLoop
	DesLoop:
		M666 A 0 A_Lower
		Loop
	Ready:
		M666 A 0 A_JumpIfInventory("DemonMorphActiveToken",1,"Ready2")
		M666 A 0 A_GiveInventory("DemonMorphActiveToken",1)
		TNT1 A 0 A_JumpIfInventory("PentagramIsOn",1,"Sel2")
		Goto Sel3
	Sel2:
		TNT1 A 0 A_GiveInventory("PentagramDispelled",1)
	Sel3:
		M666 A 0 A_SpawnItemEx("DemonMorphScreams",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETTARGET)
		M666 A 0 A_PlaySound("DemonMorph/Loop",7|CHAN_NOPAUSE,1,1,ATTN_NONE)
		M666 A 1 A_SetBlend("White",0.125,10)
		M666 A 1 A_SetBlend("White",0.25,10)
		M666 A 1 A_SetBlend("White",0.375,10)
		M666 A 1 A_SetBlend("White",0.5,10)
		M666 A 1 A_SetBlend("White",0.625,10)
		M666 A 1 A_SetBlend("White",0.75,10)
		M666 A 1 A_SetBlend("White",0.875,10)
		M666 A 0 A_SetBlend("White",1.0,10)
		M666 A 0 A_SetInvulnerable
		M666 A 0 A_GiveInventory("DemonMorphFullBright",1)
		M666 A 0 ACS_NamedExecuteAlways("DemonMorphMusic",0,1,0,0)
	Ready2:
		M666 A 0 A_SetInvulnerable
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(5)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(10)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(15)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(20)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(25)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(30)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(35)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(40)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(45)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(50)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(55)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(60)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(65)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(70)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(75)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(80)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(85)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(90)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(95)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(100)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(105)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(110)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(115)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(120)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(125)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(130)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(135)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(140)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(145)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(150)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(155)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(160)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(165)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(170)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(175)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(180)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(185)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(190)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(195)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(200)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(205)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(210)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(215)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(220)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(225)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(230)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(235)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(240)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(245)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(250)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(255)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(260)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(265)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(270)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(275)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(280)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(285)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(290)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(295)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(300)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(305)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(310)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(315)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(320)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(325)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(330)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(335)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(340)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(345)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(350)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1+(sin(355)*0.095),ZOOM_NOSCALETURNING)
		M666 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOBOB)	M666 A 0 A_ZoomFactor(1.00,ZOOM_NOSCALETURNING)
		Loop
	AltFire:
	Fire:
		M666 A 0 A_JumpIf(!CheckClass("DemonPlayerMorph",AAPTR_DEFAULT,0),"Remove")
		M666 A 0 A_RailAttack(20000,0,0,none,none,RGF_SILENT,0,"DeathTouchPuff",0,0,32766,0,16,0,"DemonMorphExploder")
		M666 A 0 A_SpawnItemEx("DemonMorphShootingSound",0,0,0,0,0,0,0,32)//A_PlaySound("DemonMorph/Shoot",CHAN_WEAPON|CHAN_NOPAUSE,1,0)
		M666 A 1 A_ZoomFactor(2.00,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.5,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.25,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.00,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.98,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.96,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.94,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.93,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.94,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.96,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.98,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.00,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.02,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.03,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.04,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.03,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.02,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.015,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.010,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.005,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		/*
		M666 A 1 A_ZoomFactor(1.3,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.6,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.9,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.7,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.5,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.2,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.9,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.8,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.7,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.85,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.9,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(0.95,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.00,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.05,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.1,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.13,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.1,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.07,ZOOM_INSTANT|ZOOM_NOSCALETURNING)
		M666 A 1 A_ZoomFactor(1.04,ZOOM_INSTANT|ZOOM_NOSCALETURNING)*/
		M666 A 0 A_Refire
		Goto Ready2
	Remove:
		M666 A 1 A_TakeInventory("AEoDDemonMorphHand",1000,0)
		Goto Deselect
	}
}

Actor DemonMorphShootingSound
{
	+NOINTERACTION
	+NOTIMEFREEZE
	+NOTONAUTOMAP
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_Jump(128,"N2")
		TNT1 A 0 A_PlaySound("DemonMorph/Shoot1",5|CHAN_NOPAUSE,1,0,ATTN_NONE)
		//TNT1 A 0 A_PlaySound("DemonMorph/Shoot1",6|CHAN_NOPAUSE,1,0,ATTN_NONE)
		TNT1 A 1 A_PlaySound("DemonMorph/Shoot1",7|CHAN_NOPAUSE,1,0,ATTN_NONE)
		Stop
	N2:
		TNT1 A 0 A_PlaySound("DemonMorph/Shoot2",5|CHAN_NOPAUSE,1,0,ATTN_NONE)
		//TNT1 A 0 A_PlaySound("DemonMorph/Shoot2",6|CHAN_NOPAUSE,1,0,ATTN_NONE)
		TNT1 A 1 A_PlaySound("DemonMorph/Shoot2",7|CHAN_NOPAUSE,1,0,ATTN_NONE)
		Stop
	}
}
		

Actor DemonMorphExploder
{
	Projectile
	+NOINTERACTION
	+NODAMAGETHRUST
	+FORCERADIUSDMG
	+EXTREMEDEATH
	+NOTIMEFREEZE
	+PUFFGETSOWNER
	+NOTONAUTOMAP
	DamageType "TempestLightning"
	PainType "Normal"
	DeathType "Telefrag"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Explode(666,66,0,0,66)
		Stop
	}
}

Actor DeathTouchPuff
{
	Projectile
	+NOINTERACTION
	+DONTSPLASH
	+PUFFGETSOWNER
	+FORCERADIUSDMG
	+PUFFONACTORS
	+NOTIMEFREEZE
	+NOTONAUTOMAP
	DamageType "Extreme"
	DeathType "Telefrag"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Explode(666,66,0,0,66)
		Stop
	}
}

Actor DemonMorphFogOff
{
	+NOINTERACTION
	+NOTIMEFREEZE
	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_RadiusGive("DemonMorphRemoval",96,RGF_PLAYERS|RGF_NOSIGHT,1)
		Stop
	}
}

Actor DemonMorphRemoval : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
		//TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 ACS_NamedExecuteAlways("DemonMorphMusic",0,0,0,0)
/*		TNT1 A 0 A_JumpIf(CheckClass("DemonPlayerMorph",AAPTR_DEFAULT,0),"ForceOutFirst")
		Goto Continue		
	ForceOutFirst:
		TNT1 A 0 ACS_NamedExecuteAlways("ForceUnmorph",0,0,0,0)
		Goto Continue
	Continue:
*/
		TNT1 A 0 A_TakeInventory("PentagramIsOn",9999,0)
		TNT1 A 0 A_TakeInventory("PentagramCountdown",9999,0)
		TNT1 A 0 A_TakeInventory("PentagramDispelled",9999,0)
		TNT1 A 0 A_TakeInventory("PowerInvulBase",10000,0)
		TNT1 A 0 A_TakeInventory("DemonMorphActiveToken",1000,0)
		TNT1 A 0 A_ChangeFlag("NODAMAGE",0)
		TNT1 A 0 A_StopSound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_StopSound(7)
		TNT1 A 0 A_SetBlend("White",1.0,10)
		TNT1 A 0 A_PlaySound("DemonMorph/Stop",5,1,0,ATTN_NONE)
		TNT1 A 0 A_RadiusGive("DMEndingExploder",2048,RGF_MONSTERS,1)
		TNT1 A 0 A_GiveInventory("DemonMorphScreen",1)
		Stop
	}
}

Actor DMEndingExploder : CustomInventory
{
	+INVENTORY.ALWAYSPICKUP
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
		TNT1 A 0 A_DamageSelf(30000,"Telefrag")
		Stop
	}
}

Actor DemonMorphActiveToken : Inventory
{
	Inventory.MaxAmount 1
	Inventory.InterHubAmount 0
}

Actor DemonMorphScreen : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
    +INVENTORY.QUIET
    Powerup.Type "InvulBase"
    Powerup.Duration 35 //9000000
}

Actor DemonMorphFullBright : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
    +INVENTORY.QUIET
	+INVENTORY.ADDITIVETIME
    Powerup.Type "LightAmp"
    Powerup.Duration 1225
	Inventory.MaxAmount 0
}

Actor DemonMorphScreams
{
	var int user_tick;
	var int user_count;
	+NOINTERACTION
	+NOTIMEFREEZE
	+NOTONAUTOMAP
	Projectile
	+NODAMAGE
	RenderStyle None
	States
	{
	Spawn:
		//This part is needed so the morph has the chance to actually kick in 
		//before it checks, otherwise it won't work. It's never accessed again.
		TNT1 A 0
		TNT1 A 0 A_PlaySound("DemonMorph/Scream",CHAN_AUTO|CHAN_NOPAUSE,1,0,ATTN_NONE)
		TNT1 A 35 A_SetTics(35*random(1,3)) 
	S2:
		TNT1 A 0 A_PlaySound("DemonMorph/Scream",CHAN_AUTO|CHAN_NOPAUSE,1,0,ATTN_NONE)
		TNT1 A 0 A_SetUserVar(user_tick,random(1,3))
	MiniLoop:
		TNT1 A 0 A_JumpIf(CheckClass("DemonPlayerMorph",AAPTR_TARGET,0),1) //A_JumpIfInventory("PowerDemonMorph",1,1,AAPTR_TARGET)
		Goto End
		TNT1 A 35 A_SetUserVar(user_tick,user_tick-1)
		TNT1 A 0 A_JumpIf(user_tick > 0, "MiniLoop")
		TNT1 A 0 A_JumpIf(CheckClass("DemonPlayerMorph",AAPTR_TARGET,0),"S2")
	End:
		TNT1 A 0 A_StopSound(CHAN_AUTO)
		TNT1 A 0 A_StopSound(CHAN_WEAPON)
		TNT1 A 0 A_StopSound(CHAN_ITEM)
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		TNT1 A 0 A_StopSound(CHAN_BODY)
		TNT1 A 0 A_StopSound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_StopSound(7)
		Stop
	}
}