//==============================================================================
//==============================================================================
//									Fusion Chaingun
//==============================================================================
//==============================================================================

// Basically, _the_ Face Melter.
//
// Primary fires heavy stream of plasma that vaporizes smaller things and melts bigger.
// Accelerates and decelerates too slow for immediate action.
// Secondary fires a few bolts instantly, but reloads even slower.

// Slot 5: rapid-fire

Actor AEoDFusionChaingun : Weapon
{
	+FLOORCLIP
	+INVENTORY.IGNORESKILL
	Weapon.AmmoType1 "PlasmaRod"
	Weapon.AmmoType2 "PlasmaRod"
	Weapon.AmmoGive1 60
	Weapon.AmmoUse1 1
	Weapon.AmmoUse2 1
	Weapon.Kickback 10
	Weapon.SelectionOrder 10950
	Inventory.PickupMessage "You got the Fusion Chaingun! Fuse them together!"
	Inventory.PickupSound "reilsss/weappickup/plasmagun"
	Weapon.UpSound "weapons/plasma/draw"
	Scale 0.125
	Tag "Fusion Chaingun"
	States
	{
	Spawn:
		O002 Z -1
		Loop
	Ready:
		O002 C 1 Offset(192, 191) 
		O002 C 1 Offset(189, 176)
		O002 A 1 Offset(179, 159)
		O002 A 1 Offset(167, 134)
		O002 B 1 Offset(148, 116)
		O002 B 1 Offset(123, 110)
	ReallyReady:
		TNT1 A 0 A_PlaySound("reilsss/weapons/plasmaidle1", CHAN_BODY, 1.0, 1)
		TNT1 B 0 A_JumpIfInventory("PowerQuickFire",1,"ReallyReadyQuick")
		O002 B 4 Offset(121, 109) A_WeaponReady(WRF_NOBOB)	// Bobbing cancels custom offsets
		O002 A 4 Offset(121, 109) A_WeaponReady(WRF_NOBOB)
		O002 C 4 Offset(121, 109) A_WeaponReady(WRF_NOBOB)
		O002 A 4 Offset(121, 109) A_WeaponReady(WRF_NOBOB)
		Goto ReallyReady+1
	Deselect:
		TNT1 A 0 A_StopSound(CHAN_BODY)
		O002 B 1 Offset(123, 110)
		O002 B 1 Offset(148, 116)
		O002 A 1 Offset(167, 134)
		O002 A 1 Offset(179, 159)
		O002 C 1 Offset(189, 176)
		O002 C 1 Offset(192, 191) 
		TNT1 A 0 A_Lower
		Wait
	Select:
		TNT1 A 0 A_Raise
		Wait
	Fire:
	WindUp:
		TNT1 A 0 A_PlaySound("quake4/Weapons/Railgun/Charge", CHAN_WEAPON, 1.0, 0)
		TNT1 A 0 A_GunFlash
		O002 A 4 Offset(124, 110) Bright
		O002 B 3 Offset(125, 109) Bright
		O002 D 2 Offset(125, 110) Bright
		O002 E 2 Offset(126, 110) Bright
		O002 F 2 Offset(127, 110) Bright
		O002 G 2 Offset(128, 110) Bright
		O002 H 2 Offset(129, 110) Bright
		O002 D 1 Offset(129, 110) Bright
		O002 E 1 Offset(130, 112) Bright
		O002 F 1 Offset(131, 113) Bright
		O002 G 1 Offset(132, 114) Bright
		O002 H 1 Offset(133, 114) Bright
		Goto ActuallyFire
	ActuallyFire:
		TNT1 A 0 A_JumpIfInventory("PowerQuickFire",1,"ActuallyFireQuick")
		TNT1 A 0 A_GunFlash
		O002 D 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		O002 E 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		O002 F 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		O002 G 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		O002 H 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		TNT1 A 0 A_Refire("ActuallyFire")
		Goto WindDown
	WindDown:
		TNT1 A 0 A_JumpIfInventory("PowerQuickFire",1,"WindDownQuick")
		TNT1 A 0 A_PlaySound("reilsss/weapons/FusionChaingunfire", CHAN_WEAPON, 1.0, 0)
		TNT1 A 0 A_GunFlash
		O002 D 1 Offset(133, 114) Bright
		O002 E 1 Offset(132, 113) Bright
		O002 F 1 Offset(131, 112) Bright
		O002 G 1 Offset(130, 113) Bright
		O002 H 1 Offset(129, 114) Bright
		O002 D 2 Offset(128, 113) Bright
		O002 E 2 Offset(127, 112) Bright
		O002 F 2 Offset(126, 111) Bright
		O002 G 2 Offset(125, 110) Bright
		O002 H 2 Offset(124, 110) Bright
		O002 B 3 Offset(123, 109) Bright
		O002 A 4 Offset(122, 110) Bright
		Goto ReallyReady
		
// [MC] You do know frame durations are cut in half regardless of what you do, 
// right? Except for 1 and 0. So basically these 8 frames are reduced to 4.
	ReallyReadyQuick:
		TNT1 A 0 A_PlaySound("reilsss/weapons/plasmaidle1", CHAN_BODY, 1.0, 1)
		O002 B 2 Offset(121, 109) A_WeaponReady(WRF_NOBOB)
		O002 A 2 Offset(121, 109) A_WeaponReady(WRF_NOBOB)
		O002 C 2 Offset(121, 109) A_WeaponReady(WRF_NOBOB)
		O002 A 2 Offset(121, 109) A_WeaponReady(WRF_NOBOB)
		Goto ReallyReady+1
	FireQuick:
	WindUpQuick:
		O002 A 2 Offset(122, 110) Bright 
		O002 B 1 Offset(123, 110) Bright 
		O002 D 1 Offset(125, 110) Bright 
		O002 E 1 Offset(125, 110) Bright 
		O002 F 1 Offset(125, 110) Bright
		O002 G 1 Offset(125, 110) Bright
		O002 H 1 Offset(125, 110) Bright
		O002 D 1 Offset(125, 110) Bright
		O002 F 1 Offset(129, 113) Bright
		O002 H 1 Offset(130, 114) Bright
		Goto ActuallyFire
	ActuallyFireQuick:
		TNT1 A 0 A_Recoil(2)
		TNT1 A 0 A_GunFlash
		O002 DD 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		O002 EE 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		O002 FF 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		O002 GG 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		O002 HH 0 Offset(135, 114) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)	"----" A 1 A_Recoil(0.2)
		TNT1 A 0 A_Refire("ActuallyFireQuick")	// Lets player enjoy double-density volley even after powerup is over, because it won't last for long anyway.
		Goto WindDown
	WindDownQuick:
		O002 D 1 Offset(130, 114) Bright
		O002 F 1 Offset(129, 114) Bright
		O002 H 1 Offset(128, 113) Bright
		O002 D 1 Offset(127, 113) Bright
		O002 E 2 Offset(126, 112) Bright
		O002 F 1 Offset(125, 112) Bright
		O002 G 1 Offset(125, 111) Bright
		O002 H 1 Offset(124, 110) Bright
		O002 B 2 Offset(123, 109) Bright
		O002 A 2 Offset(122, 110) Bright
		Goto ReallyReady
		
	AltFire:
		TNT1 A 0 A_Recoil(5)
		TNT1 A 0 A_JumpIfInventory("PowerQuickFire",1,"AltFireQuick")
		TNT1 A 0 A_GunFlash
		O002 D 1 Offset(125, 113) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)
		O002 E 1 Offset(124, 112) Bright
		TNT1 A 0 A_GunFlash
		O002 F 1 Offset(123, 112) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)
		O002 G 1 Offset(123, 112) Bright
		O002 H 1 Offset(122, 111) Bright 
		TNT1 A 0 A_GunFlash
		O002 D 2 Offset(122, 111) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)
		O002 E 2 Offset(122, 110) Bright
		O002 F 2 Offset(121, 110) Bright 
		O002 G 2 Offset(121, 109) Bright
		O002 H 2 Offset(121, 109) Bright 
		Goto ReallyReady
	AltFireQuick:
		TNT1 A 0 A_GunFlash("AltFlash")
		O002 D 1 Offset(125, 113) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)
		O002 E 1 Offset(124, 112) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)
		O002 F 1 Offset(123, 111) Bright 
		TNT1 A 0 A_GunFlash("AltFlash")
		O002 G 2 Offset(122, 110) Bright A_FireCustomMissile("FusionChaingunBall", 0, 1, 6, 3)
		O002 H 2 Offset(121, 109) Bright 
		Goto ReallyReady

	Flash:
		TNT1 AAAAA 1 A_Light(random(1,random(1,random(1,8))))
		TNT1 A 0 A_Light0
		Stop
	AltFlash:
		TNT1 A 2 A_Light2
		TNT1 A 2 A_Light1
		TNT1 A 0 A_Light0
		Stop
	}
}

Actor FusionChaingunBall
{
	var int user_deviation; // just a freaked out iterator that bit-shifts instead of decrementing
	var int user_xs; // \
	var int user_ys; //  } original vector to be restored after deviation
	var int user_zs; // /
	PROJECTILE
	+DROPOFF
	+NOBLOCKMAP
	+NOGRAVITY
	+SKYEXPLODE
	+DONTSPLASH
	+HITTRACER
	Speed 35
	Height 8
	Radius 5
	Damage (random(10,50))
	RenderStyle Add
	DamageType "Plasma"
	Alpha 1
	Scale 0.15
	SeeSound "Sc2/Wep/FusionChaingun"
	States
	{
	Spawn:
		TNT1 AA 0 A_ScaleVelocity(frandom(0.9,1/0.9))
		TNT1 A 0 A_SetUserVar(user_xs, velx)
		TNT1 A 0 A_SetUserVar(user_ys, vely)
		TNT1 A 0 A_SetUserVar(user_zs, velz)
		TNT1 A 0 A_SetUserVar(user_deviation, random(-14,14))
		TNT1 A 0 A_SpawnItemEx("FusionChaingunFlare", 0,0,0, 0,0,0, 0, SXF_SETMASTER|SXF_ORIGINATOR|SXF_CLIENTSIDE)
		TNT1 A 0 A_SpawnItemEx("FusionChaingunTrail", 0,0,0, 0,0,0, 0, SXF_SETMASTER|SXF_ORIGINATOR|SXF_CLIENTSIDE)
	aLooper:
// [MC] I don't know why you put randoms inside of randoms, but random(-2,2) is better.
// An alternative is random(0,2)*randompick(-1,1) if needed though.
		R053 ABC 1 Bright A_ChangeVelocity(0,random(-2,2),random(-1,1), CVF_RELATIVE)
		TNT1 A 0 A_SetUserVar(user_deviation, user_deviation / 2)
		TNT1 A 0 A_JumpIf(user_deviation == 0, "Blooper")
		Loop
	Blooper:
		R053 A 1 Bright A_ChangeVelocity(user_xs,user_ys,user_zs)
		R053 A 0 A_ScaleVelocity(0.4)
		R053 B 1 Bright A_ChangeVelocity(user_xs,user_ys,user_zs)
		R053 B 0 A_ScaleVelocity(0.4)
		R053 C 1 Bright A_ChangeVelocity(user_xs,user_ys,user_zs)
		R053 C 0 A_ScaleVelocity(0.5)
		R053 A 1 Bright A_ChangeVelocity(user_xs,user_ys,user_zs)
		R053 A 0 A_ScaleVelocity(0.5)
		R053 B 1 Bright A_ChangeVelocity(user_xs,user_ys,user_zs)
		R053 B 0 A_ScaleVelocity(0.6)
		R053 C 1 Bright A_ChangeVelocity(user_xs,user_ys,user_zs)
		R053 C 0 A_ScaleVelocity(0.6)
	Clooper:
		R053 ABC 1 Bright
		Loop
	XDeath:
	Crash:
		// Monsters less than 1000 hp tough enjoy additional AoE damage
		"####" "#" 0 A_JumpIfHealthLower(1000,"AlsoBoom",AAPTR_TRACER)
	Death:
		"####" "#" 0 A_RemoveChildren(true,RMVF_EVERYTHING)
	DeathLooper:
		"####" "#" 1 Bright A_SetScale(scalex*1.25)
		"####" "#" 0 A_FadeOut(0.15)
		Loop
	AlsoBoom:
		"####" "#" 0 A_SpawnItemEx("FusionChaingunBoom",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS)
		Goto Death
	}
}

Actor FusionChaingunFlare
{
	+NOINTERACTION
	Speed 0
	RenderStyle Add
	Alpha 0.0
	Scale 0.18
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Jump(256,1,2,3,4,5,6)
	Looper:
		R053 DEFGH 1 Bright A_Warp(AAPTR_MASTER, -5,0,0,0, WARPF_INTERPOLATE)
		"####" "#" 0 A_FadeTo(1)
		Goto Looper
	}
}

Actor FusionChaingunTrail : FusionChaingunFlare
{
	Translation "0:255=%[0,0,0]:[1.0,0.3,0.2]"
	Alpha 0.75
	Scale 0.1
	States
	{
	Spawn:
		X101 ABCDEDFGHIJKLMNOP 1 A_Warp(AAPTR_MASTER, -10,0,0,0, WARPF_INTERPOLATE)
		Loop
	}
}

Actor FusionChaingunBoom : FusionChaingunFlare
{
	Alpha 1
	Scale 0.22
	DamageType "Fire"	//Yep it's plasma but plasma is hot so...
	//[MC] We have AEPlasma damagetype for that. But eh.
	//Also lets avoid setting things on fire. I quickly grow tired of having
	//beggars running back to me and incidentally killing me.
	DeathType "Extreme" 
	+EXTREMEDEATH
	States
	{
	Spawn:
		R053 KK 0 A_Explode(50,50,0,0,32)
		R053 KKLLMMNNOOOPPPPQQQQ 1 Bright A_FadeOut(0.04)
		Stop
	}
}

Actor FusionChaingunDrop : CustomInventory
{
	States
	{
	Use:
		TNT1 A 0
		TNT1 A 0 A_StopSound(CHAN_BODY)
		TNT1 A 0 A_SpawnItemEx("DroppedFusionChaingun",0,0,32,8,0,0,0,SXF_NOCHECKPOSITION,0)
		Stop
	}
}

Actor DroppedFusionChaingun
{
	Radius 16
	Height 20
	Scale 0.125
	States
	{
	Spawn:
		O002 Z 15
		TNT1 A 0 A_SpawnItemEx("AEoDFusionChaingunNoAmmo",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0)
		Stop
	}
}

Actor AEoDFusionChaingunItem : CustomInventory
{
	+FLOORCLIP
	+INVENTORY.IGNORESKILL
	Scale 0.125
	Inventory.Amount 1
	Inventory.PickupMessage "You got the Fusion Chaingun!"
	Inventory.PickupSound "reilsss/weappickup/plasmagun"
	States
	{
	Spawn:
		O002 Z -1
		Loop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("AEoDFusionChaingun",1,"Ammo")
		TNT1 A 0 A_JumpIf(CallACS("WeaponSlotLimitCheck",5) <= 0,"Nothing")
		TNT1 A 0 A_GiveInventory("Weapon5Count",1)
		TNT1 A 0 A_GiveInventory("FusionChaingunDrop",1)
		TNT1 A 0 A_GiveInventory("AEoDFusionChaingun",1)
		TNT1 A 0 	
		Stop
	Nothing:
		TNT1 A 0 A_JumpIfInventory("AEoDFusionChaingun",1,"Ammo")
		TNT1 A 0 A_JumpIfInventory("LimitScriptActive",1,1)
		Goto Pickup+2
		TNT1 A 0 ACS_NamedExecute("s798",0,5,162,0)
		Fail
	Ammo:
		TNT1 A 0 A_GiveInventory("AEoDFusionChaingun",1)
		Stop
	}
}

Actor AEoDFusionChaingunNoAmmo : AEoDFusionChaingunItem
{
	+FLOORCLIP
	+INVENTORY.IGNORESKILL
	Scale 0.125
	Inventory.PickupMessage "You got the Plasma Rifle!"
	Inventory.PickupSound "reilsss/weappickup/plasmagun"
	States
	{
	Spawn:
		O002 Z -1
		Loop
	Pickup:
		TNT1 A 0 A_JumpIf(CallACS("WeaponSlotLimitCheck",5) <= 0,"Nothing")
		TNT1 A 0 A_JumpIfInventory("PlasmaRod",60,"Ammo")
		TNT1 A 0 A_GiveInventory("Weapon5Count",1)
		TNT1 A 0 A_GiveInventory("FusionChaingunDrop",1)
		TNT1 A 0 A_GiveInventory("AEoDFusionChaingun",1)
		TNT1 A 0 A_TakeInventory("PlasmaRod",60)
		TNT1 A 0 	
		Stop
	Nothing:
		TNT1 A 0 A_JumpIfInventory("AEoDFusionChaingun",1,"Ammo")
		TNT1 A 0 A_JumpIfInventory("LimitScriptActive",1,1)
		Goto Pickup+2
		TNT1 A 0 ACS_NamedExecute("s798",0,5,162,0)
		Fail
	Ammo:
		TNT1 A 0 A_TakeInventory("PlasmaRod",60)
		TNT1 A 0 A_JumpIfInventory("AEoDFusionChaingun",1,2)
		TNT1 A 0 A_GiveInventory("Weapon5Count",1)
		TNT1 A 0 A_GiveInventory("FusionChaingunDrop",1)
		TNT1 A 0 A_GiveInventory("AEoDFusionChaingun",1)
		Stop
	}
}



//==============================================================================
//==============================================================================
//							C-14 "Impaler" Gauss Rifle
//==============================================================================
//==============================================================================

// The most versatile weapon of Koprulu sector.
// Wildly customizable. Up to 16 different ways to upgrade, all picked up from
// individual pieces scattered across the battlefield.

// Slot 4: assault

Actor AEoDC14NoAmmo : CustomInventory
{
	+FLOORCLIP
	+INVENTORY.IGNORESKILL
	Scale 0.2
	Inventory.Amount 1
	Inventory.PickupMessage "You found the C-14 \"Impaler\" Gauss Rifle! No upgrade here."
	Inventory.PickupSound "weapons/stroggarmsaw/pickup"
	States
	{
	Spawn:
		O003 Z -1
		Loop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("AEoDC14",1,"Ammo")
		TNT1 A 0 A_JumpIf(CallACS("WeaponSlotLimitCheck",4) <= 0,"Nothing")
		TNT1 A 0 A_GiveInventory("Weapon4Count",1)
		TNT1 A 0 A_GiveInventory("C14Drop",1)
		TNT1 A 0 A_GiveInventory("AEoDC14",1)
		TNT1 A 0 	
		Stop
	Nothing:
		TNT1 A 0 A_JumpIfInventory("AEoDC14",1,"Ammo")
		TNT1 A 0 A_JumpIfInventory("LimitScriptActive",1,1)
		Goto Pickup+2
		TNT1 A 0 ACS_NamedExecute("s798",0,4,163,0)
		Fail
	Ammo:
		TNT1 A 0 A_GiveInventory("AEoDC14",1)
		Stop
	}
}



Actor C14Drop : CustomInventory
{
	Inventory.MaxAmount 1
	States
	{
	Use:
		TNT1 A 0
		TNT1 A 0 A_SpawnItemEx("DroppedC14",0,0,32,8,0,0,0,SXF_NOCHECKPOSITION,0)
		Stop
	}
}

Actor DroppedC14
{
	Radius 16
	Height 20
	Scale 0.2
	States
	{
	Spawn:
		O003 Z 15
		TNT1 A 0 A_SpawnItemEx("AEoDC14NoAmmo",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0)
		Stop
	}
}

// This weapon's pickup is unlike any other's due to upgrade system.
Actor AEoDC14Item : AEoDC14NoAmmo
{
	+INVENTORY.IGNORESKILL
	Inventory.PickupMessage "You found the C-14 \"Impaler\" Gauss Rifle!"
	States
	{
	Spawn:
		O003 Z -1
		Loop
	Pickup:
		TNT1 A 0 A_JumpIf(CallACS("WeaponSlotLimitCheck",4) <= 0,"Nothing")
		TNT1 A 0 A_JumpIfInventory("AEClip",60,"Ammo")
		TNT1 A 0 A_JumpIfInventory("MiniRockets",15,"Ammo3")
	ForceGive:
		TNT1 A 0 A_GiveInventory("Weapon4Count",1)
		TNT1 A 0 A_GiveInventory("C14Drop",1)
		TNT1 A 0 A_GiveInventory("AEoDC14",1)
		TNT1 A 0 A_TakeInventory("AEClip",60)
		TNT1 A 0 A_TakeInventory("MiniRockets",15)
		TNT1 A 0 	
		Stop
	Nothing:
		TNT1 A 0 A_JumpIfInventory("AEoDC14",1,"AdvanceUpgrades")
		TNT1 A 0 A_JumpIfInventory("LimitScriptActive",1,1)
		Goto ForceGive
		TNT1 A 0 ACS_NamedExecute("s798",0,4,163,0)
		Fail
		
	AdvanceUpgrades:
		TNT1 A 0 A_JumpIfInventory("HasUpgrades",16,"JustAmmo") // prevents infinite loop
		
	GiveUpgrade:
		TNT1 A 0 A_Jump(256, 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
	Loopback:
	GiveBlastShrapnel:  	TNT1 A 0 
							{ 	
								if(CountInv("CanBlastShrapnel")>0) 	
								{   return state(0); }
								  A_GiveInventory("CanBlastShrapnel",1);
								A_Print("Added upgrade: shrapnel underbarrel launcher");
								return state("IncrementUpgrades");
							}
	GiveHoldAim: 			TNT1 A 0 
							{ 	
								if(CountInv("CanHoldAim")>0) 			{  return state(0); } 
								  A_GiveInventory("CanHoldAim",1);
								A_Print("Added upgrade: aim stabilizer");
								return state("IncrementUpgrades");
							}
	GiveFireExtraBurst: 	TNT1 A 0 
							{ 	
								if(CountInv("CanFireExtraBurst")>0)	{  return state(0); } 
								 A_GiveInventory("CanFireExtraBurst",1);
								A_Print("Added upgrade: double burst");
								return state("IncrementUpgrades");	
							}
	GiveFireNonStop: 		TNT1 A 0 
							{ 	if(CountInv("CanFireNonStop")>0) 		{  return state(0); } 
								A_GiveInventory("CanFireNonStop",1);
								A_Print("Added upgrade: fully automatic mode");
								return state("IncrementUpgrades");	
							}
	GiveFireExtraRound: 	TNT1 A 0 
							{ 	if(CountInv("CanFireExtraRound")>0) 	{  return state(0); } 
								  A_GiveInventory("CanFireExtraRound",1);
								A_Print("Added upgrade: prolonged burst");
								return state("IncrementUpgrades");	
							}
	GiveRestoreAmmo: 		TNT1 A 0 
							{ 	if(CountInv("CanRestoreAmmo")>0) 		{  return state(0); } 
								  A_GiveInventory("CanRestoreAmmo",1);
								A_Print("Added upgrade: economizer");
								return state("IncrementUpgrades");	
							}
	GiveBlastFire: 			TNT1 A 0 
							{ 	if(CountInv("CanBlastFire")>0) 		{  return state(0); } 
								 A_GiveInventory("CanBlastFire",1);
								A_Print("Added upgrade: incendiary underbarrel launcher");
								return state("IncrementUpgrades");	
							}
	GiveFireRailRound: 		TNT1 A 0 
							{ 	if(CountInv("CanFireRailRound")>0)	{  return state(0); } 
								 A_GiveInventory("CanFireRailRound",1);
								A_Print("Added upgrade: special penetration round");
								return state("IncrementUpgrades");	
							}
	GiveFirePrecisely: 		TNT1 A 0 
							{ 	if(CountInv("CanFirePrecisely")>0) 	{  return state(0); } 
								 A_GiveInventory("CanFirePrecisely",1);
								A_Print("Added upgrade: accurization");
								return state("IncrementUpgrades");	
							}
	GiveFireFireRound: 		TNT1 A 0 
							{ 	if(CountInv("CanFireFireRound")>0) 	{  return state(0); } 
								 A_GiveInventory("CanFireFireRound",1);
								A_Print("Added upgrade: special incendiary round");
								return state("IncrementUpgrades");	
							}
	GiveFireFaster: 		TNT1 A 0 
							{ 	if(CountInv("CanFireFaster")>0) 		{  return state(0); } 
								  A_GiveInventory("CanFireFaster",1);
								A_Print("Added upgrade: rate of fire improvement");
								return state("IncrementUpgrades");	
							}
	GiveBlastFar: 			TNT1 A 0 
							{ 	if(CountInv("CanBlastFar")>0) 		{  return state(0); } 
								 A_GiveInventory("CanBlastFar",1);
								A_Print("Added upgrade: long-distance underbarrel launcher");
								return state("IncrementUpgrades");	
							}
	GiveFireScatterRound: 	TNT1 A 0 
							{ 	if(CountInv("CanFireScatterRound")>0) {  return state(0); } 
								 A_GiveInventory("CanFireScatterRound",1);
								A_Print("Added upgrade: special scatter round");
								return state("IncrementUpgrades");	
							}
	GiveFireHeavyRounds: 	TNT1 A 0 
							{ 	if(CountInv("CanFireHeavyRounds")>0) 	{  return state(0); } 
								 A_GiveInventory("CanFireHeavyRounds",1);
								A_Print("Added upgrade: depleted uranium rounds");
								return state("IncrementUpgrades");	
							}
	GiveHoldGround: 		TNT1 A 0 
							{ 	if(CountInv("CanHoldGround")>0) 		{  return state(0); } 
								 A_GiveInventory("CanHoldGround",1);
								A_Print("Added upgrade: recoil stabilizer");
								return state("IncrementUpgrades");	
							}
	GiveFireElectricRound: 	TNT1 A 0 
							{ 	if(CountInv("CanFireElectricRound")>0){  return state(0); } 
								 A_GiveInventory("CanFireElectricRound",1);
								A_Print("Added upgrade: special EMP round");
								return state("IncrementUpgrades");	
							}
		TNT1 A 0 A_Jump(256,"Loopback") // loopback
	IncrementUpgrades:
		TNT1 A 0 A_GiveInventory("HasUpgrades",1)
		Goto UpgradesDone
	
	JustAmmo:
		TNT1 A 0 
		{ 	
			A_GiveInventory("AEClip",200);
			A_TakeInventory("MiniRockets",50);
			A_Print("Upgrades maxed out! You found a few extra clips.");
			return state("UpgradesDone");	
		}
	UpgradesDone:
	Ammo:
		TNT1 A 0 A_JumpIfInventory("MiniRockets",15,1)
		Goto Ammo2
		TNT1 A 0 A_TakeInventory("AEClip",60)
		TNT1 A 0 A_TakeInventory("MiniRockets",15)
		TNT1 A 0 A_JumpIfInventory("AEoDC14",1,2)
		TNT1 A 0 A_GiveInventory("Weapon4Count",1)
		TNT1 A 0 A_GiveInventory("C14Drop",1)
		TNT1 A 0 A_GiveInventory("AEoDC14",1)
		Stop
	Ammo2:
		TNT1 A 0 A_TakeInventory("AEClip",60)
		TNT1 A 0 A_GiveInventory("Weapon4Count",1)
		TNT1 A 0 A_GiveInventory("C14Drop",1)
		TNT1 A 0 A_GiveInventory("AEoDC14",1)
		TNT1 A 0 A_TakeInventory("MiniRockets",15)
		Stop
	Ammo3:
		TNT1 A 0 A_TakeInventory("MiniRockets",15)
		TNT1 A 0 A_GiveInventory("Weapon4Count",1)
		TNT1 A 0 A_GiveInventory("C14Drop",1)
		TNT1 A 0 A_GiveInventory("AEoDC14",1)
		TNT1 A 0 A_TakeInventory("AEClip",60)
		Stop
	}
}

Actor HasUpgrades			: Inventory { Inventory.MaxAmount 16 }

Actor CanHoldGround 		: Inventory {}	//
Actor CanHoldAim 			: Inventory {}	//
Actor CanFireExtraRound 	: Inventory {}	//
Actor CanFireFireRound 		: Inventory {}	//
Actor CanFireElectricRound 	: Inventory {}	//
Actor CanFireRailRound 		: Inventory {}	//
Actor CanFireScatterRound 	: Inventory {}	//
Actor CanFireExtraBurst 	: Inventory {}	//
Actor CanFireNonStop 		: Inventory {}	//
Actor CanRestoreAmmo 		: Inventory {}	//
Actor CanFireHeavyRounds 	: Inventory {}	//
Actor CanFireFaster 		: Inventory {}	//
Actor CanFirePrecisely		: Inventory {}	//
Actor CanBlastShrapnel 		: Inventory {}
//Actor CanBlastNotSelf 		: Inventory {}
Actor CanBlastFire 			: Inventory {}
Actor CanBlastFar 			: Inventory {}

Actor RoundsLeft		: Inventory { Inventory.MaxAmount 255 }
Actor ExtraRoundsLeft	: RoundsLeft {}
Actor FireRoundsLeft	: RoundsLeft {}
Actor ElectricRoundsLeft: RoundsLeft {}
Actor RailRoundsLeft	: RoundsLeft {}
Actor ScatterRoundsLeft	: RoundsLeft {}
Actor BurstsLeft		: RoundsLeft {}

Actor AEoDC14 : Weapon
{
	Weapon.AmmoType "AENails"
	Weapon.AmmoUse 1
	Weapon.AmmoGive 60
	Weapon.AmmoType2 "MiniRockets"
	Weapon.AmmoUse2 3
	Weapon.AmmoGive2 15
	Weapon.SelectionOrder 7300
	Scale 0.25
	Inventory.PickupSound "painkiller/weapon/chaingun/PickWeapon"
	weapon.upsound "weapons/draw"
	Inventory.PickupMessage "You found the C-14 \"Impaler\" Gauss Rifle!"
	Tag "Impaler Rifle"
	States
	{
	Spawn:
		O003 Z -1
		Stop
	Ready:
		O003 A 1 Offset(292, 191) 
		O003 A 1 Offset(279, 176)
		O003 A 1 Offset(259, 159)
		O003 A 1 Offset(237, 134)
		O003 A 1 Offset(218, 126)
		O003 A 1 Offset(193, 120)
	ReallyReady:
		O003 A 1 Offset(84, 120) A_WeaponReady (WRF_NOBOB)	// Bobbing cancels custom offsets
		Loop
	Deselect:
		TNT1 A 0 A_StopSound(CHAN_BODY)
		O003 A 1 Offset(193, 120)
		O003 A 1 Offset(218, 126)
		O003 A 1 Offset(237, 134)
		O003 A 1 Offset(259, 159)
		O003 A 1 Offset(279, 176)
		O003 A 1 Offset(292, 191) 
		TNT1 A 0 A_Lower
		Wait
	Select:
		TNT1 A 0 A_Raise
		Wait
	Fire:
	InitMetaSequence:
		TNT1 A 0 A_GiveInventory("BurstsLeft",1)
	CanFireExtraBurst:
		TNT1 A 0 A_JumpIfInventory("CanFireExtraBurst",1,1) 	Goto InitSequence
		TNT1 A 0 A_GiveInventory("BurstsLeft",1)				Goto InitSequence
		
	InitSequence:
		TNT1 A 0 A_TakeInventory("BurstsLeft",1)
		TNT1 A 0 A_GiveInventory("RoundsLeft",4)
	CanFireExtra:
		TNT1 A 0 A_JumpIfInventory("CanFireExtraRound",1,1) 	Goto CanFireFire
		TNT1 A 0 A_GiveInventory("ExtraRoundsLeft",1)
	CanFireFire:
		TNT1 A 0 A_JumpIfInventory("CanFireFireRound",1,1) 		Goto CanFireElectric
		TNT1 A 0 A_GiveInventory("FireRoundsLeft",1)
	CanFireElectric:
		TNT1 A 0 A_JumpIfInventory("CanFireElectricRound",1,1) 	Goto CanFireRail
		TNT1 A 0 A_GiveInventory("ElectricRoundsLeft",1)
	CanFireRail:
		TNT1 A 0 A_JumpIfInventory("CanFireRailRound",1,1) 		Goto CanFireScatter
		TNT1 A 0 A_GiveInventory("RailRoundsLeft",1)
	CanFireScatter:
		TNT1 A 0 A_JumpIfInventory("CanFireScatterRound",1,1) 	Goto FireLoop
		TNT1 A 0 A_GiveInventory("ScatterRoundsLeft",1)
	
	FireLoop:
		TNT1 A 0 A_JumpIfInventory("ExtraRoundsLeft"	,1,"FireExtra")
		TNT1 A 0 A_JumpIfInventory("FireRoundsLeft"		,1,"FireFire")
		TNT1 A 0 A_JumpIfInventory("ElectricRoundsLeft"	,1,"FireElectric")
		TNT1 A 0 A_JumpIfInventory("RailRoundsLeft"		,1,"FireRail")
		TNT1 A 0 A_JumpIfInventory("ScatterRoundsLeft"	,1,"FireScatter")
		TNT1 A 0 A_JumpIfInventory("RoundsLeft"			,1,"FireOrdinary")
		Goto EndSequence
		
	FireFire:
		TNT1 A 0 A_TakeInventory("FireRoundsLeft",1)
		TNT1 A 0 A_JumpIfInventory(CanFirePrecisely,1,2)
		TNT1 A 0 A_FireBullets(3,3,1,0,"FireSpawningPuff")		Goto Shot
		TNT1 A 0 A_FireBullets(1,1,1,0,"FireSpawningPuff")		Goto Shot
		
	FireElectric:
		TNT1 A 0 A_TakeInventory("ElectricRoundsLeft",1)
		TNT1 A 0 A_JumpIfInventory(CanFirePrecisely,1,2)
		TNT1 A 0 A_FireBullets(3,3,1,0,"ElectricSpawningPuff")	Goto Shot
		TNT1 A 0 A_FireBullets(1,1,1,0,"ElectricSpawningPuff")	Goto Shot
		
	FireRail:
		TNT1 A 0 A_TakeInventory("RailRoundsLeft",1)
		TNT1 A 0 A_RailAttack(30,0,1,"none","none",RGF_SILENT)	Goto Shot
	
	FireScatter:
		TNT1 A 0 A_TakeInventory("ScatterRoundsLeft",1)
		TNT1 A 0 A_JumpIfInventory(CanFirePrecisely,1,"ScatterPrecisely")
	Scatter:
		TNT1 A 0 A_FireBullets(7,7,1,3,"NewPuff1Silent",0)
		TNT1 A 0 A_FireBullets(3,7,1,3,"NewPuff1Silent",0)
		TNT1 A 0 A_FireBullets(7,3,1,3,"NewPuff1Silent",0)
		TNT1 A 0 A_FireBullets(5,5,1,3,"NewPuff1Silent",0)
		TNT1 A 0 A_FireBullets(4,4,1,3,"NewPuff1Silent",0)
		TNT1 A 0 A_FireBullets(3,3,1,3,"NewPuff1Silent",0)			Goto Shot
	ScatterPrecisely:
		TNT1 A  0 A_FireBullets(3,3,1,3,"NewPuff1Silent",0)
		TNT1 AA 0 A_FireBullets(1,3,1,3,"NewPuff1Silent",0)
		TNT1 AA 0 A_FireBullets(3,1,1,3,"NewPuff1Silent",0)
		TNT1 A  0 A_FireBullets(1,1,1,3,"NewPuff1Silent",0)			Goto Shot
		
	FireExtra:
		TNT1 A 0 A_TakeInventory("ExtraRoundsLeft",1)
		Goto FireOrdinary+1
	FireOrdinary:
		TNT1 A 0 A_TakeInventory("RoundsLeft",1)
		TNT1 A 0 A_JumpIfInventory(CanFireHeavyRounds,1,"OrdinaryHeavy")
	Ordinary:
		TNT1 A 0 A_JumpIfInventory(CanFirePrecisely,1,2)
		TNT1 A 0 A_FireBullets(3,3,1,18,"NewPuff1")				Goto Shot
		TNT1 A 0 A_FireBullets(1,1,1,24,"NewPuff1")				Goto Shot
	OrdinaryHeavy:
		TNT1 A 0 A_JumpIfInventory(CanFirePrecisely,1,2)
		TNT1 A 0 A_FireBullets(2,2,1,27,"NewPuff1")				Goto Shot
		TNT1 A 0 A_FireBullets(0.2,0.2,1,35,"NewPuff1")			Goto Shot
		
	Shot:
		TNT1 A 0 A_FireCustomMissile("RevolverCasingSpawner",random(-40,-60),0, 0,0)
	AimDegradation:
		TNT1 A 0 A_JumpIfInventory(CanHoldAim,1,"Recoil")
		TNT1 A 0 A_JumpIfInventory(CanFireHeavyRounds,1,2)
		TNT1 A 0 A_Turn(frandom(-1,1))
		Goto Recoil
		TNT1 A 0 A_Turn(frandom(-2,2))
		Goto Recoil
	Recoil:
		TNT1 A 0 A_JumpIfInventory(CanHoldGround,1,"Sound")
		TNT1 A 0 A_JumpIfInventory(CanFireHeavyRounds,1,2)
		TNT1 A 0 A_Recoil(random(1,random(1,2)))
		Goto Sound
		TNT1 A 0 A_Recoil(random(1,3))
		Goto Sound
	Sound:
		TNT1 A 0 A_PlayWeaponSound("Sc2/Wep/C14")		
		TNT1 A 0 A_JumpIfInventory(CanFireHeavyRounds,1,1)
		Goto ShotVisual
		TNT1 A 0 A_PlaySoundEx("Sc2/Wep/C14Heavy",Auto)
		Goto ShotVisual
		
	ShotVisual:
		TNT1 A 0 A_Jump(256,"ShotVisualA","ShotVisualB","ShotVisualC","ShotVisualD","ShotVisualE","ShotVisualF","ShotVisualG","ShotVisualH") // can't use random() in offset()
	ShotVisualA:
		O003 A 1 Offset(197, 128) A_SetPitch(pitch+1)
		O003 A 1 Offset(191, 123) A_SetPitch(pitch-.6)
		O003 A 1 Offset(187, 122) A_SetPitch(pitch-.4)			Goto ShotVisualEnd
	ShotVisualB:
		O003 A 1 Offset(204, 129) A_SetPitch(pitch+2)
		O003 A 1 Offset(196, 124) A_SetPitch(pitch-1)
		O003 A 1 Offset(187, 122) A_SetPitch(pitch-1)			Goto ShotVisualEnd
	ShotVisualC:
		O003 A 1 Offset(198, 130) A_SetPitch(pitch+1.5)
		O003 A 1 Offset(192, 124) A_SetPitch(pitch-1)
		O003 A 1 Offset(186, 123) A_SetPitch(pitch-.5)			Goto ShotVisualEnd
	ShotVisualD:
		O003 A 1 Offset(195, 126) A_SetPitch(pitch+1)
		O003 A 1 Offset(190, 124) A_SetPitch(pitch-.8)
		O003 A 1 Offset(186, 122) A_SetPitch(pitch-.2)			Goto ShotVisualEnd
	ShotVisualE:
		O003 A 1 Offset(203, 130) A_SetPitch(pitch+2)
		O003 A 1 Offset(196, 126) A_SetPitch(pitch-1)
		O003 A 1 Offset(188, 123) A_SetPitch(pitch-1)			Goto ShotVisualEnd
	ShotVisualF:
		O003 A 1 Offset(196, 129) A_SetPitch(pitch+1.3)
		O003 A 1 Offset(192, 125) A_SetPitch(pitch-1)
		O003 A 1 Offset(186, 122) A_SetPitch(pitch-.3)			Goto ShotVisualEnd
	ShotVisualG:
		O003 A 1 Offset(206, 132) A_SetPitch(pitch+2)
		O003 A 1 Offset(197, 128) A_SetPitch(pitch-1.5)
		O003 A 1 Offset(189, 124) A_SetPitch(pitch-.5)			Goto ShotVisualEnd
	ShotVisualH:
		O003 A 1 Offset(198, 127) A_SetPitch(pitch+1.6)
		O003 A 1 Offset(193, 125) A_SetPitch(pitch-1.1)
		O003 A 1 Offset(188, 123) A_SetPitch(pitch-.5)			Goto ShotVisualEnd
	ShotVisualEnd:
		O003 A 1 Offset(185, 121) A_JumpIfInventory(CanFireFaster,1,1)
		O003 A 0 A_Refire("FireLoop")
		Goto EndSequence
		
	EndSequence:
		TNT1 A 0 A_JumpIfInventory("CanRestoreAmmo",1,"RestoreAmmo") 
		Goto ReinitSequence
	RestoreAmmo:
		TNT1 A 0 A_GiveInventory("AENails",1)
		Goto ReinitSequence
	ReinitSequence:
		TNT1 A 0 A_JumpIfInventory("BurstsLeft",1,"InitSequence")
		Goto EndMetaSequence
	
	EndMetaSequence:
		TNT1 A 0 A_TakeInventory("ExtraRoundsLeft",		999)
		TNT1 A 0 A_TakeInventory("FireRoundsLeft",		999)
		TNT1 A 0 A_TakeInventory("ElectricRoundsLeft",	999)
		TNT1 A 0 A_TakeInventory("RailRoundsLeft",		999)
		TNT1 A 0 A_TakeInventory("ScatterRoundsLeft",	999)
		TNT1 A 0 A_TakeInventory("RoundsLeft",			999)
		Goto Hold
		
	Hold:
		TNT1 A 0 A_JumpIfInventory(CanFireNonStop,1,"Unhold")
		O003 A 1 Offset(185, 121)
		O003 A 0 A_Refire
	Unhold:
		O003 A 0
		Goto ReallyReady
		
	AltFire:
		TNT1 A 0 A_FireCustomMissile("MuzzleFlashOrange",0,0,4,7)
		TNT1 A 0 A_PlayWeaponSound("painkiller/weapon/smallchaingun/RocketShoot")
		TNT1 A 0 Bright A_FireCustomMissile("MCHBomb",0,1,0,0)
		TNT1 A 0 Bright A_FireCustomMissile("MCHBomb2",0,0,0,0)
		TNT1 A 0 Bright A_FireCustomMissile("MCHBomb3",0,0,0,0)
		TNT1 A 0 A_SetPitch(pitch-6)
		TNT1 A 0 A_GunFlash("AltFlash")
		D016 LMN 1 Bright
		D016 OPZ 1 Bright A_SetPitch(pitch+1)
		O003 AFF 1 A_SetPitch(pitch+1)
		O003 AHIJKL 4
		Goto ReallyReady
	AltFlash:
		O003 A 4
		O003 A 2
		Stop
	}
}

Actor ElectricSpawningPuff : BulletPuff 
{
	+NOINTERACTION
	+PUFFGETSOWNER
	-ALLOWPARTICLES
	+PUFFONACTORS
	DamageType "Electric"
	States
	{
	Spawn:
		TNT1 AAA 0 A_SpawnItemEx("PsychLightningSpark",0,0,0,frandom(0.3,2.0),0,frandom(1.5,-1.5),0,SXF_NOCHECKPOSITION)
		TNT1 AA 15 A_Explode(10,48)
		Stop
	}
}
Actor FireSpawningPuff : ElectricSpawningPuff 
{
	DamageType "Fire"
	States
	{
	Spawn:
		TNT1 AAA 0 A_SpawnItemEx("FTFlameTrail2",random(-7,7),random(-4,4),random(-4,2),0,0,frandom(0,1.25),0,SXF_NOCHECKPOSITION)
		TNT1 AA 10 A_Explode(8,32)
		Stop
	}
}

