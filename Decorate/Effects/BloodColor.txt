//================================================================
//================================================================
//
//	6.X New Blood Effects
//
//================================================================
//================================================================

/*	Currently available blood colors based on what's been used:

	Primary Color		Darker Color
	----------------------------------
	AEPutridGreen		AEPutridGreenD2
	AELimeGreen			AELimeGreenD2
	AEDarkRed			AEDarkRedD2
	AEGreenYellow		AEGreenYellowD2
	AEPoo				AEPooD2
	Black				Black
	Blue 				darkblue
	Brown 				AEPooD2
	DarkGreen 			AEDarkGreenD2
	DarkRed				AEDarkRedD2
	DimGray				AEDimGreyD2
	Gold				AEGoldD2
	GreenYellow			AEGreenYellowD2
	Green				DarkGreen
	Grey				DarkGrey
	LightSlateGray		DarkSlateGrey
	Orange				DarkOrange
	Purple				DarkViolet
	SeaShell2			AESeaShell2D2
	Snow3				Snow4
	White				Grey
	Yellow				AEDarkYellowD2
	AEBatshitRainbow	AEBatshitRainbowD2

================================================================================
						How to add new blood colors
================================================================================
1.	Add the new colors if they're not already defined in AEoDdat.pk3 -> 
	X11R6RGB.txt. Name it "AE<Color>".
	
2.	Make a duplicate entry called "AE<Color>D2" and assign half the RGB values.
	D2 stands for 'divide by 2', or half the color.
	
3.	Add "Color_<NameOfBloodColor>" to the enum below.
	This is only needed for the name itself -- do not define one for the D2
	since it's just there for adding extra tidbits and variance.
	
	Find Step 4+ down below.
*/

enum //TIDs ONLY. DO NOT USE IN THE TRANSLATIONS PROPERTY.
{
	Color_NULL				= 0, //
	Color_Red				= Color_NULL,
	Color_LimeGreen			= 1,
	Color_DarkRed			= 2,
	Color_GreenYellow		= 3,
	Color_Poo				= 4,
	Color_PutridGreen		= 5,
	Color_Black				= 6,
	Color_Blue				= 7,
	Color_Brown				= 8,
	Color_DarkGreen			= 9,
	Color_DimGray			= 10,
	Color_DimGrey			= Color_DimGray, //because it can be spelled either way.
	Color_Gold				= 11,
	Color_Green				= 12,
	Color_Grey				= 13,
	Color_Gray				= Color_Grey,
	Color_LightSlateGray	= 14,
	Color_LightSlateGrey	= Color_LightSlateGray,
	Color_Orange			= 15,
	Color_Purple			= 16,
	Color_SeaShell2			= 17,
	Color_Snow3				= 18,
	Color_White				= 19,
	Color_Yellow			= 20,
	Color_BatShitRainbow	= 21,
	//STEP 3 RIGHT HERE.
};

Actor MCBloodFXMain replaces Blood
{
	const float VelMul = 1.0;
	var int user_t;
	var float user_xv;
	var float user_yv;
	var float user_zv;
	//+MISSILE
	+NOBLOCKMAP
	+THRUACTORS
	+NOTIMEFREEZE
	+DONTSPLASH
	+NOTELESTOMP
	+NOTONAUTOMAP
	+PUFFGETSOWNER
	-ALLOWPARTICLES
	+NOINTERACTION
	+NOTELESTOMP
	Radius 1
	Height 1
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			if (A_CheckSight("Null") || A_CheckRange(2048,"Null"))
			{	
				Thing_ChangeTID(0,0);
				A_Remove(DefPtr,RMVF_EVERYTHING);	
			}
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			A_SetUserVar(user_xv,velx);
			A_SetUserVar(user_yv,vely);
			A_SetUserVar(user_zv,velz);
			
		}
		Goto SpawnBlood
	SpawnBlood:
		TNT1 A 2 
		{
			//A_FaceTarget;
			if (CountInv("BloodSpriteToken",Player1) == 2 || CountInv("BloodSpriteToken",Player1) <= 0)
			{	A_SpawnItemEx("MCBloodParticle",frandom(0,2),0,random(1,4),user_xv,user_yv,user_zv,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_ABSOLUTEVELOCITY|SXF_SETTRACER,0,user_t);	}
			if (CountInv("BloodSpriteToken",Player1) > 1)
			{	A_SpawnItemEx("MCBloodSprite",frandom(0,2),0,random(1,4),frandom(0,1.5),0,frandom(0.1,2.0),random(0,359),33|SXF_USEBLOODCOLOR,0);	}
			
		}
		TNT1 AA 0
		{
			if (CountInv("BloodSpriteToken",Player1) == 2 || CountInv("BloodSpriteToken",Player1) <= 0)
			{	
				A_SpawnItemEx("MCBloodParticle",frandom(0,2),0,random(1,4),user_xv,user_yv,user_zv,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_ABSOLUTEVELOCITY|SXF_SETTRACER,128,user_t);
			}
			if (CountInv("BloodSpriteToken",Player1) > 1)
			{	
				A_SpawnItemEx("MCBloodSprite",frandom(0,2),0,random(1,4),frandom(0,1.5),0,frandom(0.1,2.0),random(0,359),33|SXF_USEBLOODCOLOR,128);
			}
		}
		//TNT1 AA 0 A_SpawnItemEx("MCBloodParticle",frandom(0,2),0,random(1,4),frandom(0,1.5),0,frandom(0.1,2.0),random(0,359),33|SXF_USEBLOODCOLOR,128,user_t)
		Stop
	}
}

Actor MCBloodFXTrail : MCBloodFXMain
{
	States
	{
	SpawnBlood:
		TNT1 A 0
		{
			//A_FaceTarget;
			if (CountInv("BloodSpriteToken",Player1) == 2 || CountInv("BloodSpriteToken",Player1) <= 0)
			{	A_SpawnItemEx("MCBloodParticle",frandom(0,2),0,random(1,4),user_xv,user_yv,user_zv,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_ABSOLUTEVELOCITY|SXF_SETTRACER,0,user_t);	}
			if (CountInv("BloodSpriteToken",Player1) > 1)
			{	A_SpawnItemEx("MCBloodSprite",frandom(0,2),0,random(1,4),frandom(0,1.5),0,frandom(0.1,2.0),random(0,359),33|SXF_USEBLOODCOLOR,0);	}
			
		}
		Stop
	}
}

Actor MCBloodSprite
{
	var int user_t;
	Projectile
	+THRUACTORS
	+DONTSPLASH
	+NOTIMEFREEZE
	+NOTELESTOMP
	+NOTONAUTOMAP
	+PUFFGETSOWNER
	RenderStyle Translucent
	Radius 1
	Height 1
	Gravity 0.20
	Scale 0.3
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			A_SetScale(ScaleX*randompick(-1,1),ScaleY*randompick(-1,1));
			return A_Jump(256,"B11","B12","B13","B14","B21","B22","B23","B24","B31","B32","B33","B34");
		}
	B11:	X057 A 0 A_Jump(256,"B1Play")
	B12:	XA57 A 0 A_Jump(256,"B1Play")
	B13:	XB57 A 0 A_Jump(256,"B1Play")
	B14:	XC57 A 0 A_Jump(256,"B1Play")
	B1Play:
		"####" ABCDEF 2 A_FadeOut(0.05)
		"####" GHIJK 1 A_FadeOut(0.05)
		"####" LMNOPQRS 1 A_FadeOut(0.03)
		Wait
	B21:	X058 A 0 A_Jump(256,"B2Play")
	B22:	XA58 A 0 A_Jump(256,"B2Play")
	B23:	XB58 A 0 A_Jump(256,"B2Play")
	B24:	XC58 A 0 A_Jump(256,"B2Play")
	B2Play:
		"####" ABCDEF 2 A_FadeOut(0.05)
		"####" GHIJK 1 A_FadeOut(0.05)
		"####" LMNOPQR 1 A_FadeOut(0.03)
		Wait
	
	B31:	X059 A 0 A_Jump(256,"B3Play")
	B32:	XA59 A 0 A_Jump(256,"B3Play")
	B33:	XB59 A 0 A_Jump(256,"B3Play")
	B34:	XC59 A 0 A_Jump(256,"B3Play")
	B3Play:
		"####" ABCD 2 A_FadeOut(0.03)
		"####" EFGHIJ 1 A_FadeOut(0.04)
		"####" KLM 1 A_FadeOut(0.05)
		Wait
	}
}

Actor MCBloodParticle
{
	// Take note, enums are for integers only. Thus, flags and regular numbers
	// can fit inside them, but floats cannot.
	// Do not add color_ definitions here. The scope is inside the actor for a 
	// reason. To find out more on how enums work, see
	// http://zdoom.org/wiki/Constants#DECORATE_usage
	enum
	{
		PFlag = SPF_Relative,
		Lifetime = 		35,		//Self explanatory.
		Size1Min = 		10,		//Size of bigger particle
		Size1Max = 		20,
		Size2Min = 		5,		//Size of smaller particle
		Size2Max = 		10,
		AOff = 			15,		//Angle
		MaxCount1 =		3,		//Max number of big particles
		MaxCount2 =		9,		//Max number of smaller particles
	};
	//Ones without the '2' at the end are for the big particles.
	//Those with the '2' are for the small particles. The default is
	//just to copy them.
	const float XOffMin1 = 		1.0;	const float XOffMin2 = 		XOffMin1;
	const float XOffMax1 = 		-1.0;	const float XOffMax2 = 		XOffMax1;
	const float XVelMin1 = 		0.5;	const float XVelMin2 = 		XVelMin1;
	const float XVelMax1 = 		3.0;	const float XVelMax2 = 		XVelMax1;
	const float XAccMin1 = 		-0.01;	const float XAccMin2 = 		XAccMin1;
	const float XAccMax1 = 		-0.01;	const float XAccMax2 = 		XAccMax1;
	const float ZOffMin1 = 		-1.0;	const float ZOffMin2 = 		ZOffMin1;
	const float ZOffMax1 = 		1.0;	const float ZOffMax2 = 		ZOffMax1;
	const float ZVelMin1 = 		-0.5;	const float ZVelMin2 = 		ZVelMin1;
	const float ZVelMax1 = 		2.5;	const float ZVelMax2 = 		ZVelMax1;
	const float ZAccMin1 = 		-0.36;	const float ZAccMin2 = 		ZAccMin1;
	const float ZAccMax1 = 		-0.48;	const float ZAccMax2 = 		ZAccMax1;
	const float StartAlpha1 =	1.0;	const float StartAlpha2 =	StartAlpha1;
	const float FadeMin1 =		0.04;	const float FadeMin2 =		FadeMin1;
	const float FadeMax1 =		0.06;	const float FadeMax2 =		FadeMax1;
	const float PitchOff =		5.0;
	// Multiplies the velocity of the gib-spawned blood by this much. 
	// Has no effect on bullet spawned blood, etc.
	const float VelMul = 0.75;
	const float YVelMul = VelMul;
	const float VelAccel = -0.15;
	var int user_t;
	var int user_count;
	var float user_vel;
	var float user_angle;
	var float user_pitch;
	Projectile
	+THRUACTORS
	+DONTSPLASH
	+NOTIMEFREEZE
	+NOTELESTOMP
	+NOTONAUTOMAP
	+PUFFGETSOWNER
	//Translation "0:255=%[0,0,0]:[1,0,0]"
	RenderStyle Translucent
	Radius 1
	Height 1
	Gravity 0.20
	Scale 0.3
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			//A_FaceMovementDirection;
			A_SetUserVarFloat(user_vel, sqrt((velx * velx) + (vely * vely)) * VelMul);
			A_SetUserVarFloat(user_pitch, pitch);
			A_SetUserVarFloat(user_angle, angle);
		}
	Particle:
	//Step 4 
	//	Copy/paste one of these except for the very last one and rename it.
	//	Keep it to the same name as the variable for both the variable AND jump 
	//	state itself. Trust me, this thing's more fragile than a glass chicken
	//	during one of Godzilla's PMSing moments.
		TNT1 A 0 
		{	
			if (A_CheckRange(2048,"Null"))			{ return state("Null"); }
			
			//Remove when done debugging
			//return state("Color_Red");
			
			if (user_t == Color_Red) 				{ return state("Color_Red"); }
			else if(user_t == Color_LimeGreen) 		{ return state("Color_LimeGreen"); }
			else if(user_t == Color_DarkRed) 		{ return state("Color_DarkRed"); }
			else if(user_t == Color_GreenYellow) 	{ return state("Color_GreenYellow"); }
			else if(user_t == Color_Poo) 			{ return state("Color_Poo"); }
			else if(user_t == Color_PutridGreen) 	{ return state("Color_PutridGreen"); }
			else if(user_t == Color_Black) 			{ return state("Color_Black"); }
			else if(user_t == Color_Blue) 			{ return state("Color_Blue"); }
			else if(user_t == Color_Brown) 			{ return state("Color_Brown"); }
			else if(user_t == Color_DarkGreen) 		{ return state("Color_DarkGreen"); }
			else if(user_t == Color_DimGray) 		{ return state("Color_DimGray"); }
			else if(user_t == Color_Gold) 			{ return state("Color_Gold"); }
			else if(user_t == Color_GreenYellow) 	{ return state("Color_GreenYellow"); }
			else if(user_t == Color_Green) 			{ return state("Color_Green"); }
			else if(user_t == Color_Grey) 			{ return state("Color_Grey"); }
			else if(user_t == Color_LightSlateGray) { return state("Color_LightSlateGray"); }
			else if(user_t == Color_Purple) 		{ return state("Color_Purple"); }
			else if(user_t == Color_SeaShell2) 		{ return state("Color_SeaShell2"); }
			else if(user_t == Color_Snow3) 			{ return state("Color_Snow3"); }
			else if(user_t == Color_White) 			{ return state("Color_White"); }
			else if(user_t == Color_Yellow) 		{ return state("Color_Yellow"); }
			else {	return state("Color_Red");	}
			
			return state("Color_Red");
		}
	//Top: 		AE<Color>
	//Bottom:	AE<Color>D2
	//	Now, copy one of these and paste them, following how I did it.
	//	Step 5 is further down. One more thing needs copying.
	Color_Red:
		TNT1 A 0
		{							//ONLY touch the name/hex color, DO NOT touch anything else!
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Red",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("DarkRed",			PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_LimeGreen:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("AELimeGreen",		PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AELimeGreenD2",		PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle	
	Color_DarkRed:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("AEDarkRed",			PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AEDarkRedD2",		PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_GreenYellow:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("AEGreenYellow",		PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AEGreenYellowD2",	PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Poo:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("AEPoo",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AEPooD2",			PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_PutridGreen:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("AEPutridGreen",		PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AEPutridGreenD2",	PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Black:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Black",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("Black",				PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Blue:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Blue",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("DarkBlue",			PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Brown:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Brown",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AEPooD2",			PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_DarkGreen:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("DarkGreen",			PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AEDarkGreenD2",		PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_DimGray:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("DimGray",			PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AEDimGrayD2",		PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Gold:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Gold",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AEGoldD2",			PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Green:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Green",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("DarkGreen",			PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Grey:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Grey",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("DarkGrey",			PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_LightSlateGray:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("LightSlateGray",		PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("DarkSlateGray",		PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Purple:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Purple",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("DarkViolet",			PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_SeaShell2:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Seashell2",			PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AESeaShellD2",		PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Snow3:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Snow3",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("Snow4",				PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_White:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("White",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("Grey",				PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_Yellow:
		TNT1 A 0
		{
			A_SetPitch(user_pitch + frandom(-AOff, AOff));
			if (user_count <= MaxCount1)	{ A_SpawnParticle("Yellow",				PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			else							{ A_SpawnParticle("AEDarkYellowD2",		PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			A_SetUserVar(user_count, user_count + randompick(1,1,1,2,3));	if (user_count >= (MaxCount1 + MaxCount2))	{ return state("Check2"); }	return state(0);
		}		
		Loop
		//Goto Particle
	Color_BatShitRainbow:
		TNT1 A 0
		{
			//if (user_count <= MaxCount1)	{ A_SpawnParticle("Red",						PFlag, Lifetime, random(Size1Min,Size1Max), frandom(-AOff, AOff), frandom(XOffMin1,XOffMax1), 0, frandom(ZOffMin1,ZOffMax1), (cos(-pitch) * user_vel) + (frandom(XVelMin1,XVelMax1)), frandom(XVelMin1,XVelMax1) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin1,ZVelMax1)), frandom(XAccMin1,XAccMax1), 0, frandom(ZAccMin1,ZAccMax1), StartAlpha1, frandom(FadeMin1,FadeMax1)); }
			//else							{ A_SpawnParticle("",						PFlag, Lifetime, random(Size2Min,Size2Max), frandom(-AOff, AOff), frandom(XOffMin2,XOffMax2), 0, frandom(ZOffMin2,ZOffMax2), (cos(-pitch) * user_vel) + (frandom(XVelMin2,XVelMax2)), frandom(XVelMin2,XVelMax2) * randompick(-1,1), ((sin(pitch) * VelZ) * VelMul) + (frandom(ZVelMin2,ZVelMax2)), frandom(XAccMin2,XAccMax2), 0, frandom(ZAccMin2,ZAccMax2), StartAlpha2, frandom(FadeMin2,FadeMax2)); }
			//A_SetUserVar(user_count, user_count + 1);
			//if (user_count >= (MaxCount1 + MaxCount2))	{	return state("Check2");	}
			//return state(0);
			return state("Check2");
		}		
		//Loop
		Goto Check2
	WTF:
		//To be determined...
	Check2:
		TNT1 A 0
		Stop
	}
}

//Step 5
//	Copy/paste one of these and rename the AEBlood<THIS SECTION> to your color name.
//	Also rename Color_<Name> too.
//
//	Once that's finished, give your monster both BloodColor and BloodType of the name
// 	and actor to spawn. Then you should be finished unless you change the gib colors.

//	More on that later.
Actor AEBloodLimeGreen 		: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_LimeGreen)	Goto Super::SpawnBlood } }

Actor AEBloodGreenYellow	: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_GreenYellow)	Goto Super::SpawnBlood } }

Actor AEBloodPoo			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Poo)	Goto Super::SpawnBlood } }

Actor AEBloodPutridGreen 	: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_PutridGreen)	Goto Super::SpawnBlood } }

Actor AEBloodBlack			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Black)	Goto Super::SpawnBlood } }

Actor AEBloodBrown			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Brown)	Goto Super::SpawnBlood } }

Actor AEBloodBlue			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Blue)	Goto Super::SpawnBlood } }

Actor AEBloodDarkGreen 		: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_DarkGreen)	Goto Super::SpawnBlood } }

Actor AEBloodDimGray		: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_DimGray)	Goto Super::SpawnBlood } }

Actor AEBloodGold			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Gold)	Goto Super::SpawnBlood } }

Actor AEBloodGreen 			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Green)	Goto Super::SpawnBlood } }

Actor AEBloodGrey 			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Grey)	Goto Super::SpawnBlood } }

Actor AEBloodLightSlateGray : MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_LightSlateGray)	Goto Super::SpawnBlood } }

Actor AEBloodOrange 		: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Orange)	Goto Super::SpawnBlood } }

Actor AEBloodPurple			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Purple)	Goto Super::SpawnBlood } }

Actor AEBloodSeaShell2		: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_SeaShell2)	Goto Super::SpawnBlood } }

Actor AEBloodSnow3 			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Snow3)	Goto Super::SpawnBlood } }

Actor AEBloodWhite 			: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_White)	Goto Super::SpawnBlood } }

Actor AEBloodYellow 		: MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_Yellow)	Goto Super::SpawnBlood } }

Actor AEBloodBatShitRainbow : MCBloodFXMain	{ States { Spawn:
TNT1 A 0 NoDelay A_SetUserVar(user_t, Color_BatShitRainbow)	Goto Super::SpawnBlood } }


//It's going to be impossible to translate blood splatters via particles directly
//so just have it spawn the ordinary actor instead.
Actor MCBloodSplatter : MCBloodSprite replaces BloodSplatter
{ 
/*
	States
	{
	Spawn:
		TNT1 A 0
		Goto "Super::Sprite"
	} */
}

Actor GibBloodSmall : MCBloodFXTrail 	{}
Actor GibBloodTrailMediumSize	: MCBloodFXTrail	{}

//****************************************************************
//****************************************************************
//
//	v5 Old Blood Effects
//
//****************************************************************
//****************************************************************

Actor NewBlood : Blood //replaces Blood  //Blood as in v5.03, kept for compatability
{
	+DONTSPLASH
	+DONTBLAST
	+NOTELESTOMP
	+NOTONAUTOMAP
	Scale 0.15
	Gravity 0.44
	States
	{
	Spawn:
		BLD1 A 1
//		TNT1 AAA 0 A_SpawnItemEx("ExtraBlood",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,1)
		TNT1 AAA 0 A_SpawnItemEx("ExtraBlood",random(3,-3),random(3,-3),random(3,-3),1,0,0,random(1,359),GibFlags)
		BLD1 ABCD 6
		Stop
	}
}

Actor ExtraBlood : NewBlood
{
	Scale 0.09
	States
	{
	Spawn:
		TNT1 A 0
		BLD1 A 1 ThrustThingZ(0,random(5,12),0,1)
		BLD1 A 5
		BLD1 ABCD 6
		Stop
	}
}

//===============================================================================
//===============================================================================
//
//	A_TossGib with blood trails
//
//===============================================================================
//===============================================================================

Actor NewMeat replaces Meat
{
	var int user_short;
	var int user_time;
	var int user_t;
	var int user_w;
	+THRUACTORS
	-NOLIFTDROP
	+DROPOFF
	+NOTELEPORT
	+NOTELESTOMP
	+NOTONAUTOMAP
	-NOGRAVITY
	+BOUNCEONWALLS
	+BOUNCEONFLOORS
	Radius 6
	Height 5
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			if(user_t < GibTID)	{	A_SetUserVar(user_w, user_t);	}
			else				{	A_SetUserVar(user_w, user_t - GibTID);	}
			
			return A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		}
		MEAT ABCDEFGHIJLKMNOPQRST 0 { return state("Play1"); }
	Play1:
		"####" "##" 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
		"####" "#" 0 A_CheckFloor("md1")
		"####" "#" 0 A_SetUserVar(user_time,user_time+1)
		"####" "#" 0 A_JumpIf(user_time < 87,"Play1")
// when the gib crashes:
	md1:
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		"####" "#" 350 A_JumpIf(user_t >= GibTID,1)
		"####" "#" 1 A_FadeOut
		Wait
	}
}

//Actor NewMeatGreen	: NewMeat 	{ States { Preplay1:	TNT1 A 0 A_SetUserVar(user_w,Color_Green)		Goto Super::Preplay2 } }
//Actor NewMeatOrange	: NewMeat 	{ States { Preplay1:	TNT1 A 0 A_SetUserVar(user_w,Color_Orange)		Goto Super::Preplay2 } }
//Actor NewMeatGray 	: NewMeat 	{ States { Preplay1:	TNT1 A 0 A_SetUserVar(user_w,Color_Gray)		Goto Super::Preplay2 } }
//Actor NewMeatBlue	: NewMeat 	{ States { Preplay1:	TNT1 A 0 A_SetUserVar(user_w,Color_Blue)		Goto Super::Preplay2 } }
//Actor NewMeatPurple	: NewMeat 	{ States { Preplay1:	TNT1 A 0 A_SetUserVar(user_w,Color_Purple)		Goto Super::Preplay2 } }

Actor NewJunk : Junk replaces Junk
{
	+NOTELESTOMP
	+THRUACTORS
	+NOTONAUTOMAP
}


//***********************************
Actor GreenGib
{
	+NOCLIP
	+NOTELESTOMP
	+NOTONAUTOMAP
	+NOINTERACTION
	RenderStyle None
	Radius 1
	Height 1
	Translation "32:47=123:127", "169:191=112:127"
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_CheckSight("Spawn2")
		TNT1 AA 0 A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid)
		Stop
	Spawn2:
		TNT1 A 0 A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid)
		Stop
	}
}

Actor GreenGibSp : GreenGib
{
	Translation "32:47=123:127", "169:191=112:127"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_CheckSight("Spawn2")
		TNT1 AAAAAAAA 0 
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
		}
		Stop
	Spawn2:
		TNT1 AA 0
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
		}
		Stop
	}
}

//***********************************
Actor BlueGib
{
	+NOTELESTOMP
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	Radius 1
	Height 1
	Translation "32:47=204:207", "169:191=196:205"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		/*
		{
			if (!A_CheckSight("Null"))
			{
				A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
				A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			}
		} */
		TNT1 A 0 A_CheckSight("Spawn2")
		TNT1 AA 0 A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid)
		Stop
	Spawn2:
		TNT1 A 0
		Stop
	}
}

Actor BlueGibSp : BlueGib
{
	Translation "32:47=204:207", "169:191=196:205"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_CheckSight("Spawn2")
		TNT1 AAAAAAAA 0 
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
		}
		Stop
	Spawn2:
		TNT1 AA 0
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
		}
		Stop
	}
}


//***********************************
Actor OrangeGib
{
	+NOCLIP
	+NOTELESTOMP
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	Radius 1
	Height 1
	Translation "32:47=219:223", "169:191=213:223"
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_CheckSight("Spawn2")
		TNT1 A 0 A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid)
		TNT1 A 0 A_TossGib
		Stop
	Spawn2:
		TNT1 A 0 A_TossGib
		Stop
	}
}

Actor OrangeGibSp : GreenGib
{
	Translation "32:47=219:223", "169:191=213:223"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_CheckSight("Spawn2")
		TNT1 AAAAAAAA 0 
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
		}
		Stop
	Spawn2:
		TNT1 AA 0
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
		}
		Stop
	}
}


//***********************************
Actor GrayGib
{
	+NOCLIP
	+NOTELESTOMP
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	Radius 1
	Height 1
	Translation "32:47=104:111", "169:191=80:106"
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_CheckSight("Spawn2")
		TNT1 AA 0 A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid)
		Stop
	Spawn2:
		TNT1 A 0 A_TossGib
		Stop
	}
}

Actor GrayGibSp : BlueGib
{
	Translation "32:47=104:111", "169:191=80:106"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_CheckSight("Spawn2")
		TNT1 AAAAAAAA 0 
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
		}
		Stop
	Spawn2:
		TNT1 AA 0
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),33,0,tid);
		}
		Stop
	}
}

//***********************************
Actor PurpleGib
{
	+NOCLIP
	+NOTELESTOMP
	+NOINTERACTION
	+NOTONAUTOMAP
	RenderStyle None
	Radius 1
	Height 1
	Translation "32:47=254:254", "169:191=253:253"
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_CheckSight("Spawn2")
		TNT1 A 0 A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid)
		TNT1 A 0 A_TossGib
		Stop
	Spawn2:
		TNT1 A 0 A_TossGib
		Stop
	}
}

Actor PurpleGibSp : GreenGib
{
	Translation "32:47=254:254", "169:191=253:253"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_CheckSight("Spawn2")
		TNT1 AAAAAAAA 0 
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),1,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),1,0,tid);
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),32,0,tid);
		}
		Stop
	Spawn2:
		TNT1 AA 0
		{
			A_SpawnItemEx("NewMeat",0,0,random(10,40),random(-7,7),random(-7,7),random(1,16),random(1,359),1,0,tid);
			A_TossGib;
		}
		TNT1 A 0 
		{
			A_SpawnItemEx("BloodGib3",0,0,0,random(-7,7),0,0,random(1,359),1,0,tid);
			A_SpawnItemEx("BloodGib4",0,0,0,random(-7,7),0,0,random(1,359),1,0,tid);
		}
		Stop
	}
}

//===============================================================================
//===============================================================================
//
//	Hexen2 style Gibs
//
//===============================================================================
//===============================================================================

Actor SmallGibDropper
{
	const int RAdd = 8;
	var int user_t;
	+NOTELESTOMP
	+NOTONAUTOMAP
	+NOINTERACTION
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			if (A_CheckSight("Null"))
			{	return state("Simple");	}
		
			A_SpawnItemEx("HGib1Small",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t);
			A_SpawnItemEx("HGib2Small",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t);
			A_SpawnItemEx("HGib3Small",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t);
			return state(0);
		}
		Stop
	Simple:
		TNT1 A 0 A_SpawnItemEx("HGib1Small",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	}
}

Actor HGib1Small
{
	var int user_t;
	var int user_w;
	Projectile
	+DOOMBOUNCE
	-NOGRAVITY
	-NOBLOCKMAP
	+THRUACTORS
	+NOTELESTOMP
	BounceFactor 0.45
	Speed 4
	Scale 0.07
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			A_SetScale(ScaleX*randompick(-1,1),ScaleY);
			A_SetUserVar(user_w,user_t);
			if (user_w >= GibTID)
			{	A_SetUserVar(user_w, user_t - GibTID);	}
			A_ChangeVelocity(0,0,random(3,15));
		}
		Goto Play
	Play:
		GIB7 AABBCCDDEEFFGGHHIIJJKKLLMM 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
		Goto Death
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB7 M random(300,400) A_JumpIf(user_t >= GibTID,1) //Skip the duration.
		GIB7 M 2 A_FadeOut
		Wait
	}
}


Actor HGib1SmallMirr : HGib1Small
{
	Speed 5
	States
	{
	Play:
		GIB7 NNOOPPQQRRSSTTUUVVWWXXYYZZ 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
		Goto Death
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB7 Z random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB7 Z 2 A_FadeOut
		Wait
	}
}

Actor HGib2Small : HGib1Small
{
	Speed 6
	States
	{
	Play:
		GIB8 AABBCCDDEEFFGGHHIIJJKKLLMM 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
		Goto Death
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB8 M random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB8 M 2 A_FadeOut
		Wait
	}
}

Actor HGib2SmallMirr : HGib1Small
{
	Speed 3
	States
	{
	Play:
		GIB8 NNOOPPQQRRSSTTUUVVWWXXYYZZ 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB8 Z random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB8 Z 2 A_FadeOut
		Wait
	}
}

Actor HGib3Small : HGib1Small
{
	Speed 2
	States
	{
	Play:
		GIB9 AABBCCDDEEFFGGHHIIJJKKLL 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB9 L random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB9 L 2 A_FadeOut
		Wait
	}
}

Actor HGib3SmallMirr : HGib1Small
{
	Speed 4
	States
	{
	Play:
		GIB8 NNOOPPQQRRSSTTUUVVWWXXYYZZ 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB9 Z random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB9 Z 2 A_FadeOut
		Wait
	}
}
   

//***************************************************
//***************************************************
Actor GibDropper
{
	const int RAdd = 8;
	var int user_t;
	+NOINTERACTION
	+NOTONAUTOMAP
	+NOTELESTOMP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			if (A_CheckSight("Null"))
			{	return state("Simple");	}
		
			A_SpawnItemEx("HGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t);
			A_SpawnItemEx("HGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t);
			A_SpawnItemEx("HGib3",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t);
			return state(0);
		}
		Stop
	Simple:
		TNT1 A 0 A_SpawnItemEx("HGib1Small",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	}
}

Actor HGib1
{
	var int user_t;
	var int user_w;
	Projectile
	-NOGRAVITY
	-NOBLOCKMAP
	+DOOMBOUNCE
	+THRUACTORS
	+NOTELESTOMP
	BounceFactor 0.4
	Speed 4
	Scale 0.1
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			A_SetScale(ScaleX*randompick(-1,1),ScaleY);
			A_SetUserVar(user_w,user_t);
			if (user_w >= GibTID)
			{	A_SetUserVar(user_w, user_t - GibTID);	}
			A_ChangeVelocity(0,0,random(5,18));
		}
	Play:
		GIB7 AABBCCDDEEFFGGHHIIJJKKLLMM 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB7 M random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB7 M 2 A_FadeOut
		Wait
	}
}
Actor HGib1Mirr : HGib1
{
	Speed 5
	States
	{
	Play:
		GIB7 NNOOPPQQRRSSTTUUVVWWXXYYZZ 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB7 Z random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB7 Z 2 A_FadeOut
		Wait
	}
}

Actor HGib2 : HGib1
{
	Speed 6
	States
	{
	Play:
		GIB8 AABBCCDDEEFFGGHHIIJJKKLLMM 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB8 M random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB8 M 2 A_FadeOut
		Wait
	}
}


Actor HGib2Mirr : HGib1
{
	Speed 5
	States
	{
	Play:
		GIB8 NNOOPPQQRRSSTTUUVVWWXXYYZZ 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB8 Z random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB8 Z 2 A_FadeOut
		Wait
	}
}

Actor HGib3 : HGib1
{
	Speed 6
	States
	{
	Play:
		GIB9 AABBCCDDEEFFGGHHIIJJKKLL 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB9 L random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB9 L 2 A_FadeOut
		Wait
	}
}

Actor HGib3Mirr : HGib1
{
	Speed 5
	States
	{
	Play:
		GIB9 MMNNOOPPQQRRSSTTUUVVWWXX 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		GIB9 X random(300,400) A_JumpIf(user_t >= GibTID,1)
		GIB9 X 2 A_FadeOut
		Wait
	}
}

//===============================================================================
//===============================================================================
//
//	Quake gibs
//
//===============================================================================
//===============================================================================

Actor QuakeGibDropper
{
	const int RAdd = 8;
	var int user_t;
	var int user_w;
	+NOINTERACTION
	+NOTONAUTOMAP
	+NOTELESTOMP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			if (A_CheckSight("Null"))
			{	return state("Simple");	}
			return A_Jump(180,"Drop2","Drop3","Drop4");
		}
		TNT1 AAA 0 A_SpawnItemEx("Gib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("Gib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("GibTorso",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Drop2:
		TNT1 AAA 0 A_SpawnItemEx("Gib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("Gib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("GibTorso",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Drop3:
		TNT1 AA 0 A_SpawnItemEx("Gib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AAA 0 A_SpawnItemEx("Gib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("GibTorso",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Drop4:
		TNT1 AA 0 A_SpawnItemEx("Gib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("Gib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("GibTorso",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Simple:
		TNT1 A 0 A_SpawnItemEx("Gib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	}
}
//***********************************
Actor Gib1
{
	var int user_t;
	var int user_w;
	Projectile
	-NOGRAVITY
	-NOBLOCKMAP
	-NOLIFTDROP
	-SOLID
	+DROPOFF
	+THRUACTORS
	+DOOMBOUNCE
	+NOTELESTOMP
	BounceFactor 0.45
	Speed 8
	Scale 0.34
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			A_SetScale(ScaleX*randompick(-1,1),ScaleY);
			A_SetUserVar(user_w,user_t);
			if (user_w >= GibTID)
			{	A_SetUserVar(user_w, user_t - GibTID);	}
			A_ChangeVelocity(0,0,random(5,18));
		}
		Goto Play
	Play:
		Q99B BBCCDDEEFFGGHHIIJJKKLLMMNN 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		Q99B N random(300,400) A_JumpIf(user_t >= GibTID,1)
		Q99B N 2 A_FadeOut
		Wait
	}
}

Actor GibTorso : Gib1
{
	Speed 2
	Scale 0.31
	States
	{
	Play:
		Q99C AABBCCDDEEFF 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		Q99C F random(300,400) A_JumpIf(user_t >= GibTID,1)
		Q99C F 2 A_FadeOut
		Wait
	}
}

Actor Gib2 : Gib1
{
	Speed 5
	Scale 0.26
	States
	{
	Play:
		Q99D AABBCCDDEE 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		Q99D F random(300,400) A_JumpIf(user_t >= GibTID,1)
		Q99D F 2 A_FadeOut
		Wait
	}
}

//==================================================================
Actor QuakeSmallGibDropper
{
	const int RAdd = 8;
	var int user_t;
	+NOTONAUTOMAP
	+NOINTERACTION
	+NOTELESTOMP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetUserVar(user_t,tid)
		TNT1 A 0 Thing_ChangeTID(0,0)
		TNT1 A 0 A_CheckSight("Simple")
		TNT1 A 0 A_Jump(180,"Drop2","Drop3","Drop4")
		TNT1 AAA 0 A_SpawnItemEx("SmallGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("SmallGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("SmallGibTorso",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Drop2:
		TNT1 AAA 0 A_SpawnItemEx("SmallGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("SmallGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("SmallGibTorso",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Drop3:
		TNT1 AA 0 A_SpawnItemEx("SmallGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AAA 0 A_SpawnItemEx("SmallGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("SmallGibTorso",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Drop4:
		TNT1 AA 0 A_SpawnItemEx("SmallGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("SmallGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("SmallGibTorso",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop

	Simple:
		TNT1 A 0 A_SpawnItemEx("Gib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	}
}

//***********************************
Actor SmallGib1 : Gib1
{
	Speed 8
	Scale 0.27
	States
	{
	Play:
		Q99B BBCCDDEEFFGGHHIIJJKKLLMMNN 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		Q99B N 350 A_JumpIf(user_t >= GibTID,1)
		Q99B N 2 A_FadeOut
		Wait
	}
}

Actor SmallGibTorso : SmallGib1 
{
	Speed 2
	Scale 0.23
	States
	{
	Play:
		Q99C AABBCCDDEEFF 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		Q99C F 380 A_JumpIf(user_t >= GibTID,1)
		Q99C F 2 A_FadeOut
		Wait
	}
}


Actor SmallGib2 : SmallGib1 
{
	Speed 5
	Scale 0.19
	States
	{
	Play: //ThrustThingZ(0,random(10,60),0,1)
		Q99D AABBCCDDEE 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		Q99D F 366 A_JumpIf(user_t >= GibTID,1)
		Q99D F 2 A_FadeOut
		Wait
	}
}


//===============================================================================
//===============================================================================
//
//	Blood style gibs
//
//===============================================================================
//===============================================================================
Actor BloodGibDropper
{
	const int RAdd = 5;
	var int user_t;
	+NOINTERACTION
	+NOTONAUTOMAP
	+NOTELESTOMP
	RenderStyle None
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			return A_CheckSight("Simple");
		}
		TNT1 A 0 A_Jump(180,"Drop2","Drop3","Drop4")
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("NewMeat",0,0,0,random(1,2)*velx+random(-7,7),random(1,2)*vely+random(-7,7),random(1,2)*velz+random(1,14),random(1,359),GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AAA 0 A_SpawnItemEx("BloodGib3",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("BloodGib4",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Drop2:
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("NewMeat",0,0,0,random(1,2)*velx+random(-7,7),random(1,2)*vely+random(-7,7),random(1,2)*velz+random(1,14),random(1,359),GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib3",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib4",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Drop3:
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("NewMeat",0,0,0,random(1,2)*velx+random(-7,7),random(1,2)*vely+random(-7,7),random(1,2)*velz+random(1,14),random(1,359),GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("BloodGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AAA 0 A_SpawnItemEx("BloodGib3",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib4",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Drop4:
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("NewMeat",0,0,0,random(1,2)*velx+random(-7,7),random(1,2)*vely+random(-7,7),random(1,2)*velz+random(1,14),random(1,359),GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("BloodGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AA 0 A_SpawnItemEx("BloodGib3",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 AAA 0 A_SpawnItemEx("BloodGib4",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	Simple:
		TNT1 AAAA 0 A_SpawnItemEx("NewMeat",0,0,0,random(1,2)*velx+random(-7,7),random(1,2)*vely+random(-7,7),random(1,2)*velz+random(1,14),random(1,359),GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("BloodGib1",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("BloodGib2",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("BloodGib3",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		TNT1 A 0 A_SpawnItemEx("BloodGib4",0,0,0,velx*random(1,2)+random(-RAdd,RAdd),vely*random(1,2)+random(-RAdd,RAdd),velz*random(1,2)+random(-RAdd,RAdd),0,GibFlags,0,user_t)
		Stop
	}
}

//***************************************
Actor BloodGib1		
{
	var int user_t;
	var int user_c;
	var int user_w;
	Projectile
	+THRUACTORS
	-NOGRAVITY
	+BOUNCEONCEILINGS
	+BOUNCEONWALLS
	+NOTELESTOMP
	Scale 0.6
	Radius 6
	Height 5
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetUserVar(user_t,tid);
			Thing_ChangeTID(0,0);
			A_SetScale((ScaleX-(ScaleX*frandom(-0.10,0.10)))*randompick(-1,1),ScaleY-(ScaleY*frandom(-0.10,0.10)));
			A_SetUserVar(user_w,user_t);
			if(user_w >= GibTID)
			{	A_SetUserVar(user_w, user_t - GibTID);	}
			ThrustThingZ(0,random(12,80),0,1);
		}
		Goto Looping
	Looping:
		ANYG AABBCCDD 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
		"####" "#" 0 A_SetUserVar(user_c,user_c+1)
		"####" "#" 0 A_JumpIf(user_c > 5,"Death")
		Loop
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		ANYG E random(300,600) A_JumpIf(user_t >= GibTID,1)
		ANYG E 1 A_FadeOut
		Wait
	}
}

Actor BloodGib2 : BloodGib1		//eye
{
	Scale 0.4
	Speed 7
	States
	{
	Looping:
		ANYG FFGGHHII 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
		"####" "#" 0 A_SetUserVar(user_c,user_c+1)
		"####" "#" 0 A_JumpIf(user_c > 5,"Death")
		Loop
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		ANYG J random(300,600) A_JumpIf(user_t >= GibTID,1)
		ANYG J 1 A_FadeOut
		Wait
	}
}

Actor BloodGib3 : BloodGib1		//liver
{
	Scale 0.6
	Speed 7
	States
	{
	Looping:
		ANYG KKLLMMNN 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
		"####" "#" 0 A_SetUserVar(user_c,user_c+1)
		"####" "#" 0 A_JumpIf(user_c > 5,"Death")
		Loop
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		ANYG O random(300,600) A_JumpIf(user_t >= GibTID,1)
		ANYG O 1 A_FadeOut
		Wait
	}
}

Actor BloodGib4 : BloodGib1		//bloodthing
{
	Scale 0.6
	Speed 7
	States
	{
	Looping:
		ANYG PPQQRRSS 2 
		{
			A_FaceMovementDirection;
			if (!A_CheckSight("Null"))
			{	A_SpawnItemEx("GibBloodSmall",0,0,0,velx,vely,velz,0,SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPITCH|SXF_TRANSFERTRANSLATION|SXF_USEBLOODCOLOR,0,user_w);	}
		}
		"####" "#" 0 A_SetUserVar(user_c,user_c+1)
		"####" "#" 0 A_JumpIf(user_c > 5,"Death")
		Loop
	Death:
		"####" "#" 0 A_JumpIfInventory("ShortGibToken",1,2,AAPTR_PLAYER1)
		ANYG T random(300,600) A_JumpIf(user_t >= GibTID,1)
		ANYG T 1 A_FadeOut
		Wait
	}
}