#library "dropsys"
#include "zcommon.acs"

str Weaps[10][32][5]=

	{	// behold, the first 3d array I encounter in ZDoom! [Ms]
	
		// on the first level, there are 10 weapon slots
		// on the second level, there are 32 possible weapons for each slot
		// on the third level, each weapon is characterized with 4 strings:
		// own name, dropper name, multi-wield counter, multi-wield drop checker
		
		
	
		// slot 1, special stuff
		
		{{"Empty","Nothing",						"Nothing","Nothing"},
		// It's important for the line above to contain the same thing in second
		// ("nothing") that is written everywhere else to signify nothing.
		
		{"AEoDHandGrenade","HandGrenadeDrop",		"Nothing","Nothing"},	// 6019
		{"AEoDStickyMine","StickyMineDrop",			"Nothing","Nothing"},	// 6023
		{"AEoDNecromanticBoneStaff","BoneStaffDrop","Nothing","Nothing"},// 6035
		{"AEoDTNTBunny","TNTBunnyDrop",				"Nothing","Nothing"},	// 6050
		{"AEoDTNT","TNTDrop",						"Nothing","Nothing"},	// 6121
		{"AEoDRemoteDetonator","RemoteDetonatorDrop","Nothing","Nothing"},// 6119
		{"AEoDProxDetonator","ProxDetonatorDrop",	"Nothing","Nothing"},	// 6120
		{"AEoDGlyph","GlyphDrop",					"Nothing","Nothing"},	// 6150
		{"AEoDJackBomb","JackBombDrop",				"Nothing","Nothing"},	// 6151
		{"AEoDPortalGun","PortalGunDrop",			"Nothing","Nothing"},
		{"AEoDLemonNade","LemonNadeDrop",			"Nothing","Nothing"}},
		
		// slot 2, melee weapons
		
		{{"Empty","Nothing",						"Nothing","Nothing"},
		{"AEoDChainsaw","ChainsawDrop",				"Nothing","Nothing"},	// 6065
		{"AEoDKnife","KnifeDrop",					"Nothing","Nothing"},	// 6012
		{"AEoDMedievalAxe","MedievalAxeDrop","AEoDAxeCount","AxeDropCheck"},// 6010
		{"AEoDGauntlets","GauntletsDrop",			"Nothing","Nothing"},	// 6029
		{"AEoDKatana","KatanaDrop",					"Nothing","Nothing"},	// 6047
		{"AEoDPainkiller","PainkillerDrop",			"Nothing","Nothing"},	// 6028
		{"AEoDStroggArmSaw","StroggArmSawDrop",		"Nothing","Nothing"},	// 6031
		{"AEoDVorpalBlade","VorpalBladeDrop",		"Nothing","Nothing"},	// 6152
		{"AEoDScythe","ScytheDrop",					"Nothing","Nothing"},
		{"AEoDSpyKnife","SpyKnifeDrop",				"Nothing","Nothing"}},
		
		// slot 3, low-tier weapons
		
		{{"Empty","Nothing",						"Nothing","Nothing"},
		{"AEoDShellShocker","ShellShockerDrop",		"Nothing","Nothing"},	// 6125
		{"AEoDDesertEagle","DesertEagleDrop",		"Nothing","Nothing"},	// 6036
		{"AEoDGoldenColts","GoldenColtsDrop",		"Nothing","Nothing"},	// 6037
		{"AEoDMac10","Mac10Drop","AEoDMac10Count","Mac10DropCheck"},		// 6101
		//{"AEoDPistol","PistolDrop",		"Nothing","Nothing"},			// 6067
		{"AEoDSPASShotgun","SPASShotgunDrop",		"Nothing","Nothing"},	// 6068
		{"AEoDMP5","MP5Drop",						"Nothing","Nothing"},	// 6005
		//{"AEoDRubinWand","RubinWandDrop",		"Nothing","Nothing"},		// 6003
		{"AEoDTekbow","TekbowDrop",					"Nothing","Nothing"},	// 6043
		{"AEoDFlareGun","FlareGunDrop","AEoDFlareGunCount","FlareGunDropCheck"},//6114
		{"AEoDCrossbow","CrossbowDrop",				"Nothing","Nothing"},	// 6007
		//{"AEoDElfWand","ElfWandDrop",				"Nothing","Nothing"},	// 6130
		{"AEoDBeretta","BerettaDrop","AEoDBerettaCount","BerettaDropCheck"},// 6129
		{"AEoDGargoyleWand","GargoyleWandDrop",		"Nothing","Nothing"},	// 6100
		//{"AEoDRifle","RifleDrop",		"Nothing","Nothing"},				// 6099
		{"AEoDBlaster","BlasterDrop",				"Nothing","Nothing"},	// 6097
		//{"AEoD357","357Drop",		"Nothing","Nothing"},					// 6098
		{"AEoDAssaultShotgun","AssaultShotgunDrop",	"Nothing","Nothing"},		// 6187
		//{"AEoDFiveSevenPistol","FiveSevenPistolDrop",	"Nothing","Nothing"} // 6045
		},
		
		// slot 4, low-to-mid-tier weapons

		{{"Empty","Nothing",						"Nothing","Nothing"},
		{"AEoDAWP","AWPDrop",						"Nothing","Nothing"},	// 6194
		{"AEoDCMRifle","CMRifleDrop",				"Nothing","Nothing"},	// 6034
		{"AEoDCombatShotgun","CombatShotgunDrop",	"Nothing","Nothing"},	// 6060
		{"AEoDCrystalGun","CrystalGunDrop",			"Nothing","Nothing"},	// 6039
		{"AEoDDemonOrb","DemonOrbDrop",				"Nothing","Nothing"},	// 6044
		{"AEoDSerpentStaff","SerpentStaffDrop",		"Nothing","Nothing"},	// 6016
		{"AEoDBiorifle","BiorifleDrop","AEoDBiorifleCount","BiorifleDropCheck"},// 6040
		{"AEoDDisruptor","DisruptorDrop",			"Nothing","Nothing"},	// 6202
		{"AEoDRiotgun","RiotgunDrop",				"Nothing","Nothing"},	// 6004
		{"AEoDShockRifle","ShockRifleDrop","AEoDShockRifleCount","ShockRifleDropCheck"},// 6102
		{"AEoDDragonClaw","DragonClawDrop","AEoDDragonClawCount","DragonClawDropCheck"},// 6008
		{"AEoDVoodooDoll","VoodooDollDrop",			"Nothing","Nothing"},	// 6091
		{"AEoDBloodShotgun","BloodShotgunDrop","AEoDBloodShotgunCount","BloodShotgunDropCheck"},	// 6186
		{"AEoDDoubleBarreled","DoubleBarreledDrop",	"Nothing","Nothing"},	// 6188
		{"AEoDSniperRifle","SniperRifleDrop",		"Nothing","Nothing"},	// 6064
		{"AEoDCarbine","CarbineDrop",				"Nothing","Nothing"},	// 6160
		{"AEoDBoltGun","BoltGunDrop",				"Nothing","Nothing"},
		{"AEoDPKShotgun","PKShotgunDrop",			"Nothing","Nothing"},
		{"AEoDGasLauncher","GasLauncherDrop",		"Nothing","Nothing"},
		{"AEoDHeadHunter","HeadHunterDrop",			"Nothing","Nothing"},
		{"AEoDBison","BisonDrop",					"Nothing","Nothing"}},

		// slot 5, rapid fire weapons

		{{"Empty","Nothing",						"Nothing","Nothing"},
		{"AEoDFlamethrower","FlamethrowerDrop",		"Nothing","Nothing"},	// 6078
		{"AEoDFreezethrower","FreezethrowerDrop",	"Nothing","Nothing"},	// 6032
		{"AEoDLasergun","LasergunDrop",				"Nothing","Nothing"},	// 6083
		{"AEoDMinigun","MinigunDrop",				"Nothing","Nothing"},	// 6006
		{"AEoDNailGun","NailGunDrop",				"Nothing","Nothing"},	// 6020
		{"AEoDPlasmaRifle","PlasmaRifleDrop",		"Nothing","Nothing"},	// 6072
		{"AEoDWyvernHeart","WyvernHeartDrop",		"Nothing","Nothing"},	// 6090
		//{"AEoDAssaultRifle","AssaultRifleDrop",		"Nothing","Nothing"},	// NO LONGER USED.
		{"AEoDDemonStaff","DemonStaffDrop",			"Nothing","Nothing"},	// 6009
		{"AEoDHyperblaster","HyperblasterDrop",		"Nothing","Nothing"},	// 6052
		{"AEoDNailgunMK2","NailgunMK2Drop",			"Nothing","Nothing"},	// 6103
		{"AEoDSkullRod","SkullRodDrop",				"Nothing","Nothing"},	// 6013
		{"AEoDHornetGun","HornetGunDrop","AEoDHornetGunCount","HornetGunDropCheck"},// 6199
		{"AEoDIceStormRod","IceStormRodDrop","AEoDIceStormRodCount","IceStormRodDropCheck"},// 6026
		{"AEoDGaussGun","GaussGunDrop",				"Nothing","Nothing"},	// 6163
		{"AEoDPeaceMaker","PeaceMakerDrop",			"Nothing","Nothing"}},

		// slot 6, explosives

		{{"Empty","Nothing",						"Nothing","Nothing"},
		{"AEoDHowitzer","HowitzerDrop",				"Nothing","Nothing"},	// 6117
		{"AEoDChickenLauncher","ChickenLauncherDrop","Nothing","Nothing"},	// 6089
		{"AEoDFireStormSpell","FireStormSpellDrop",	"Nothing","Nothing"},	// 6017
		{"AEoDGrenadeLauncher","GrenadeLauncherDrop","Nothing","Nothing"},	// 6056
		{"AEoDWarAxe","WarAxeDrop",					"Nothing","Nothing"},	// 6153
		{"AEoDLightningRod","LightningRodDrop",		"Nothing","Nothing"},	// 6018
		{"AEoDMeteoriteRod","MeteoriteRodDrop",		"Nothing","Nothing"},	// 6014
		{"AEoDRazor","RazorDrop",					"Nothing","Nothing"},	// 6080
		{"AEoDRocketLauncher","RocketLauncherDrop","AEoDRocketLauncherCount","RocketLauncherDropCheck"},		// 6061
		{"AEoDScarabStaff","ScarabStaffDrop",		"Nothing","Nothing"},	// 6077
		{"AEoDMissileLauncher","MissileLauncherDrop","Nothing","Nothing"},	// 6062
		{"AEoDPMFLayer","PMFLayerDrop",				"Nothing","Nothing"},	// 6189
		{"AEoDScreamer","ScreamerDrop",				"Nothing","Nothing"},
		{"AEoDCowMangler","CowManglerDrop",			"Nothing","Nothing"}
		//,{"AEoDEnlightenmentStaff","EnlightenmentStaffDrop"}	// 6132
		},

		// slot 7, mid-to-high-tier weapons

		{{"Empty","Nothing",						"Nothing","Nothing"},
		{"AEoDLifeLeech","LifeLeechDrop",			"Nothing","Nothing"},	// 6133
		{"AEoDTeslaCannon","TeslaCannonDrop","AEoDTeslaCannonCount","TeslaCannonDropCheck"},// 6116
		{"AEoDDevastator","DevastatorDrop","DevastatorCount","DevastatorDropCheck"},// 6042
		{"AEoDPerforator","PerforatorDrop",			"Nothing","Nothing"},	// 6022
		{"AEoDPlutoniumCannon","PlutoniumCannonDrop","Nothing","Nothing"},	// 6082
		{"AEoDThunderBolt","ThunderBoltDrop",		"Nothing","Nothing"},	// 6021
		{"AEoDVulcanCannon","VulcanCannonDrop",		"Nothing","Nothing"},	// 6053
		{"AEoDRipperGun","RipperGunDrop",			"Nothing","Nothing"},	// 6038
		{"AEoDPrismaCannon","PrismaCannonDrop","AEoDPrismaCannonCount","PrismaCannonDropCheck"},// 6104
		{"AEoDPulsegun","PulsegunDrop",				"Nothing","Nothing"},	// 6105
		{"AEoDRaptor","RaptorDrop","AEoDRaptorCount","RaptorDropCheck"},	// 6070
		{"AEoDIncinerator","IncineratorDrop",		"Nothing","Nothing"},	// 6134
		{"AEoDGuardianHead","GuardianHeadDrop",		"Nothing","Nothing"},	// 6135
		{"AEoDIceWand","IceWandDrop",				"Nothing","Nothing"},	// 6076
		{"AEoDArbalest","ArbalestDrop",				"Nothing","Nothing"},	// 6059
		{"AEoDFragLauncher","FragLauncherDrop",		"Nothing","Nothing"},	// 6164
		{"AEoDConcussionLauncher","ConcussionLauncherDrop",	"Nothing","Nothing"},// 6165
		{"AEoDElectroDriver","ElectroDriverDrop",	"Nothing","Nothing"},
		{"AEoDEidechsenesser","EidechsenesserDrop",	"Nothing","Nothing"},
		{"AEoDHailStorm","HailStormDrop",			"Nothing","Nothing"}},

		// slot 8, high-tier weapons

		{{"Empty",					"Nothing",				"Nothing","Nothing"},
		{"AEoDDSparilStaff",		"DsparilStaffDrop",		"Nothing","Nothing"},	// 6081
		{"AEoDNapalmLauncher",		"NapalmLauncherDrop",	"Nothing","Nothing"},	// 6192
		{"AEoDHEGrenadeLauncher",	"HEGrenadeLauncherDrop","Nothing","Nothing"},// 6011
		{"AEoDRailGun",				"RailGunDrop",			"AEoDRailGunCount",		"RailGunDropCheck"},// 6041
		{"AEoDMindBlower",			"MindBlowerDrop",		"Nothing","Nothing"},	// 6049
		{"AEoDIncendiary",			"IncendiaryDrop",		"Nothing","Nothing"},	// 6108
		{"AEoDDeathRay",			"DeathRayDrop",			"Nothing","Nothing"},	// 6107
		{"AEoDFlakCannon",			"FlakCannonDrop",		"AEoDFlakCannonCount",	"FlakCannonDropCheck"},// 6063
		{"AEoDLichStaff",			"LichStaffDrop",		"Nothing","Nothing"},	// 6205
		{"AEoDMorserLauncher",		"MorserLauncherDrop",	"Nothing","Nothing"},	// 6054
		{"AEoDPulseCannon",			"PulseCannonDrop",		"Nothing","Nothing"},	// 6085
		{"AEoDShredderStaff",		"ShredderStaffDrop",	"Nothing","Nothing"},	// 6106
		{"AEoDRavenStaff",			"RavenStaffDrop",		"Nothing","Nothing"},	// 6033
		{"AEoDIonCannon",			"IonCannonDrop",		"Nothing","Nothing"},	// 6001	
		{"AEoDPhalanx",				"PhalanxDrop",			"Nothing","Nothing"},	// 6086
		{"AEoDTomeOfSet",			"TomeOfSetDrop",		"Nothing","Nothing"},	// 6127
		{"AEoDSniperRailgun",		"SniperRailgunDrop",	"Nothing","Nothing"},	// 6161
		{"AEoDBoneDuster",			"BoneDusterDrop",		"Nothing","Nothing"},	
		{"AEoDStakeGun",			"StakeGunDrop",			"Nothing","Nothing"},
		{"AEoDPKSMG",				"PKSMGDrop",			"Nothing","Nothing"},	
		{"AEoDBoneShotgun",			"BoneShotgunDrop",		"Nothing","Nothing"},
		{"AEoDGutFlinger",			"GutFlingerDrop",		"Nothing","Nothing"},
		{"AEoDFlailGun",			"FlailGunDrop",			"Nothing","Nothing"}},

		// slot 9, very-high-tier weapons

		{{"Empty",					"Nothing",					"Nothing","Nothing"},
		{"AEoDSoulReaver",			"SoulReaverDrop",		"Nothing","Nothing"},	// 6122
		{"AEoDGluonGun",			"GluonGunDrop",			"Nothing","Nothing"},	// 6123
		{"AEoDTempestStaff",		"TempestStaffDrop",		"Nothing","Nothing"},	// 6162
		{"AEoDBloodScourge",		"BloodScourgeDrop2",	"Nothing","Nothing"},	// 6025
		{"AEoDHellCore",			"HellCoreDrop",			"Nothing","Nothing"},	// 6015
		{"AEoDHERocketLauncher",	"HERocketLauncherDrop",	"Nothing","Nothing"},// 6048
		{"AEoDPrototype",			"PrototypeDrop",		"Nothing","Nothing"},	// 6084
		{"AEoDRailGunPrototype",	"RailGunPrototypeDrop",	"Nothing","Nothing"},// 6051
		{"AEoDSoulleech",			"SoulleechDrop",		"Nothing","Nothing"},	// 6079
		{"AEoDWraithVerge",			"WraithVergeDrop2",		"Nothing","Nothing"},	// 6027
		{"AEoDCrawler",				"CrawlerDrop",			"Nothing","Nothing"},	// 6030
		{"AEoDPhotonCannon",		"PhotonCannonDrop",		"Nothing","Nothing"},	// 6110
		{"AEoDHellRoot",			"HellRootDrop",			"Nothing","Nothing"},	// 6057
		{"AEoDDrakan",				"DrakanDrop",			"Nothing","Nothing"},	// 6024
		{"AEoDProteusDynamo",		"ProteusDynamoDrop",	"Nothing","Nothing"},	// 6109
		{"AEoDHandCannon",			"HandCannonDrop",		"Nothing","Nothing"},	// 6118
		{"AEoDNecrossbow",			"NecrossbowDrop",		"Nothing","Nothing"},
		{"AEoDPopcornGun",			"PopcornGunDrop",		"Nothing","Nothing"},
		{"AEoDBouncer",				"BouncerDrop",			"Nothing","Nothing"}},

		// slot 0, super weapons

		{{"Empty",				"Nothing",				"Nothing","Nothing"},
		{"AEoDVolcanoCannon",	"VolcanoCannonDrop",	"Nothing","Nothing"},	// 6128
		{"AEoDApocalypse",		"ApocalypseDrop",		"Nothing","Nothing"},	// 6075
		{"AEoDBFG9000",			"BFG9000Drop",			"Nothing","Nothing"},	// 6073
		{"AEoDBioForceGun",		"BioForceGunDrop",		"Nothing","Nothing"},	// 6058
		{"AEoDDarkFlameStaff",	"DarkFlameStaffDrop",	"Nothing","Nothing"},	// 6087
		{"AEoDNova",			"NovaDrop",				"Nothing","Nothing"},	// 6074
		{"AEoDQSG",				"QSGDrop",				"Nothing","Nothing"},	// 6002
		{"AEoDDarkMatterGun",	"DarkMatterGunDrop",	"Nothing","Nothing"},	// 6088
		{"AEoDFusionCannon",	"FusionCannonDrop",		"Nothing","Nothing"},	// 6112
		{"AEoDInferno",			"InfernoDrop",			"Nothing","Nothing"},	// 6111
		{"AEoDRedeemer",		"RedeemerDrop",			"Nothing","Nothing"},	// 6071
		{"AEoDHellHeavenHand",	"HellHeavenHandDrop",	"Nothing","Nothing"},	// 6066
		{"AEoDHandOfGod",		"HandOfGodDrop",		"Nothing","Nothing"},	// 6124
		{"AEoDDeathsHand",		"DeathsHandDrop",		"Nothing","Nothing"},
		{"AEoDPenetrator",		"PenetratorDrop",		"Nothing","Nothing"},	// 6055
		{"AEoDSoulReaper",		"SoulReaperDrop",		"Nothing","Nothing"}}
	};
	
//int wepidentif=0;	// this variable is never used
int togglescript=1;
int scriptactivation=0;

script "s797" enter
{
	int plrnum = PlayerNumber();
	if(!(GetUserCvar(plrnum,"user_WeaponSlotLimits")))
	{
		TakeInventory("LimitScriptCheck",1000);
		TakeInventory("LimitScriptActive",1000);
	}
	else
	{
		GiveInventory("LimitScriptCheck",1);
		GiveInventory("LimitScriptActive",1);
	}
}

script "s798" (int slotmsg)		//slot x full
{
	hudmessage(s:"Slot ",
		   d:slotmsg,
		   s:" full";
	HUDMSG_FADEOUT,100,3,0.5,0.8,2.0,0.5);
}

script "s799" (int wepnumber)		//identifies which weapon(of the arrangement) being is used 
{
	/*
	wepidentif=wepnumber;	// this number is never used
	
	//And from here, it starts checking if player has a weapon but not it's item, if so, then player got it
	//by cheating. See script 689 at the bottom of this same file
	
	for(int slot=0; slot<=9; slot++)	// cycling through weapon slots
		for(int wep=1; wep<32; wep++)	// cycling through weapons of each slot
			if (CheckInventory(Weaps[slot][wep][0]))	// if has weapon
				if (!CheckInventory(Weaps[slot][wep][1])) // but not the drop
				{
					scriptactivation=1;		// prepare your ears
					ACS_NamedExecute("s689",0,0,0,0);
					slot=10;wep=33;	// cycles end
				}
	*/
				
	// Does nothing instead.
	// Anti-cheat system is disabled for now.
}

// weapon drop scripts

script "s800" (void)		//this one, well, is another part of the dropping script
{
	GiveInventory("WeaponSoundStopper",1);
	
	for(int slot=0; slot<=9; slot++)	// cycling through weapon slots
		for(int wep=1; wep<32; wep++)	// cycling through weapons of each slot
			if(CheckWeapon(Weaps[slot][wep][0]))	// if player's holding it--
			{
				if(Weaps[slot][wep][2] != Weaps[0][0][1] &&	// if the akimbo counter isn't "nothing"
				   CheckInventory(Weaps[slot][wep][2]) > 1) // AND if you have more than one...
						GiveInventory(Weaps[slot][wep][3],1); // give akimbo-drop-checker
				else	// if that multi-wieldable was the last one, OR
				{		// if the akimbo counter is "nothing" (weapon isn't dual-wieldable)
					TakeInventory(Weaps[slot][wep][0], 1);	// take weapon
					TakeInventory(strparam(s:"Weapon", d:(slot+1) ,s:"Count"),1);	// take token
				}
				GiveInventory(Weaps[slot][wep][1],1); 	// get dropper
				UseInventory(Weaps[slot][wep][1]);		// use dropper
				slot=10;wep=33;	// go away
			}
}


script "WeaponSlotToggle" (void)		//the script that changes the Limits to "on" or "off". Activated through a bound key in the menu.
{
	int plrnum = PlayerNumber();
	if(!(GetUserCvar(plrnum,"user_WeaponSlotLimits")))
	{
		PrintBold(s:"weapon slot limits ON");
		SetUserCvar(plrnum,"user_WeaponSlotLimits",1);
		GiveInventory("LimitScriptActive",1);
	}
	else
	{
		PrintBold(s:"weapon slot limits OFF");
		SetUserCvar(plrnum,"user_WeaponSlotLimits",0);
		TakeInventory("LimitScriptActive",1000);
	}
}

Script "WeaponSlotLimitCheck" (int class) //Checks to see what the current max of the current category is.
{
	int plrnum = PlayerNumber();
	
	if (GetUserCvar(plrnum,"user_WeaponSlotLimits") == 1)
	{
		if (!CheckInventory("LimitScriptActive"))
			GiveInventory("LimitScriptActive",1);
		switch(class)
		{
		case 0:
			if (CheckInventory("Weapon0Count") >= GetUserCvar(plrnum,"user_MaxWeapons0"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		case 1:
			if (CheckInventory("Weapon1Count") >= GetUserCvar(plrnum,"user_MaxWeapons1"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		case 2:
			if (CheckInventory("Weapon2Count") >= GetUserCvar(plrnum,"user_MaxWeapons2"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		case 3:
			if (CheckInventory("Weapon3Count") >= GetUserCvar(plrnum,"user_MaxWeapons3"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		case 4:
			if (CheckInventory("Weapon4Count") >= GetUserCvar(plrnum,"user_MaxWeapons4"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		case 5:
			if (CheckInventory("Weapon5Count") >= GetUserCvar(plrnum,"user_MaxWeapons5"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		case 6:
			if (CheckInventory("Weapon6Count") >= GetUserCvar(plrnum,"user_MaxWeapons6"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		case 7:
			if (CheckInventory("Weapon7Count") >= GetUserCvar(plrnum,"user_MaxWeapons7"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		case 8:
			if (CheckInventory("Weapon8Count") >= GetUserCvar(plrnum,"user_MaxWeapons8"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		case 9:
			if (CheckInventory("Weapon9Count") >= GetUserCvar(plrnum,"user_MaxWeapons9"))
			{	SetResultValue(0);	Terminate;	}
			Break;
		}
		SetResultValue(1);
		Terminate;
	}
	else
	{
		//PrintBold(s:"Weapon Slots Off");
		TakeInventory("LimitScriptActive",1000);
		SetResultValue(1);
	}
}


//==============================================================================
//	Weapon Slot Customization
//	Developed by Major Cooke
//==============================================================================

Script "SelectAEoDWeapon" (int class)
{
	if ((GetActorProperty(0,APROP_Dormant)) || (GetActorProperty(0,APROP_HEALTH) <= 0)
		|| CheckInventory("cammin") > 0 || (GetWeapon() == "AEoDDemonMorphHand"))	Terminate;
	int plrnum = PlayerNumber();
	int curslot;
	int slotmax;
	str testconcat;
	int wep;
	int cycle = 0;
	bool rep = false;
	Switch(class)
	{
	Case 10:
	Case 0:
		if (!CheckInventory("Weapon0Count"))	Terminate;	//No weapons, no switching.
		slotmax = GetCvar("user_AEWeaps10"); //Get the current maximum number of weapons available in that category.	
		curslot = 9;
		break;
	}
	str curWeap = GetWeapon();	
	//Now, populate it with the chosen slot's weapon names and numbers.
	for (int t = 1; t < slotmax; t++)
	{
		testconcat = strparam(s:"user_",s:Weaps[curslot][t][0]);
		wep = GetUserCvar(plrnum,testconcat);
		Weaps[curslot][t][4] = wep;
		if (curWeap == Weaps[curslot][t][0])
			cycle = wep;
	}
	
	log(s:"cycle = ",i:cycle,s:"\nslotmax = ",i:slotmax,s:"\nrep = ",i:rep,s:"\ncurslot = ",i:curslot);
	//Now try to go through.
	//
	//If the weapon id and the cycle match, attempt to switch.
	for (int z = cycle+1; z != cycle; z++)
	{
		if (z > slotmax)
		{
			z = 1;
			rep = true;
		}
		if (rep && (z > slotmax))
		{
			PrintBold(s:"Failed to find weapon or something broke.");
			Terminate;
		}
		log(s:"  z = ",d:z,s:"    cycle = ",d:cycle);
		for (t = 1; t < slotmax; t++)
		{
			log(s:"    t = ",d:t,s:"    slotmax = ",d:slotmax);
			if (Weaps[curslot][t][4] == z)
				if (SetWeapon(Weaps[curslot][t][0]))
					Terminate;
				else
					log(s:"    setweapon failed!");
		}
	}
}

Function int AToI (str s) //Courtesy of DaZombieKiller (or The Zombie Killer)
{
   str a = "";
   int i, i2, n;
   int l = StrLen(s);
   for (i = 0; i < l; i++)
   {
      for (i2 = 0; i2 < 10; i2++)
      {
         a = StrParam(i:i2);
         if (!StrCmpZan(StrParam(c:GetChar(s, i)), a))
            n += i2 * Power(10, l - i - 1);
      }
   }
   return n;
}

Function bool StrCmpZan (str s1, str s2)
{
   int c1 = GetChar(s1, 0);
   int c2 = GetChar(s2, 0);
   if (c1 == c2)
      return false;
   return true;
}

Function int Power (int num, int pwr)
{
   int n = num;
   if (pwr == 0)
      return 1;
   for (int i = 1; i < pwr; i++)
      num *= n;
   return num;
}